"use strict";
/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunkleaf_vue"] = self["webpackChunkleaf_vue"] || []).push([["form-browser-view"],{

/***/ "./src/common/components/LeafFormDialog.js":
/*!*************************************************!*\
  !*** ./src/common/components/LeafFormDialog.js ***!
  \*************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("{__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({\n  data: function data() {\n    return {\n      scrollY: window.scrollY,\n      initialTop: 15,\n      modalElementID: 'leaf_dialog_content',\n      modalBackgroundID: 'leaf-vue-dialog-background',\n      elBody: null,\n      elModal: null,\n      elBackground: null,\n      elClose: null,\n      lastFocus: null\n    };\n  },\n  inject: ['dialogTitle', 'closeFormDialog', 'formSaveFunction', 'dialogButtonText', 'lastModalTab'],\n  created: function created() {\n    this.lastFocus = document.activeElement || null;\n  },\n  mounted: function mounted() {\n    this.elBody = document.querySelector('body');\n    this.elModal = document.getElementById(this.modalElementID);\n    this.elModal.style.left = window.scrollX + window.innerWidth / 2 - this.elModal.clientWidth / 2 + 'px';\n    this.elBackground = document.getElementById(this.modalBackgroundID);\n    this.elClose = document.getElementById('leaf-vue-dialog-close');\n    this.makeDraggable(this.elModal);\n    //if there is not already an active el in the modal, focus the close button\n    var activeEl = document.activeElement;\n    var closestLeafDialog = activeEl !== null ? activeEl.closest('.leaf-vue-dialog-content') : null;\n    if (closestLeafDialog === null) {\n      this.elClose.focus();\n    }\n  },\n  beforeUnmount: function beforeUnmount() {\n    var _this$lastFocus;\n    //refocus last item.  some events can cause a remount so try to select the el from its id first\n    var lastID = ((_this$lastFocus = this.lastFocus) === null || _this$lastFocus === void 0 ? void 0 : _this$lastFocus.id) || null;\n    if (lastID !== null) {\n      var lastEl = document.getElementById(lastID);\n      if (lastEl !== null) {\n        lastEl.focus();\n      }\n    } else if (this.lastFocus !== null) {\n      this.lastFocus.focus();\n    }\n  },\n  methods: {\n    firstTab: function firstTab(event) {\n      if ((event === null || event === void 0 ? void 0 : event.shiftKey) === true) {\n        var modCancel = document.querySelector('#ifthen_deletion_dialog button.btn-general');\n        var next = document.getElementById('next');\n        var cancel = document.getElementById('button_cancelchange');\n        var last = modCancel || next || cancel;\n        if (last !== null && typeof last.focus === 'function') {\n          last.focus();\n          event.preventDefault();\n        }\n      }\n    },\n    /**\r\n     * makes the modal draggable\r\n     * @param {Object} el DOM element\r\n     */\n    makeDraggable: function makeDraggable() {\n      var _this = this;\n      var el = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      var pos1 = 0;\n      var pos2 = 0;\n      var mouseX = 0;\n      var mouseY = 0;\n      var elementDrag = function elementDrag(e) {\n        e = e || window.event;\n        e.preventDefault();\n        pos1 = mouseX - e.clientX;\n        pos2 = mouseY - e.clientY;\n        mouseX = e.clientX;\n        mouseY = e.clientY;\n        el.style.top = el.offsetTop - pos2 + \"px\";\n        el.style.left = el.offsetLeft - pos1 + \"px\";\n        checkBounds();\n      };\n      var closeDragElement = function closeDragElement() {\n        document.onmouseup = null;\n        document.onmousemove = null;\n      };\n      var dragMouseDown = function dragMouseDown(e) {\n        e = e || window.event;\n        e.preventDefault();\n        mouseX = e.clientX;\n        mouseY = e.clientY;\n        document.onmouseup = closeDragElement;\n        document.onmousemove = elementDrag;\n      };\n      var checkBounds = function checkBounds() {\n        var scrollbarWidth = 18;\n        if (el.offsetTop < window.scrollY) {\n          el.style.top = window.scrollY + 'px';\n        }\n        if (el.offsetLeft < window.scrollX) {\n          el.style.left = window.scrollX + 'px';\n        }\n        if (el.offsetLeft + el.clientWidth + scrollbarWidth > window.innerWidth + window.scrollX) {\n          el.style.left = window.innerWidth + window.scrollX - el.clientWidth - scrollbarWidth + 'px';\n        }\n        _this.elBackground.style.minWidth = _this.elBody.clientWidth + 'px';\n        _this.elBackground.style.minHeight = _this.elModal.offsetTop + _this.elBody.clientHeight + 'px';\n      };\n      if (document.getElementById(this.modalElementID + \"_drag_handle\")) {\n        document.getElementById(this.modalElementID + \"_drag_handle\").onmousedown = dragMouseDown;\n      }\n    }\n  },\n  template: \"<Teleport to=\\\"body\\\">\\n        <div id=\\\"leaf-vue-dialog-background\\\" aria-disabled=\\\"true\\\" aria-hidden=\\\"true\\\"></div>\\n        <div :id=\\\"modalElementID\\\" class=\\\"leaf-vue-dialog\\\"\\n            role=\\\"dialog\\\" aria-modal=\\\"true\\\" :aria-labelledby=\\\"modalElementID + '_drag_handle'\\\" aria-describedby=\\\"record\\\"\\n            :style=\\\"{top: scrollY + initialTop + 'px'}\\\">\\n            <div v-html=\\\"dialogTitle\\\" :id=\\\"modalElementID + '_drag_handle'\\\" class=\\\"leaf-vue-dialog-title\\\"></div>\\n            <button type=\\\"button\\\" @click=\\\"closeFormDialog\\\" @keydown.tab=\\\"firstTab\\\" id=\\\"leaf-vue-dialog-close\\\" aria-label=\\\"Close\\\">&#10005;</button>\\n            <div id=\\\"record\\\" style=\\\"max-height:100vh;overflow-y:auto\\\">\\n                <div id=\\\"xhr\\\" class=\\\"leaf-vue-dialog-content\\\">\\n                    <slot name=\\\"dialog-content-slot\\\"></slot>\\n                </div>\\n                <div id=\\\"leaf-vue-dialog-cancel-save\\\">\\n                    <button type=\\\"button\\\" style=\\\"width: 90px;\\\"\\n                        id=\\\"button_save\\\" class=\\\"btn-confirm\\\" :title=\\\"dialogButtonText.confirm\\\"\\n                        @click=\\\"formSaveFunction\\\">\\n                        {{dialogButtonText.confirm}}\\n                    </button>\\n                    <button type=\\\"button\\\" style=\\\"width: 90px;\\\"\\n                        id=\\\"button_cancelchange\\\" class=\\\"btn-general\\\" :title=\\\"dialogButtonText.cancel\\\"\\n                        @click=\\\"closeFormDialog\\\" @keydown.tab=\\\"lastModalTab\\\">\\n                        {{dialogButtonText.cancel}}\\n                    </button>\\n                </div>\\n            </div>\\n        </div>\\n    </Teleport>\"\n});\n\n//# sourceURL=webpack://leaf_vue/./src/common/components/LeafFormDialog.js?\n}");

/***/ }),

/***/ "./src/form_editor/components/BrowserMenu.js":
/*!***************************************************!*\
  !*** ./src/form_editor/components/BrowserMenu.js ***!
  \***************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("{__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({\n  name: 'browser-menu',\n  inject: ['siteSettings', 'openNewFormDialog', 'openImportFormDialog'],\n  template: \"<div><nav id=\\\"top-menu-nav\\\">\\n        <!-- FORM BROWSER AND RESTORE FIELDS MENU -->\\n        <ul>\\n            <li>\\n                <button type=\\\"button\\\" id=\\\"createFormButton\\\" @click=\\\"openNewFormDialog()\\\">\\n                    <span role=\\\"img\\\" aria-hidden=\\\"true\\\" alt=\\\"\\\">\\uD83D\\uDCC4&nbsp;</span>Create Form\\n                </button>\\n            </li>\\n            <li>\\n                <a href=\\\"./?a=formLibrary\\\" class=\\\"router-link\\\"><span role=\\\"img\\\" aria-hidden=\\\"true\\\" alt=\\\"\\\">\\uD83D\\uDCD8&nbsp;</span>LEAF Library</a>\\n            </li>\\n            <li>\\n                <button type=\\\"button\\\" @click=\\\"openImportFormDialog\\\">\\n                    <span role=\\\"img\\\" aria-hidden=\\\"true\\\" alt=\\\"\\\">\\uD83D\\uDCE6&nbsp;</span>Import Form\\n                </button>\\n            </li>\\n            <li>\\n                <router-link :to=\\\"{ name: 'restore' }\\\" class=\\\"router-link\\\" >\\n                    <span role=\\\"img\\\" aria-hidden=\\\"true\\\" alt=\\\"\\\">\\u267B\\uFE0F&nbsp;</span>Restore Fields\\n                </router-link>\\n            </li>\\n        </ul>\\n    </nav>\\n    <div v-if=\\\"siteSettings?.siteType==='national_subordinate'\\\" id=\\\"subordinate_site_warning\\\" style=\\\"padding: 0.5rem; margin: 0.5rem 0;\\\" >\\n        <h3 style=\\\"margin: 0 0 0.5rem 0; color: #a00;\\\">This is a Nationally Standardized Subordinate Site</h3>\\n        <span><b>Do not make modifications!</b> &nbsp;Synchronization problems will occur. &nbsp;Please contact your process POC if modifications need to be made.</span>\\n    </div></div>\"\n});\n\n//# sourceURL=webpack://leaf_vue/./src/form_editor/components/BrowserMenu.js?\n}");

/***/ }),

/***/ "./src/form_editor/components/CategoryItem.js":
/*!****************************************************!*\
  !*** ./src/form_editor/components/CategoryItem.js ***!
  \****************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("{__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\nfunction _typeof(o) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, _typeof(o); }\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nfunction _defineProperty(e, r, t) { return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, { value: t, enumerable: !0, configurable: !0, writable: !0 }) : e[r] = t, e; }\nfunction _toPropertyKey(t) { var i = _toPrimitive(t, \"string\"); return \"symbol\" == _typeof(i) ? i : i + \"\"; }\nfunction _toPrimitive(t, r) { if (\"object\" != _typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || \"default\"); if (\"object\" != _typeof(i)) return i; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (\"string\" === r ? String : Number)(t); }\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({\n  name: 'category-item',\n  props: {\n    categoriesRecord: Object,\n    availability: String\n  },\n  inject: ['APIroot', 'CSRFToken', 'libsPath', 'categories', 'updateCategoriesProperty', 'decodeAndStripHTML', 'allStapledFormCatIDs'],\n  computed: {\n    workflowID: function workflowID() {\n      return parseInt(this.categoriesRecord.workflowID);\n    },\n    catID: function catID() {\n      return this.categoriesRecord.categoryID;\n    },\n    stapledForms: function stapledForms() {\n      var _this = this;\n      var stapledForms = [];\n      this.categoriesRecord.stapledFormIDs.forEach(function (id) {\n        return stapledForms.push(_objectSpread({}, _this.categories[id]));\n      });\n      stapledForms = stapledForms.sort(function (eleA, eleB) {\n        return eleA.sort - eleB.sort;\n      });\n      return stapledForms;\n    },\n    isStapledToOtherForm: function isStapledToOtherForm() {\n      var _this$allStapledFormC;\n      return ((_this$allStapledFormC = this.allStapledFormCatIDs) === null || _this$allStapledFormC === void 0 ? void 0 : _this$allStapledFormC[this.catID]) > 0;\n    },\n    /**\r\n     * @returns {string} form name / description\r\n     */\n    categoryName: function categoryName() {\n      return this.decodeAndStripHTML(this.categoriesRecord.categoryName || 'Untitled');\n    },\n    formDescription: function formDescription() {\n      return this.decodeAndStripHTML(this.categoriesRecord.categoryDescription);\n    },\n    /**\r\n     * \r\n     * @returns {string} workflow ID and description\r\n     */\n    workflowDescription: function workflowDescription() {\n      var msg = '';\n      if (this.workflowID > 0) {\n        msg = \"\".concat(this.categoriesRecord.workflowDescription || 'No Description', \" (#\").concat(this.categoriesRecord.workflowID, \")\");\n      } else {\n        msg = 'No Workflow';\n      }\n      return this.decodeAndStripHTML(msg);\n    }\n  },\n  methods: {\n    updateSort: function updateSort() {\n      var _this2 = this;\n      var event = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      var categoryID = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';\n      var sortValue = parseInt(event.currentTarget.value);\n      if (isNaN(sortValue)) return;\n      if (sortValue < -128) {\n        sortValue = -128;\n        event.currentTarget.value = -128;\n      }\n      if (sortValue > 127) {\n        sortValue = 127;\n        event.currentTarget.value = 127;\n      }\n      $.ajax({\n        type: 'POST',\n        url: \"\".concat(this.APIroot, \"formEditor/formSort\"),\n        data: {\n          sort: sortValue,\n          categoryID: categoryID,\n          CSRFToken: this.CSRFToken\n        },\n        success: function success() {\n          _this2.updateCategoriesProperty(categoryID, 'sort', sortValue);\n        },\n        error: function error(err) {\n          return console.log('sort post err', err);\n        }\n      });\n    }\n  },\n  template: \"<tr :id=\\\"catID\\\" :title=\\\"catID + ': ' + categoryName\\\">\\n            <td height=\\\"40\\\" class=\\\"form-name\\\">\\n                <router-link :to=\\\"{ name: 'category', query: { formID: catID }}\\\">\\n                {{ categoryName }}\\n                </router-link>\\n            </td>\\n            <td class=\\\"formPreviewDescription\\\">{{ formDescription }}</td>\\n            <td v-if=\\\"availability !== 'supplemental'\\\" style=\\\"height: 40px; padding: 0\\\"><a :href=\\\"'?a=workflow&workflowID='+ workflowID\\\">{{ workflowDescription }}</a></td>\\n            <td v-else>\\n                <div v-if=\\\"isStapledToOtherForm\\\" style=\\\"display: flex; justify-content: center;\\\">\\n                    <span role=\\\"img\\\" aria=\\\"\\\">\\uD83D\\uDCD1</span>&nbsp;Stapled\\n                </div>\\n            </td>\\n            <td>\\n                <div v-if=\\\"parseInt(categoriesRecord.needToKnow) === 1\\\" class=\\\"need-to-know-enabled\\\">\\n                    <img :src=\\\"libsPath + 'dynicons/svg/emblem-readonly.svg'\\\" alt=\\\"\\\" style=\\\"width:20px;height:20px;margin-right:2px\\\"/>\\n                    &nbsp;<em>Need to Know enabled</em>\\n                </div>\\n            </td>\\n            <td>\\n                <input type=\\\"number\\\" @change=\\\"updateSort($event, catID)\\\"\\n                    :id=\\\"'form_sort_input_' + catID\\\"\\n                    :aria-labelledby=\\\"availability + '_sort'\\\"\\n                    :value=\\\"categoriesRecord.sort\\\" min=\\\"-128\\\" max=\\\"127\\\"\\n                    style=\\\"width: 100%; min-width:50px;\\\" />\\n            </td>\\n        </tr>\\n        <template v-if=\\\"stapledForms.length > 0\\\">\\n            <tr v-for=\\\"form in stapledForms\\\" :key=\\\"catID + '_stapled_with_' + form.categoryID\\\" class=\\\"sub-row\\\">\\n                <td height=\\\"36\\\" class=\\\"form-name\\\">\\n                    <router-link :to=\\\"{ name: 'category', query: { formID: form.categoryID }}\\\" class=\\\"router-link\\\">\\n                        <span role=\\\"img\\\" aria=\\\"\\\">\\uD83D\\uDCCC&nbsp;</span>\\n                        <span style=\\\"text-decoration:underline;\\\">{{ categories[form.categoryID].categoryName || 'Untitled' }}</span>\\n                    </router-link>\\n                </td>\\n                <td>{{ categories[form.categoryID].categoryDescription }}</td>\\n                <td></td>\\n                <td>\\n                    <div v-if=\\\"parseInt(categories[form.categoryID].needToKnow) === 1\\\" class=\\\"need-to-know-enabled\\\">\\n                        <img :src=\\\"libsPath + 'dynicons/svg/emblem-readonly.svg'\\\" alt=\\\"\\\" style=\\\"width: 20px;margin-right:2px\\\"/>\\n                        &nbsp;<em>Need to Know enabled</em>\\n                    </div>\\n                </td>\\n                <td>\\n                    <input type=\\\"number\\\" @change=\\\"updateSort($event, form.categoryID)\\\"\\n                        :id=\\\"'form_sort_input_' + catID + '_' + form.categoryID\\\"\\n                        :aria-labelledby=\\\"availability + '_sort'\\\"\\n                        :value=\\\"categories[form.categoryID].sort\\\" min=\\\"-128\\\" max=\\\"127\\\"\\n                        style=\\\"width: 100%; min-width:50px;\\\" />\\n                </td>\\n            </tr>\\n        </template>\"\n});\n\n//# sourceURL=webpack://leaf_vue/./src/form_editor/components/CategoryItem.js?\n}");

/***/ }),

/***/ "./src/form_editor/components/FormBrowser.js":
/*!***************************************************!*\
  !*** ./src/form_editor/components/FormBrowser.js ***!
  \***************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("{__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _CategoryItem__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./CategoryItem */ \"./src/form_editor/components/CategoryItem.js\");\nfunction _typeof(o) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, _typeof(o); }\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nfunction _defineProperty(e, r, t) { return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, { value: t, enumerable: !0, configurable: !0, writable: !0 }) : e[r] = t, e; }\nfunction _toPropertyKey(t) { var i = _toPrimitive(t, \"string\"); return \"symbol\" == _typeof(i) ? i : i + \"\"; }\nfunction _toPrimitive(t, r) { if (\"object\" != _typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || \"default\"); if (\"object\" != _typeof(i)) return i; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (\"string\" === r ? String : Number)(t); }\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({\n  name: 'form-browser',\n  inject: ['appIsLoadingCategories', 'showCertificationStatus', 'secureStatusText', 'secureBtnText', 'secureBtnLink', 'categories'],\n  components: {\n    CategoryItem: _CategoryItem__WEBPACK_IMPORTED_MODULE_0__[\"default\"]\n  },\n  computed: {\n    /**\r\n     * @returns {array} of non-internal forms that have workflows and are available\r\n     */\n    activeForms: function activeForms() {\n      var active = [];\n      for (var c in this.categories) {\n        if (this.categories[c].parentID === '' && parseInt(this.categories[c].workflowID) !== 0 && parseInt(this.categories[c].visible) === 1) {\n          active.push(_objectSpread({}, this.categories[c]));\n        }\n      }\n      active = active.sort(function (eleA, eleB) {\n        return eleA.sort - eleB.sort;\n      });\n      return active;\n    },\n    /**\r\n     * @returns {array} of non-internal forms that have workflows and are hidden\r\n     */\n    inactiveForms: function inactiveForms() {\n      var inactive = [];\n      for (var c in this.categories) {\n        if (this.categories[c].parentID === '' && parseInt(this.categories[c].workflowID) !== 0 && parseInt(this.categories[c].visible) < 1) {\n          inactive.push(_objectSpread({}, this.categories[c]));\n        }\n      }\n      inactive = inactive.sort(function (eleA, eleB) {\n        return eleA.sort - eleB.sort;\n      });\n      return inactive;\n    },\n    /**\r\n     * @returns {array} of non-internal forms that have no workflows\r\n     */\n    supplementalForms: function supplementalForms() {\n      var supplementalForms = [];\n      for (var c in this.categories) {\n        if (this.categories[c].parentID === '' && parseInt(this.categories[c].workflowID) === 0) {\n          supplementalForms.push(_objectSpread({}, this.categories[c]));\n        }\n      }\n      supplementalForms = supplementalForms.sort(function (eleA, eleB) {\n        return eleA.sort - eleB.sort;\n      });\n      return supplementalForms;\n    }\n  },\n  template: \"<template v-if=\\\"appIsLoadingCategories === false\\\">\\n        <!-- secure form section -->\\n        <div v-if=\\\"showCertificationStatus\\\" id=\\\"secure_forms_info\\\" style=\\\"padding: 8px; background-color: #a00; margin-bottom:1em;\\\">\\n            <span id=\\\"secureStatus\\\" style=\\\"font-size: 120%; padding: 4px; color: white; font-weight: bold;\\\">{{secureStatusText}}</span>\\n            <a id=\\\"secureBtn\\\" :href=\\\"secureBtnLink\\\" target=\\\"_blank\\\" class=\\\"buttonNorm\\\">{{secureBtnText}}</a>\\n        </div>\\n        \\n        <!-- form browser tables -->\\n        <div id=\\\"form_browser_tables\\\">\\n            <h3>Active Forms:</h3>\\n            <table v-if=\\\"activeForms.length > 0\\\" id=\\\"active_forms\\\">\\n                <thead>\\n                    <tr class=\\\"header-row\\\">\\n                        <th id=\\\"active_name\\\" style=\\\"width:250px\\\">Form Name</th>\\n                        <th style=\\\"width:400px\\\">Description</th>\\n                        <th style=\\\"width:250px\\\">Workflow</th>\\n                        <th style=\\\"width:125px\\\">Need to Know</th>\\n                        <th id=\\\"active_sort\\\" style=\\\"width:80px\\\">Priority</th>\\n                    </tr>\\n                </thead>\\n                <tbody>\\n                    <category-item v-for=\\\"c in activeForms\\\"\\n                        :categories-record=\\\"c\\\"\\n                        availability=\\\"active\\\"\\n                        :key=\\\"'active_' + c.categoryID\\\">\\n                    </category-item>\\n                </tbody>\\n            </table>\\n            <p v-else style=\\\"margin-bottom: 2rem;\\\">No Active Forms</p>\\n\\n            <h3>Inactive Forms:</h3>\\n            <table v-if=\\\"inactiveForms.length > 0\\\" id=\\\"inactive_forms\\\">\\n                <thead>\\n                    <tr class=\\\"header-row\\\">\\n                        <th id=\\\"inactive_name\\\" style=\\\"width:250px\\\">Form Name</th>\\n                        <th style=\\\"width:400px\\\">Description</th>\\n                        <th style=\\\"width:250px\\\">Workflow</th>\\n                        <th style=\\\"width:125px\\\">Need to Know</th>\\n                        <th id=\\\"inactive_sort\\\" style=\\\"width:80px\\\">Priority</th>\\n                    </tr>\\n                </thead>\\n                <tbody>\\n                    <category-item v-for=\\\"c in inactiveForms\\\"\\n                        :categories-record=\\\"c\\\"\\n                        availability=\\\"inactive\\\"\\n                        :key=\\\"'inactive_' + c.categoryID\\\">\\n                    </category-item>\\n                </tbody>\\n            </table>\\n            <p v-else style=\\\"margin-bottom: 2rem;\\\">No Inactive Forms</p>\\n\\n            <h3>Supplemental Forms:</h3>\\n            <table v-if=\\\"supplementalForms.length > 0\\\" id=\\\"supplemental_forms\\\">\\n                <thead>\\n                    <tr class=\\\"header-row\\\">\\n                        <th id=\\\"supplemental_name\\\" style=\\\"width:250px\\\">Form Name</th>\\n                        <th style=\\\"width:400px\\\">Description</th>\\n                        <th style=\\\"width:250px\\\">Staple Status</th>\\n                        <th style=\\\"width:125px\\\">Need to Know</th>\\n                        <th id=\\\"supplemental_sort\\\" style=\\\"width:80px\\\">Priority</th>\\n                    </tr>\\n                </thead>\\n                <tbody>\\n                    <category-item v-for=\\\"c in supplementalForms\\\"\\n                        :categories-record=\\\"c\\\"\\n                        availability=\\\"supplemental\\\"\\n                        :key=\\\"'supplement_' + c.categoryID\\\">\\n                    </category-item>\\n                </tbody>\\n            </table>\\n            <p v-else style=\\\"margin-bottom: 2rem;\\\">No Supplemental Forms</p>\\n        </div>\\n\\n        <h3 style=\\\"margin-top: 4rem\\\">\\n            <a href=\\\"./?a=form\\\" class=\\\"leaf-crumb-link\\\" style=\\\"margin-left: auto\\\">Use Original Form Editor</a>\\n        </h3>\\n    </template>\"\n});\n\n//# sourceURL=webpack://leaf_vue/./src/form_editor/components/FormBrowser.js?\n}");

/***/ }),

/***/ "./src/form_editor/components/dialog_content/ImportFormDialog.js":
/*!***********************************************************************!*\
  !*** ./src/form_editor/components/dialog_content/ImportFormDialog.js ***!
  \***********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("{__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({\n  name: 'import-form-dialog',\n  data: function data() {\n    return {\n      initialFocusElID: 'formPacket',\n      files: null,\n      userMessage: '',\n      inputStyles: {\n        padding: \"1.25rem 0.5rem\",\n        border: \"1px solid #cadff0\",\n        borderRadius: \"2px\",\n        backgroundColor: \"#f2f2f8\"\n      }\n    };\n  },\n  inject: ['APIroot', 'CSRFToken', 'setDialogSaveFunction', 'closeFormDialog'],\n  created: function created() {\n    this.setDialogSaveFunction(this.onSave);\n  },\n  mounted: function mounted() {\n    document.getElementById(this.initialFocusElID).focus();\n  },\n  emits: ['import-form'],\n  methods: {\n    onSave: function onSave() {\n      var _this = this;\n      if (this.files !== null) {\n        this.userMessage = \"Form is being imported ...\";\n        var pkg = new FormData();\n        pkg.append('formPacket', this.files[0]);\n        pkg.append('CSRFToken', this.CSRFToken);\n        $.ajax({\n          type: 'POST',\n          url: \"\".concat(this.APIroot, \"formStack/import\"),\n          processData: false,\n          contentType: false,\n          cache: false,\n          data: pkg,\n          success: function success(res) {\n            var formReg = /^form_[0-9a-f]{5}$/i;\n            if (formReg.test(res) !== true) {\n              alert(res);\n            }\n            _this.closeFormDialog();\n            _this.$emit('import-form', res);\n          },\n          error: function error(err) {\n            return console.log('form import error', err);\n          }\n        });\n      } else {\n        console.log('no attachment');\n      }\n    },\n    attachForm: function attachForm() {\n      var _e$target, _e$dataTransfer;\n      var e = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      var files = ((_e$target = e.target) === null || _e$target === void 0 ? void 0 : _e$target.files) || ((_e$dataTransfer = e.dataTransfer) === null || _e$dataTransfer === void 0 ? void 0 : _e$dataTransfer.files);\n      if ((files === null || files === void 0 ? void 0 : files.length) > 0) {\n        this.files = files;\n      }\n    }\n  },\n  template: \"\\n            <div id=\\\"file_control\\\" style=\\\"margin: 1em 0; min-height: 50px;\\\">\\n                <label for=\\\"formPacket\\\">Select LEAF Form Packet to import:</label>\\n                <input id=\\\"formPacket\\\" name=\\\"formPacket\\\" type=\\\"file\\\" @change=\\\"attachForm\\\" :style=inputStyles />\\n                <div v-if=\\\"userMessage\\\" style=\\\"padding: 0.5rem 0\\\"><b>{{ userMessage }}</b></div>\\n            </div>\"\n});\n\n//# sourceURL=webpack://leaf_vue/./src/form_editor/components/dialog_content/ImportFormDialog.js?\n}");

/***/ }),

/***/ "./src/form_editor/components/dialog_content/NewFormDialog.js":
/*!********************************************************************!*\
  !*** ./src/form_editor/components/dialog_content/NewFormDialog.js ***!
  \********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("{__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({\n  name: 'new-form-dialog',\n  data: function data() {\n    return {\n      requiredDataProperties: ['parentID'],\n      categoryName: '',\n      categoryDescription: '',\n      newFormParentID: this.dialogData.parentID\n    };\n  },\n  inject: ['APIroot', 'CSRFToken', 'decodeAndStripHTML', 'setDialogSaveFunction', 'dialogData', 'checkRequiredData', 'addNewCategory', 'closeFormDialog'],\n  created: function created() {\n    this.checkRequiredData(this.requiredDataProperties);\n    this.setDialogSaveFunction(this.onSave);\n  },\n  mounted: function mounted() {\n    document.getElementById('name').focus();\n  },\n  emits: ['get-form'],\n  computed: {\n    nameCharsRemaining: function nameCharsRemaining() {\n      return Math.max(50 - this.categoryName.length, 0);\n    },\n    descrCharsRemaining: function descrCharsRemaining() {\n      return Math.max(255 - this.categoryDescription.length, 0);\n    }\n  },\n  methods: {\n    onSave: function onSave() {\n      var _this = this;\n      var name = XSSHelpers.stripAllTags(this.categoryName);\n      var description = XSSHelpers.stripAllTags(this.categoryDescription);\n      $.ajax({\n        type: 'POST',\n        url: \"\".concat(this.APIroot, \"formEditor/new\"),\n        data: {\n          name: name,\n          description: description,\n          parentID: this.newFormParentID,\n          CSRFToken: this.CSRFToken\n        },\n        success: function success(res) {\n          var newCatID = res;\n          var temp = {};\n          //specified values\n          temp.categoryID = newCatID;\n          temp.categoryName = name;\n          temp.categoryDescription = description;\n          temp.parentID = _this.newFormParentID;\n          //default values\n          temp.workflowID = 0;\n          temp.needToKnow = 0;\n          temp.visible = -1;\n          temp.sort = 0;\n          temp.type = '';\n          temp.stapledFormIDs = [];\n          temp.destructionAge = null;\n          _this.addNewCategory(newCatID, temp);\n          if (_this.newFormParentID === '') {\n            //new main form\n            _this.$router.push({\n              name: 'category',\n              query: {\n                formID: newCatID\n              }\n            });\n          } else {\n            //new internal\n            _this.$emit('get-form', newCatID);\n          }\n          _this.closeFormDialog();\n        },\n        error: function error(err) {\n          console.log('error posting new form', err);\n        }\n      });\n    }\n  },\n  template: \"<div>\\n            <div style=\\\"display: flex; justify-content: space-between;\\\">\\n                <label for=\\\"name\\\">Form Name&nbsp;<span style=\\\"font-size:80%\\\">(up to 50 characters)</span></label>\\n                <div>{{nameCharsRemaining}}</div>\\n            </div>\\n            <input id=\\\"name\\\" type=\\\"text\\\" maxlength=\\\"50\\\" v-model=\\\"categoryName\\\" style=\\\"width: 100%;\\\" />\\n            <div style=\\\"display: flex; justify-content:space-between;margin-top: 1em;\\\">\\n                <label for=\\\"description\\\">Form Description&nbsp;<span style=\\\"font-size:80%\\\">(up to 255 characters)</span></label>\\n                <div>{{descrCharsRemaining}}</div>\\n            </div>\\n            <textarea id=\\\"description\\\" maxlength=\\\"255\\\" rows=\\\"5\\\" v-model=\\\"categoryDescription\\\" \\n                style=\\\"width: 100%; resize:none;\\\">\\n            </textarea>\\n        </div>\"\n});\n\n//# sourceURL=webpack://leaf_vue/./src/form_editor/components/dialog_content/NewFormDialog.js?\n}");

/***/ }),

/***/ "./src/form_editor/views/FormBrowserView.js":
/*!**************************************************!*\
  !*** ./src/form_editor/views/FormBrowserView.js ***!
  \**************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("{__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _common_components_LeafFormDialog_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @/common/components/LeafFormDialog.js */ \"./src/common/components/LeafFormDialog.js\");\n/* harmony import */ var _components_dialog_content_NewFormDialog_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../components/dialog_content/NewFormDialog.js */ \"./src/form_editor/components/dialog_content/NewFormDialog.js\");\n/* harmony import */ var _components_dialog_content_ImportFormDialog_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../components/dialog_content/ImportFormDialog.js */ \"./src/form_editor/components/dialog_content/ImportFormDialog.js\");\n/* harmony import */ var _components_BrowserMenu_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../components/BrowserMenu.js */ \"./src/form_editor/components/BrowserMenu.js\");\n/* harmony import */ var _components_FormBrowser_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../components/FormBrowser.js */ \"./src/form_editor/components/FormBrowser.js\");\n\n\n\n\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({\n  name: 'form-browser-view',\n  components: {\n    LeafFormDialog: _common_components_LeafFormDialog_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"],\n    NewFormDialog: _components_dialog_content_NewFormDialog_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"],\n    ImportFormDialog: _components_dialog_content_ImportFormDialog_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"],\n    BrowserMenu: _components_BrowserMenu_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"],\n    FormBrowser: _components_FormBrowser_js__WEBPACK_IMPORTED_MODULE_4__[\"default\"]\n  },\n  inject: ['getSiteSettings', 'setDefaultAjaxResponseMessage', 'getEnabledCategories', 'showFormDialog', 'dialogFormContent', 'appIsLoadingCategories'],\n  beforeRouteEnter: function beforeRouteEnter(to, from, next) {\n    next(function (vm) {\n      vm.setDefaultAjaxResponseMessage();\n      vm.getSiteSettings();\n      if (vm.appIsLoadingCategories === false) {\n        vm.getEnabledCategories();\n      }\n    });\n  },\n  template: \"<BrowserMenu />\\n    <section>\\n        <div v-if=\\\"appIsLoadingCategories\\\" class=\\\"page_loading\\\">\\n            Loading... \\n            <img src=\\\"../images/largespinner.gif\\\" alt=\\\"\\\" />\\n        </div>\\n        <FormBrowser v-else></FormBrowser>\\n\\n        <!-- DIALOGS -->\\n        <leaf-form-dialog v-if=\\\"showFormDialog\\\">\\n            <template #dialog-content-slot>\\n                <component :is=\\\"dialogFormContent\\\" @import-form=\\\"getEnabledCategories\\\"></component>\\n            </template>\\n        </leaf-form-dialog>\\n    </section>\"\n});\n\n//# sourceURL=webpack://leaf_vue/./src/form_editor/views/FormBrowserView.js?\n}");

/***/ })

}]);