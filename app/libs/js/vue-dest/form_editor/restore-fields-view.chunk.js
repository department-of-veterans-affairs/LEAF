"use strict";(self.webpackChunkleaf_vue=self.webpackChunkleaf_vue||[]).push([[951],{392:(e,t,n)=>{n.d(t,{A:()=>i});const i={data:function(){return{scrollY:window.scrollY,initialTop:15,modalElementID:"leaf_dialog_content",modalBackgroundID:"leaf-vue-dialog-background",elBody:null,elModal:null,elBackground:null,elClose:null,lastFocus:null}},inject:["dialogTitle","closeFormDialog","formSaveFunction","dialogButtonText","lastModalTab"],created:function(){this.lastFocus=document.activeElement||null},mounted:function(){this.elBody=document.querySelector("body"),this.elModal=document.getElementById(this.modalElementID),this.elModal.style.left=window.scrollX+window.innerWidth/2-this.elModal.clientWidth/2+"px",this.elBackground=document.getElementById(this.modalBackgroundID),this.elClose=document.getElementById("leaf-vue-dialog-close"),this.makeDraggable(this.elModal);var e=document.activeElement;null===(null!==e?e.closest(".leaf-vue-dialog-content"):null)&&this.elClose.focus()},beforeUnmount:function(){var e,t=(null===(e=this.lastFocus)||void 0===e?void 0:e.id)||null;if(null!==t){var n=document.getElementById(t);null!==n&&n.focus()}else null!==this.lastFocus&&this.lastFocus.focus()},methods:{firstTab:function(e){if(!0===(null==e?void 0:e.shiftKey)){var t=document.querySelector("#ifthen_deletion_dialog button.btn-general"),n=document.getElementById("next"),i=document.getElementById("button_cancelchange"),o=t||n||i;null!==o&&"function"==typeof o.focus&&(o.focus(),e.preventDefault())}},makeDraggable:function(){var e=this,t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},n=0,i=0,o=0,a=0,r=function(e){(e=e||window.event).preventDefault(),n=o-e.clientX,i=a-e.clientY,o=e.clientX,a=e.clientY,t.style.top=t.offsetTop-i+"px",t.style.left=t.offsetLeft-n+"px",s()},l=function(){document.onmouseup=null,document.onmousemove=null},s=function(){t.offsetTop<window.scrollY&&(t.style.top=window.scrollY+"px"),t.offsetLeft<window.scrollX&&(t.style.left=window.scrollX+"px"),t.offsetLeft+t.clientWidth+18>window.innerWidth+window.scrollX&&(t.style.left=window.innerWidth+window.scrollX-t.clientWidth-18+"px"),e.elBackground.style.minWidth=e.elBody.clientWidth+"px",e.elBackground.style.minHeight=e.elModal.offsetTop+e.elBody.clientHeight+"px"};document.getElementById(this.modalElementID+"_drag_handle")&&(document.getElementById(this.modalElementID+"_drag_handle").onmousedown=function(e){(e=e||window.event).preventDefault(),o=e.clientX,a=e.clientY,document.onmouseup=l,document.onmousemove=r})}},template:'<Teleport to="body">\n        <div id="leaf-vue-dialog-background" aria-disabled="true" aria-hidden="true"></div>\n        <div :id="modalElementID" class="leaf-vue-dialog"\n            role="dialog" aria-modal="true" :aria-labelledby="modalElementID + \'_drag_handle\'" aria-describedby="record"\n            :style="{top: scrollY + initialTop + \'px\'}">\n            <div v-html="dialogTitle" :id="modalElementID + \'_drag_handle\'" class="leaf-vue-dialog-title"></div>\n            <button type="button" @click="closeFormDialog" @keydown.tab="firstTab" id="leaf-vue-dialog-close" aria-label="Close">&#10005;</button>\n            <div id="record" style="max-height:100vh;overflow-y:auto">\n                <div id="xhr" class="leaf-vue-dialog-content">\n                    <slot name="dialog-content-slot"></slot>\n                </div>\n                <div id="leaf-vue-dialog-cancel-save">\n                    <button type="button" style="width: 90px;"\n                        id="button_save" class="btn-confirm" :title="dialogButtonText.confirm"\n                        @click="formSaveFunction">\n                        {{dialogButtonText.confirm}}\n                    </button>\n                    <button type="button" style="width: 90px;"\n                        id="button_cancelchange" class="btn-general" :title="dialogButtonText.cancel"\n                        @click="closeFormDialog" @keydown.tab="lastModalTab">\n                        {{dialogButtonText.cancel}}\n                    </button>\n                </div>\n            </div>\n        </div>\n    </Teleport>'}},608:(e,t,n)=>{n.r(t),n.d(t,{default:()=>l});var i=n(425);function o(e){return function(e){if(Array.isArray(e))return a(e)}(e)||function(e){if("undefined"!=typeof Symbol&&null!=e[Symbol.iterator]||null!=e["@@iterator"])return Array.from(e)}(e)||function(e,t){if(e){if("string"==typeof e)return a(e,t);var n={}.toString.call(e).slice(8,-1);return"Object"===n&&e.constructor&&(n=e.constructor.name),"Map"===n||"Set"===n?Array.from(e):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?a(e,t):void 0}}(e)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function a(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,i=Array(t);n<t;n++)i[n]=e[n];return i}const r={name:"restore-field-options-dialog",data:function(){return{initialFocusElID:"radio_restore_all",userOptionSelection:"all",userMessage:"",processing:!1}},inject:["APIroot","CSRFToken","restoreField","updateAppData","indicatorID_toRestore","disabledAncestors","firstOrphanID","searchPending","setDialogSaveFunction","closeFormDialog"],created:function(){this.setDialogSaveFunction(this.onSave)},mounted:function(){this.userMessage="<p><b>This question has disabled parent questions:</b></p>";var e=document.getElementById(this.initialFocusElID);null!==e&&e.focus()},computed:{disabledAncestorsText:function(){return"parents: "+o(this.disabledAncestors).reverse().join(", ")}},methods:{onSave:function(){var e=this;this.userMessage="<b>Processing...</b>";var t=this.indicatorID_toRestore;if(this.processing=!0,"one"===this.userOptionSelection)Promise.all([this.unsetParentID(t),this.restoreField(t)]).then((function(){e.updateAppData(t),e.userMessage="",e.closeFormDialog()})).catch((function(e){return console.log(e)}));else{this.userMessage='<b style="color:#064;">Restoring Fields: ';var n=[t].concat(o(this.disabledAncestors)),i=n.length,a=0,r=setInterval((function(){if(n.length>0){var t=n.pop(),o=n.length;e.restoreField(t).then((function(){e.updateAppData(t,750),e.userMessage+="".concat(t).concat(o>0?", ":"</b>")})).catch((function(e){console.log(e)})).finally((function(){0===a&&null!==e.firstOrphanID&&(console.log("clear parent for",t),e.unsetParentID(t)),++a===i&&setTimeout((function(){e.closeFormDialog()}),750)}))}else clearInterval(r)}),100)}},unsetParentID:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:0,t=new FormData;return t.append("CSRFToken",this.CSRFToken),t.append("parentID",null),fetch("".concat(this.APIroot,"formEditor/").concat(e,"/parentID"),{method:"POST",body:t})}},template:'\n            <div id="restore_fields_parent_options" style="margin: 1em 0; min-height: 50px;">\n                <div v-if="searchPending === true" class="page_loading">\n                    Loading...\n                    <img src="../images/largespinner.gif" alt="" />\n                </div>\n                <template v-else>\n                <p>{{ firstOrphanID }} </p>\n                    <div v-if="userMessage !== \'\'" v-html="userMessage"></div>\n                    <div v-if="!processing">{{ disabledAncestorsText }}</div>\n                    <fieldset>\n                        <legend id="restore_fields_legend">Restore Options</legend>\n                        <label class="checkable leaf_check" for="radio_restore_all">\n                            <input type="radio" checked\n                                v-model="userOptionSelection"\n                                id="radio_restore_all"\n                                class="icheck leaf_check"\n                                value="all"\n                                aria-describedby="restore_fields_parent_options">\n                            <span class="leaf_check"></span> Restore associated fields\n                        </label>\n                        <label class="checkable leaf_check" for="radio_restore_one">\n                            <input type="radio"\n                                v-model="userOptionSelection"\n                                id="radio_restore_one"\n                                class="icheck leaf_check"\n                                value="one"\n                                aria-describedby="restore_fields_parent_options">\n                            <span class="leaf_check"></span> Only restore this field (This will break its associations)\n                        </label>\n                    </fieldset>\n                </template>\n            </div>'},l={name:"restore-fields-view",data:function(){return{loading:!0,disabledFields:[],enabledFields:{},headerSortTracking:{indicatorID:null,categoryName:null,name:null,format:null},indicatorID_toRestore:null,disabledAncestors:[],firstOrphanID:null,searchPending:!0}},components:{LeafFormDialog:n(392).A,RestoreFieldOptionsDialog:r},inject:["APIroot","CSRFToken","setDefaultAjaxResponseMessage","openRestoreFieldOptionsDialog","showFormDialog","dialogFormContent"],provide:function(){var e=this;return{indicatorID_toRestore:(0,i.EW)((function(){return e.indicatorID_toRestore})),disabledAncestors:(0,i.EW)((function(){return e.disabledAncestors})),firstOrphanID:(0,i.EW)((function(){return e.firstOrphanID})),searchPending:(0,i.EW)((function(){return e.searchPending})),restoreField:this.restoreField,updateAppData:this.updateAppData}},created:function(){var e=this,t=fetch("".concat(this.APIroot,"form/indicator/list/disabled")).then((function(e){return e.json()})),n=fetch("".concat(this.APIroot,"form/indicator/list/unabridged?x-filterData=indicatorID,parentIndicatorID,isDisabled")).then((function(e){return e.json()}));Promise.all([t,n]).then((function(t){var n=t[0],i=t[1];e.disabledFields=n.filter((function(e){return+e.indicatorID>0})),i.filter((function(e){return+e.indicatorID>0&&0==+e.isDisabled})).forEach((function(t){return e.enabledFields[t.indicatorID]={indicatorID:t.indicatorID,parentIndicatorID:t.parentIndicatorID}})),e.loading=!1})).catch((function(e){return console.log(e)}))},beforeRouteEnter:function(e,t,n){n((function(e){e.setDefaultAjaxResponseMessage()}))},computed:{fieldParentIDLookup:function(){var e={},t=null;for(var n in this.disabledFields.forEach((function(n){null!==(t=n.parentIndicatorID)&&(e[n.indicatorID]=t)})),this.enabledFields)null!==(t=this.enabledFields[n].parentIndicatorID)&&(e[n]=t);return e},disabledFieldsLookup:function(){var e={};return this.disabledFields.forEach((function(t){return e[t.indicatorID]=1})),e}},methods:{restoreFieldGate:function(e,t){var n=this;this.indicatorID_toRestore=e,this.searchAncestorStates(t),!1===this.searchPending&&0===this.disabledAncestors.length&&null===this.firstOrphanID?this.restoreField(this.indicatorID_toRestore).then((function(){return n.updateAppData(e,750)})).catch((function(e){return console.log(e)})):this.openRestoreFieldOptionsDialog(this.indicatorID_toRestore)},restoreField:function(e){var t=new FormData;return t.append("CSRFToken",this.CSRFToken),t.append("disabled",0),fetch("".concat(this.APIroot,"formEditor/").concat(e,"/disabled"),{method:"POST",body:t})},getIndicator:function(e){return fetch("".concat(this.APIroot,"formEditor/indicator/").concat(e))},archiveField:function(e){var t=new FormData;return t.append("CSRFToken",this.CSRFToken),t.append("disabled",1),fetch("".concat(this.APIroot,"formEditor/").concat(e,"/disabled"),{method:"POST",body:t})},updateAppData:function(){var e=this,t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"",n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,i=document.getElementById("restore_td_".concat(t));null!==i&&(i.innerHTML='<b style="color:#064;">Field restored</b>'),setTimeout((function(){e.disabledFields=e.disabledFields.filter((function(e){return e.indicatorID!==t})),e.enabledFields[t]={indicatorID:t,parentIndicatorID:e.fieldParentIDLookup[t]}}),n)},sortHeader:function(){var e,t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"";if(this.disabledFields.length>1&&void 0!==(null===(e=this.headerSortTracking)||void 0===e?void 0:e[t])){if(null===this.headerSortTracking[t])this.disabledFields=this.disabledFields.toSorted((function(e,n){return String(e[t]).localeCompare(String(n[t]),void 0,{numeric:"indicatorID"===t,sensitivity:"base"})})),this.headerSortTracking[t]=0;else{var n=0===this.headerSortTracking[t];this.headerSortTracking[t]=n?1:0,this.disabledFields=this.disabledFields.toSorted((function(e,i){return(n?-1:1)*String(e[t]).localeCompare(String(i[t]),void 0,{numeric:"indicatorID"===t,sensitivity:"base"})}))}for(var i in this.headerSortTracking)i!==t&&(this.headerSortTracking[i]=null)}},searchAncestorStates:function(){var e=this,t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:null;this.disabledAncestors=[],this.firstOrphanID=null;var n=null;if(null!==t){for(n=t;t>0;){var i;1===this.disabledFieldsLookup[t]?(this.disabledAncestors.push(t),t=+this.fieldParentIDLookup[t]):(null===(i=this.enabledFields[t])||void 0===i?void 0:i.indicatorID)>0?t=+this.fieldParentIDLookup[t]:(this.firstOrphanID=t,t=0)}null!==this.firstOrphanID?this.getIndicator(this.firstOrphanID).then((function(t){return t.json().then((function(t){var i=null==t?void 0:t[e.firstOrphanID];if(console.log("got ind",i),(null==i?void 0:i.indicatorID)>0){var o=i.parentID,a=i.indicatorID;e.enabledFields[a]={indicatorID:a,parentIndicatorID:o},e.searchAncestorStates(n)}else e.searchPending=!1})).catch((function(e){console.log(e)}))})):this.searchPending=!1}else this.searchPending=!1}},template:'<section id="restore_fields_view">\n            <h2 id="page_breadcrumbs">\n                <a href="../admin" class="leaf-crumb-link" title="to Admin Home">Admin</a>\n                <i class="fas fa-caret-right leaf-crumb-caret"></i>\n                <router-link :to="{ name: \'browser\' }" class="leaf-crumb-link" title="to Form Browser">Form Browser</router-link>\n                <i class="fas fa-caret-right leaf-crumb-caret"></i>Restore Fields\n            </h2>\n            <h3>List of disabled fields available for recovery</h3>\n            <div>Deleted fields and associated data will not display in the Report Builder.</div>\n\n            <div v-if="loading === true" class="page_loading">\n                Loading...\n                <img src="../images/largespinner.gif" alt="" />\n            </div>\n            <template v-else>\n                <table v-if="disabledFields.length > 0">\n                    <thead>\n                        <tr>\n                            <th>\n                                <button type="button" @click="sortHeader(\'indicatorID\')">\n                                    indicatorID\n                                    <span aria-hidden="true">\n                                        {{ headerSortTracking.indicatorID === 0 ? "▲" :\n                                           headerSortTracking.indicatorID === 1 ? "▼" : "" }}\n                                    </span>\n                                </button>\n                            </th>\n                            <th>\n                                <button type="button" @click="sortHeader(\'categoryName\')">\n                                    Form\n                                    <span aria-hidden="true">\n                                        {{ headerSortTracking.categoryName === 0 ? "▲" :\n                                           headerSortTracking.categoryName === 1 ? "▼" : "" }}\n                                    </span>\n                                </button>\n                            </th>\n                            <th>\n                                <button type="button" @click="sortHeader(\'name\')">\n                                    Field Name\n                                    <span aria-hidden="true">\n                                        {{ headerSortTracking.name === 0 ? "▲" :\n                                           headerSortTracking.name === 1 ? "▼" : "" }}\n                                    </span>\n                                </button>\n                            </th>\n                            <th>\n                                <button type="button" @click="sortHeader(\'format\')">\n                                    Input Format\n                                    <span aria-hidden="true">\n                                        {{ headerSortTracking.format === 0 ? "▲" :\n                                           headerSortTracking.format === 1 ? "▼" : "" }}\n                                    </span>\n                                </button>\n                            </th>\n                            <th>Status</th>\n                            <th>Restore</th>\n                        </tr>\n                    </thead>\n                    <tbody id="fields">\n                        <tr v-for="f in disabledFields" :key="f.indicatorID">\n                            <td>{{ f.indicatorID }}</td>\n                            <td>{{ f.categoryName }}</td>\n                            <td style="word-break:break-word;">{{ f.name }}</td>\n                            <td style="word-break:break-word;">{{ f.format }}</td>\n                            <td>{{ f.disabled }}</td>\n                            <td :id="\'restore_td_\' + f.indicatorID"><button type="button" class="btn-general" style="margin:auto;"\n                                @click="restoreFieldGate(f.indicatorID, f.parentIndicatorID)">\n                                Restore this field</button>\n                            </td>\n                        </tr>\n                    </tbody>\n                </table>\n                <p v-else style="margin:1rem 0;">There are no disabled fields to restore.</p>\n            </template>\n\n            \x3c!-- DIALOGS --\x3e\n            <leaf-form-dialog v-if="showFormDialog">\n                <template #dialog-content-slot>\n                    <component :is="dialogFormContent"></component>\n                </template>\n            </leaf-form-dialog>\n        </section>'}}}]);