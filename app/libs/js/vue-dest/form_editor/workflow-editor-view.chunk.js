"use strict";(self.webpackChunkleaf_vue=self.webpackChunkleaf_vue||[]).push([[160],{40:(t,o,e)=>{e.r(o),e.d(o,{default:()=>i});var n=e(392),l=e(425);const i={name:"workflow-editor-view",components:{LeafFormDialog:n.A},data:function(){return{loading:!0,firstWorkflowDescription:"",firstWorkflowID:0,workflows:{},currentWorkflowID:null,steps:{},currentStepID:null,routes:{},endPoints:[],endpointOptions:{isSource:!0,isTarget:!0,endpoint:["Rectangle",{cssClass:"workflowEndpoint"}],paintStyle:{width:48,height:48},maxConnections:-1}}},inject:["APIroot","libsPath","CSRFToken","getSiteSettings","isJSON","siteSettings","setDefaultAjaxResponseMessage","updateChosenAttributes","showFormDialog","dialogFormContent"],beforeRouteEnter:function(t,o,e){e((function(t){t.getSiteSettings(),t.setDefaultAjaxResponseMessage()}))},created:function(){this.loadWorkflowList()},mounted:function(){var t=this;this.setupJSPlumb(),this.updateChosen("workflows","workflows_label","Select a Workflow",(function(o){t.currentWorkflowID=o.target.value}))},updated:function(){console.log("updated")},computed:{hasWorkflows:function(){var t;return(null===(t=Object.keys(this.workflows))||void 0===t?void 0:t.length)>0},workflowMaxY:function(){var t=80,o=null;for(var e in this.steps)(o=parseInt(this.steps[e].posY))>t&&(t=o);return t},workflowHeight:function(){return{height:300+this.workflowMaxY+"px"}},selectedWorkflowDescription:function(){var t,o;return null!==(t=null===(o=this.workflows[this.currentWorkflowID])||void 0===o?void 0:o.description)&&void 0!==t?t:""},selectedWorkflowAria:function(){return this.selectedWorkflowDescription+"is selected."},selectedStepAria:function(){return"TODO:is selected."},requestorStepStyle:function(){return{left:"220px",top:"120px",backgroundColor:"#e0e0e0",fontWeight:"normal"}},lastStepStyle:function(){return{left:"580px",top:160+this.workflowMaxY+"px",backgroundColor:"#ff8181",fontWeight:"normal"}}},methods:{setupJSPlumb:function(){jsPlumb.Defaults.Container="workflow",jsPlumb.Defaults.ConnectionOverlays=[["PlainArrow",{location:.9,width:20,length:12}]],jsPlumb.Defaults.PaintStyle={stroke:"lime",lineWidth:1},jsPlumb.Defaults.Connector=["StateMachine",{curviness:10}],jsPlumb.Defaults.Anchor="Continuous",jsPlumb.Defaults.Endpoint="Blank"},stepStyle:function(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:0,o=this.steps[t];return{left:Math.max(parseInt(o.posX),0)+"px",top:Math.max(parseInt(o.posY),80)+"px",backgroundColor:o.stepBgColor,fontWeight:"normal"}},updateChosen:function(){var t=this,o=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"",e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"",n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"Select an Option",i=arguments.length>3?arguments[3]:void 0;""!==o&&(0,l.dY)((function(){$("#"+o).chosen("destroy"),$("#"+o).chosen({disable_search_threshold:5,allow_single_deselect:!0}).change((function(t){return i(t)})),t.updateChosenAttributes(o,e,n)}))},newWorkflow:function(){console.log("newWorkflow")},createStep:function(){console.log("createStep")},loadWorkflowList:function(){var t=this;fetch("".concat(this.APIroot,"workflow")).then((function(t){return t.json()})).then((function(o){var e,n,l,i,s=void 0!==(null===(e=t.$route.query)||void 0===e?void 0:e.dev),a={};o.forEach((function(t){(t.workflowID>0||s)&&(a[t.workflowID]=t)})),t.workflows=a,t.firstWorkflowDescription=(null==o||null===(n=o[0])||void 0===n?void 0:n.description)||"",t.firstWorkflowID=(null==o||null===(l=o[0])||void 0===l?void 0:l.workflowID)||0,t.loading=!1;var r=null===(i=t.$route.query)||void 0===i?void 0:i.workflowID;void 0!==r&&void 0!==t.workflows[r]?t.currentWorkflowID=r:t.currentWorkflowID=t.firstWorkflowID})).catch((function(t){return console.log(t)}))},loadWorkflow:function(){var t=this;this.endPoints=[],jsPlumb.reset(),jsPlumb.setSuspendDrawing(!0),fetch("".concat(this.APIroot,"workflow/").concat(this.currentWorkflowID)).then((function(t){return t.json()})).then((function(o){t.steps=o,t.jsPlumbConfig()})).catch((function(t){return console.log(t)}))},jsPlumbConfig:function(){var t=this;(0,l.dY)((function(){var o=function(o){null==t.endPoints[o]&&(t.endPoints[o]=jsPlumb.addEndpoint("step_"+o,{anchor:"Continuous"},t.endpointOptions),jsPlumb.draggable("step_"+o,{allowNegative:!1,stop:function(){var e=document.getElementById("step_".concat(o));if(null!==e){var n=e.offsetLeft,l=e.offsetTop;t.updatePosition(o,n,l)}}}))};for(var e in t.steps)o(e);null==t.endPoints[-1]&&(t.endPoints[-1]=jsPlumb.addEndpoint("step_-1",{anchor:"Continuous"},t.endpointOptions),jsPlumb.draggable("step_-1",{allowNegative:!1})),null==t.endPoints[0]&&(t.endPoints[0]=jsPlumb.addEndpoint("step_0",{anchor:"Continuous"},t.endpointOptions),jsPlumb.draggable("step_0",{allowNegative:!1}))}))},updatePosition:function(t,o,e){var n=new FormData;n.append("CSRFToken",this.CSRFToken),n.append("stepID",t),n.append("x",o),n.append("y",e),fetch("".concat(this.APIroot,"workflow/").concat(this.currentWorkflowID,"/editorPosition"),{method:"POST",body:n}).catch((function(t){return console.log(t)}))},showStepInfo:function(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:-1;console.log("show step info",t)},emailNotificationIcon:function(){var t,o=arguments.length>0&&void 0!==arguments[0]?arguments[0]:0,e="",n=null===(t=this.steps)||void 0===t?void 0:t[o];if("string"==typeof(null==n?void 0:n.stepData)&&this.isJSON(n.stepData)){var l,i=JSON.parse(n.stepData);if("true"===(null===(l=i.AutomatedEmailReminders)||void 0===l||null===(l=l.AutomateEmailGroup)||void 0===l?void 0:l.toLowerCase())){var s=i.AutomatedEmailReminders.DaysSelected,a=s>1?"Days":"Day";e='<img src="'.concat(this.libsPath,'dynicons/svg/appointment.svg"\n                        style="height:18px;width:18px;margin-bottom:-3px;"\n                        alt="Email reminders will be sent after ').concat(s," ").concat(a,' of inactivity"\n                        title="Email reminders will be sent after ').concat(s," ").concat(a,' of inactivity">')}}return e}},watch:{currentWorkflowID:function(t,o){void 0!==this.workflows[t]&&this.loadWorkflow(t)},workflows:function(){var t=this;this.updateChosen("workflows","workflows_label","Select a Workflow",(function(o){t.currentWorkflowID=o.target.value}))},steps:function(){var t=this;this.updateChosen("workflow_steps","steps_label","Select a Step",(function(o){t.currentStepID=o.target.value}))}},template:'<div v-if="loading" class="page_loading">\n            Loading...\n            <img src="../images/largespinner.gif" alt="" />\n        </div>\n        <div v-show="!loading">\n            \x3c!-- TODO: this should be assoc with nav --\x3e\n            <div v-if="siteSettings?.siteType===\'national_subordinate\'" id="subordinate_site_warning" style="padding: 0.5rem; margin: 0.5rem 0;" >\n                <h3 style="margin: 0 0 0.5rem 0; color: #a00;">This is a Nationally Standardized Subordinate Site</h3>\n                <span><b>Do not make modifications!</b> &nbsp;Synchronization problems will occur. &nbsp;Please contact your process POC if modifications need to be made.</span>\n            </div>\n            <section id="workflow_editor" v-show="hasWorkflows">\n                <div id="sideBar">\n                    <div>\n                        <label id="workflows_label" for="workflows">Workflows:</label>\n                        <div id="workflowList">\n                            <span id="workflow_select_status" role="status" aria-live="polite" :aria-label="selectedWorkflowAria"></span>\n                            <select id="workflows" title="Select a Workflow">\n                                <option v-for="w in workflows" :key="\'workflows_\' + w.workflowID" :value="w.workflowID">\n                                    {{ w.description }} (ID:# {{ w.workflowID }})\n                                </option>\n                            </select>\n                        </div>\n                        <button type="button" id="btn_newWorkflow" class="buttonNorm" @click="newWorkflow();">\n                            <img :src="libsPath + \'dynicons/svg/list-add.svg\'" alt=""> New Workflow\n                        </button>\n                    </div>\n                    <div>\n                        <label id="steps_label" for="workflow_steps">Workflow Steps:</label>\n                        <div id="stepList">\n                            <span id="step_select_status" role="status" aria-live="polite" :aria-label="selectedStepAria"></span>\n                            <select id="workflow_steps" title="Select a Workflow Step to edit it">\n                                <option>Choose a step to edit</option>\n                                <option value="-1">Requestor</option>\n                                <option v-for="s in steps" :key="\'workflow_steps_\' + s.stepID" :value="s.stepID">\n                                    {{ s.stepTitle }} (#{{ s.stepID }})\n                                </option>\n                            </select>\n                        </div>\n                        <button type="button" id="btn_createStep" class="buttonNorm" @click="createStep();">\n                            <img :src="libsPath + \'dynicons/svg/list-add.svg\'" alt=""> New Step\n                        </button>\n                    </div>\n                    <hr>\n                </div> \x3c!-- END SIDEBAR --\x3e\n\n                <div id="workflow" :style="workflowHeight">\n                    <button type="button" class="workflowStep" id="step_-1" :style="requestorStepStyle"\n                        aria-label="workflow step: Requestor"\n                        aria-controls="stepInfo_-1"\n                        aria-expanded="false"\n                        @click="showStepInfo(-1)">\n                        Requestor\n                    </button>\n                    <div class="workflowStepInfo" id="stepInfo_-1"></div>\n\n                    <template v-for="s in steps" :key="\'wf_step_\' + s.stepID">\n                        <button type="button" class="workflowStep" :id="\'step_\' + s.stepID" :style="stepStyle(s.stepID)"\n                            :aria-label="\'workflow step: \' + s.stepTitle"\n                            :aria-controls="\'stepInfo_\' + s.stepID"\n                            aria-expanded="false"\n                            @click="showStepInfo(s.stepID)">\n                                {{ s.stepTitle }}&nbsp;<span v-if="typeof s?.stepData === \'string\'" v-html="emailNotificationIcon(s.stepID)"></span>\n                        </button>\n                        <div class="workflowStepInfo" :id="\'stepInfo_\' + s.stepID"></div>\n                    </template>\n\n                    <button type="button" class="workflowStep" id="step_0" :style="lastStepStyle"\n                        aria-label="Workflow End"\n                        aria-controls="stepInfo_0"\n                        aria-expanded="false"\n                        @click="showStepInfo(0)">\n                            End\n                    </button>\n                    <div class="workflowStepInfo" id="stepInfo_0"></div>\n                </div>\n            </section>\n            <p>{{ currentWorkflowID }}</p>\n            <p>{{ selectedWorkflowDescription }}</p>\n            <p>{{ steps }}</p>\n            <p>{{ currentStepID }}</p>\n            <p>{{ workflowMaxY }} {{ workflowHeight }} </p>\n        </div>\n\n        \x3c!-- DIALOGS --\x3e\n        <leaf-form-dialog v-if="showFormDialog">\n            <template #dialog-content-slot>\n                <component :is="dialogFormContent"></component>\n            </template>\n        </leaf-form-dialog>'}},392:(t,o,e)=>{e.d(o,{A:()=>n});const n={data:function(){return{scrollY:window.scrollY,initialTop:15,modalElementID:"leaf_dialog_content",modalBackgroundID:"leaf-vue-dialog-background",elBody:null,elModal:null,elBackground:null,elClose:null,lastFocus:null}},inject:["dialogTitle","closeFormDialog","formSaveFunction","dialogButtonText","lastModalTab"],created:function(){this.lastFocus=document.activeElement||null},mounted:function(){this.elBody=document.querySelector("body"),this.elModal=document.getElementById(this.modalElementID),this.elModal.style.left=window.scrollX+window.innerWidth/2-this.elModal.clientWidth/2+"px",this.elBackground=document.getElementById(this.modalBackgroundID),this.elClose=document.getElementById("leaf-vue-dialog-close"),this.makeDraggable(this.elModal);var t=document.activeElement;null===(null!==t?t.closest(".leaf-vue-dialog-content"):null)&&this.elClose.focus()},beforeUnmount:function(){var t,o=(null===(t=this.lastFocus)||void 0===t?void 0:t.id)||null;if(null!==o){var e=document.getElementById(o);null!==e&&e.focus()}else null!==this.lastFocus&&this.lastFocus.focus()},methods:{firstTab:function(t){if(!0===(null==t?void 0:t.shiftKey)){var o=document.querySelector("#ifthen_deletion_dialog button.btn-general"),e=document.getElementById("next"),n=document.getElementById("button_cancelchange"),l=o||e||n;null!==l&&"function"==typeof l.focus&&(l.focus(),t.preventDefault())}},makeDraggable:function(){var t=this,o=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},e=0,n=0,l=0,i=0,s=function(t){(t=t||window.event).preventDefault(),e=l-t.clientX,n=i-t.clientY,l=t.clientX,i=t.clientY,o.style.top=o.offsetTop-n+"px",o.style.left=o.offsetLeft-e+"px",r()},a=function(){document.onmouseup=null,document.onmousemove=null},r=function(){o.offsetTop<window.scrollY&&(o.style.top=window.scrollY+"px"),o.offsetLeft<window.scrollX&&(o.style.left=window.scrollX+"px"),o.offsetLeft+o.clientWidth+18>window.innerWidth+window.scrollX&&(o.style.left=window.innerWidth+window.scrollX-o.clientWidth-18+"px"),t.elBackground.style.minWidth=t.elBody.clientWidth+"px",t.elBackground.style.minHeight=t.elModal.offsetTop+t.elBody.clientHeight+"px"};document.getElementById(this.modalElementID+"_drag_handle")&&(document.getElementById(this.modalElementID+"_drag_handle").onmousedown=function(t){(t=t||window.event).preventDefault(),l=t.clientX,i=t.clientY,document.onmouseup=a,document.onmousemove=s})}},template:'<Teleport to="body">\n        <div id="leaf-vue-dialog-background" aria-disabled="true" aria-hidden="true"></div>\n        <div :id="modalElementID" class="leaf-vue-dialog"\n            role="dialog" aria-modal="true" :aria-labelledby="modalElementID + \'_drag_handle\'" aria-describedby="record"\n            :style="{top: scrollY + initialTop + \'px\'}">\n            <div v-html="dialogTitle" :id="modalElementID + \'_drag_handle\'" class="leaf-vue-dialog-title"></div>\n            <button type="button" @click="closeFormDialog" @keydown.tab="firstTab" id="leaf-vue-dialog-close" aria-label="Close">&#10005;</button>\n            <div id="record" style="max-height:100vh;overflow-y:auto">\n                <div id="xhr" class="leaf-vue-dialog-content">\n                    <slot name="dialog-content-slot"></slot>\n                </div>\n                <div id="leaf-vue-dialog-cancel-save">\n                    <button type="button" style="width: 90px;"\n                        id="button_save" class="btn-confirm" :title="dialogButtonText.confirm"\n                        @click="formSaveFunction">\n                        {{dialogButtonText.confirm}}\n                    </button>\n                    <button type="button" style="width: 90px;"\n                        id="button_cancelchange" class="btn-general" :title="dialogButtonText.cancel"\n                        @click="closeFormDialog" @keydown.tab="lastModalTab">\n                        {{dialogButtonText.cancel}}\n                    </button>\n                </div>\n            </div>\n        </div>\n    </Teleport>'}}}]);