"use strict";(self.webpackChunkleaf_vue=self.webpackChunkleaf_vue||[]).push([[160],{392:(t,e,n)=>{n.d(e,{A:()=>o});const o={data:function(){return{scrollY:window.scrollY,initialTop:15,modalElementID:"leaf_dialog_content",modalBackgroundID:"leaf-vue-dialog-background",elBody:null,elModal:null,elBackground:null,elClose:null,lastFocus:null}},inject:["dialogTitle","closeFormDialog","formSaveFunction","dialogButtonText","lastModalTab"],created:function(){this.lastFocus=document.activeElement||null},mounted:function(){this.elBody=document.querySelector("body"),this.elModal=document.getElementById(this.modalElementID),this.elModal.style.left=window.scrollX+window.innerWidth/2-this.elModal.clientWidth/2+"px",this.elBackground=document.getElementById(this.modalBackgroundID),this.elClose=document.getElementById("leaf-vue-dialog-close"),this.makeDraggable(this.elModal);var t=document.activeElement;null===(null!==t?t.closest(".leaf-vue-dialog-content"):null)&&this.elClose.focus()},beforeUnmount:function(){var t,e=(null===(t=this.lastFocus)||void 0===t?void 0:t.id)||null;if(null!==e){var n=document.getElementById(e);null!==n&&n.focus()}else null!==this.lastFocus&&this.lastFocus.focus()},methods:{firstTab:function(t){if(!0===(null==t?void 0:t.shiftKey)){var e=document.querySelector("#ifthen_deletion_dialog button.btn-general"),n=document.getElementById("next"),o=document.getElementById("button_cancelchange"),i=e||n||o;null!==i&&"function"==typeof i.focus&&(i.focus(),t.preventDefault())}},makeDraggable:function(){var t=this,e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},n=0,o=0,i=0,s=0,r=function(t){(t=t||window.event).preventDefault(),n=i-t.clientX,o=s-t.clientY,i=t.clientX,s=t.clientY,e.style.top=e.offsetTop-o+"px",e.style.left=e.offsetLeft-n+"px",a()},l=function(){document.onmouseup=null,document.onmousemove=null},a=function(){e.offsetTop<window.scrollY&&(e.style.top=window.scrollY+"px"),e.offsetLeft<window.scrollX&&(e.style.left=window.scrollX+"px"),e.offsetLeft+e.clientWidth+18>window.innerWidth+window.scrollX&&(e.style.left=window.innerWidth+window.scrollX-e.clientWidth-18+"px"),t.elBackground.style.minWidth=t.elBody.clientWidth+"px",t.elBackground.style.minHeight=t.elModal.offsetTop+t.elBody.clientHeight+"px"};document.getElementById(this.modalElementID+"_drag_handle")&&(document.getElementById(this.modalElementID+"_drag_handle").onmousedown=function(t){(t=t||window.event).preventDefault(),i=t.clientX,s=t.clientY,document.onmouseup=l,document.onmousemove=r})}},template:'<Teleport to="body">\n        <div id="leaf-vue-dialog-background" aria-disabled="true" aria-hidden="true"></div>\n        <div :id="modalElementID" class="leaf-vue-dialog"\n            role="dialog" aria-modal="true" :aria-labelledby="modalElementID + \'_drag_handle\'" aria-describedby="record"\n            :style="{top: scrollY + initialTop + \'px\'}">\n            <div v-html="dialogTitle" :id="modalElementID + \'_drag_handle\'" class="leaf-vue-dialog-title"></div>\n            <button type="button" @click="closeFormDialog" @keydown.tab="firstTab" id="leaf-vue-dialog-close" aria-label="Close">&#10005;</button>\n            <div id="record" style="max-height:100vh;overflow-y:auto">\n                <div id="xhr" class="leaf-vue-dialog-content">\n                    <slot name="dialog-content-slot"></slot>\n                </div>\n                <div id="leaf-vue-dialog-cancel-save">\n                    <button type="button" style="width: 90px;"\n                        id="button_save" class="btn-confirm" :title="dialogButtonText.confirm"\n                        @click="formSaveFunction">\n                        {{dialogButtonText.confirm}}\n                    </button>\n                    <button type="button" style="width: 90px;"\n                        id="button_cancelchange" class="btn-general" :title="dialogButtonText.cancel"\n                        @click="closeFormDialog" @keydown.tab="lastModalTab">\n                        {{dialogButtonText.cancel}}\n                    </button>\n                </div>\n            </div>\n        </div>\n    </Teleport>'}},424:(t,e,n)=>{n.d(e,{A:()=>o});const o={name:"history-dialog",data:function(){return{requiredDataProperties:["historyType","historyID"],divSaveCancelID:"leaf-vue-dialog-cancel-save",page:1,historyType:this.dialogData.historyType,historyID:this.dialogData.historyID,ajaxRes:null}},inject:["dialogData","checkRequiredData","lastModalTab"],created:function(){this.checkRequiredData(this.requiredDataProperties)},mounted:function(){document.getElementById(this.divSaveCancelID).style.display="none",this.getPage()},computed:{showNext:function(){return null!==this.ajaxRes&&-1===this.ajaxRes.indexOf("No history to show")},showPrev:function(){return this.page>1}},methods:{getNext:function(){this.page++,this.getPage()},getPrev:function(){this.page--,this.getPage()},getPage:function(){var t=this;try{var e="ajaxIndex.php?a=gethistory&type=".concat(this.historyType,"&gethistoryslice=1&page=").concat(this.page,"&id=").concat(this.historyID);fetch(e).then(function(e){e.text().then(function(e){return t.ajaxRes=e})})}catch(t){console.log("error getting history",t)}}},template:'<div>\n        <div v-if="ajaxRes === null" class="page_loading">\n            Loading...\n            <img src="../images/largespinner.gif" alt="" />\n        </div>\n        <div v-else id="history-slice" v-html="ajaxRes" style="min-height: 100px; min-width: 300px;"></div>\n        <div id="history-page-buttons" style="display: flex; justify-content: space-between;">\n            <button v-if="showPrev" id="prev" type="button"\n                class="btn-general"\n                style="width: 125px;"\n                @click="getPrev" title="get previous page">\n                Previous page\n            </button>\n            <button v-if="showNext" id="next" type="button"\n                class="btn-general"\n                style="width: 125px; margin-left: auto;"\n                @click="getNext" @keydown.tab="lastModalTab" title="get next page">\n                Next page\n            </button>\n        </div>\n    </div>'}},790:(t,e,n)=>{n.r(e),n.d(e,{default:()=>y});var o=n(392),i=n(424);const s={name:"workflow-action-dialog",data:function(){var t,e,n,o,i,s,r;return{isNewAction:null===(t=this.dialogData)||void 0===t?void 0:t.isNewAction,showInputs:!1,actions:[],reservedActionTypes:{approve:1,changeinitiator:1,concur:1,defer:1,deleted:1,disapprove:1,move:1,sendback:1,sign:1,submit:1},selectedExistingActionType:"",stepID:null===(e=this.dialogData)||void 0===e?void 0:e.stepID,nextStepID:null===(n=this.dialogData)||void 0===n?void 0:n.nextStepID,actionText:this.dialogData.actionText||"",actionTextPasttense:this.dialogData.actionTextPasttense||"",actionIcon:(this.dialogData.actionIcon||"").trim(),sort:null!==(o=null===(i=this.dialogData)||void 0===i?void 0:i.sort)&&void 0!==o?o:0,fillDependency:null!==(s=null===(r=this.dialogData)||void 0===r?void 0:r.fillDependency)&&void 0!==s?s:1}},inject:["APIroot","CSRFToken","libsPath","dialogData","currentWorkflowID","steps","postActionConnection","postNewAction","postEditAction","redraw","setDialogSaveFunction","closeFormDialog"],created:function(){var t=this;this.setDialogSaveFunction(this.onSave),!0===this.isNewAction&&fetch("".concat(this.APIroot,"workflow/actions")).then(function(t){return t.json()}).then(function(e){t.actions=e}).catch(function(t){return console.log(t)})},mounted:function(){var t=document.getElementById("actionText");if(null!==t&&t.focus(),this.isNewAction){var e=document.getElementById("button_save");null!==e&&(e.setAttribute("disabled",!0),this.validate())}},computed:{isWorkflowConnection:function(){var t;return null===(t=this.dialogData)||void 0===t?void 0:t.isWorkflowConnection},existingActionTypeMap:function(){var t={},e="";return this.actions.forEach(function(n){var o;e=(null!==(o=null==n?void 0:n.actionType)&&void 0!==o?o:"").toLowerCase().trim(),t[e]=1}),t},actionType:function(){var t=new RegExp(/[^a-zA-Z0-9_]/,"gi");return this.actionText.replaceAll(t,"")},sortValue:function(){return+this.sort<-128?-128:+this.sort>127?127:+this.sort},sourceTitle:function(){var t;return-1===this.stepID?"Requestor":(null===(t=this.steps[this.stepID])||void 0===t?void 0:t.stepTitle)||""},targetTitle:function(){var t;return 0===this.stepID?"End":(null===(t=this.steps[this.nextStepID])||void 0===t?void 0:t.stepTitle)||""},isReservedError:function(){var t=this.actionType.toLowerCase();return this.isNewAction&&(1===this.existingActionTypeMap[t]||1===this.reservedActionTypes[t])}},methods:{validate:function(){var t=this.isWorkflowConnection&&!this.showInputs,e=""!==this.actionText&&""!==this.actionTextPasttense,n=t||e&&!this.isReservedError,o=document.getElementById("button_save");null!==o&&(n?o.removeAttribute("disabled"):o.setAttribute("disabled",!0))},onSave:function(){var t=this,e=function(){t.closeFormDialog(),t.redraw()};if(this.isWorkflowConnection&&!this.showInputs){var n=this.stepID<0?0:this.stepID,o=this.nextStepID<0?0:this.nextStepID;this.postActionConnection(n,o,this.selectedExistingActionType,this.currentWorkflowID,e)}else{var i=new FormData;i.append("CSRFToken",this.CSRFToken),i.append("actionText",this.actionText),i.append("actionTextPasttense",this.actionTextPasttense),i.append("actionIcon",this.actionIcon),i.append("sort",this.sortValue),i.append("fillDependency",+this.fillDependency),!0===this.isNewAction?this.postNewAction(i,e):this.postEditAction(i,this.actionType,e)}}},watch:{showInputs:function(){this.validate()}},template:'<div id="action_input_modal">\n            \x3c!-- WORKFLOW CONNECT --\x3e\n            <template v-if="isWorkflowConnection && showInputs === false">\n                <div>Select action for <b>{{ sourceTitle }}</b> to <b>{{ targetTitle }}</b>:</div>\n                <div>\n                    <label for="actionType" id="actionType_label">Select an existing action type:</label>\n                    <select id="actionType" v-model="selectedExistingActionType">\n                        <option value="">Select an Action</option>\n                        <option v-for="a in actions" :key="\'select_\' + a.actionType" :value="a.actionType">\n                            {{ a.actionText }}\n                        </option>\n                    </select>\n                </div>\n            </template>\n            <template v-if="isWorkflowConnection">\n                <fieldset>\n                    <legend>Options</legend>\n                    <label>\n                        <input type="radio" v-model="showInputs" v-bind:value="false">\n                        Use an existing Action Type\n                    </label>\n                    <label>\n                        <input type="radio" v-model="showInputs" v-bind:value="true">\n                        Create a new Action Type\n                    </label>\n                </fieldset>\n            </template>\n            \x3c!-- NEW, EDIT --\x3e\n            <template v-if="showInputs || !isWorkflowConnection">\n                <div :class="{\'entry_error\':isReservedError}">\n                    <label for="actionText" id="action_label">Action <span style="color: #c00">&nbsp;*Required</span></label>\n                    <div class="helper_text">eg: Approve</div>\n                    <div v-show="isReservedError" id="actionText_error_message" class="error_message">\n                        "This action name is not available.  Try another name."\n                    </div>\n                    <input id="actionText" type="text" maxlength="50" @change="validate" v-model.trim="actionText">\n                </div>\n                <div>\n                    <label for="actionTextPasttense" id="action_past_tense_label"> Action Past Tense <span style="color: #c00">&nbsp;*Required</span></label>\n                    <div class="helper_text">eg: Approved</div>\n                    <input id="actionTextPasttense" type="text" maxlength="50" @change="validate" v-model.trim="actionTextPasttense">\n                </div>\n                <div>\n                    <label for="actionIcon" id="choose_icon_label">Icon</label>\n                    <div class="helper_text">eg: go-next.svg &nbsp;<a :href="libsPath + \'dynicons/gallery.php\'" style="color:#005EA2;" target="_blank">List of available icons</a></div>\n                    <div class="action_icon">\n                        <input id="actionIcon" type="text" maxlength="50" v-model="actionIcon">\n                        <img v-if="actionIcon !== \'\'" :src="libsPath + \'dynicons/svg/\' + actionIcon" class="icon_preview">\n                    </div>\n                </div>\n                <div>\n                    <label for="actionSortNumber" id="action_sort_label">Button Order</label>\n                    <div class="helper_text">Lower numbers appear first</div>\n                    <input id="actionSortNumber" type="number" min="-128" max="127" style="width:80px;" v-model.trim="sort">\n                </div>\n                <div>\n                    <label for="fillDependency">\n                        Does this action represent moving forwards or backwards in the process?\n                    </label>\n                    <div v-if="+fillDependency < 1" id="backwards_action_note" class="helper_text">\n                        Note: Backwards actions do not save form field data.\n                    </div>\n                    <select id="fillDependency" v-model="fillDependency">\n                        <option value="1">Forwards</option>\n                        <option value="-1">Backwards</option>\n                    </select>\n                </div>\n            </template>\n        </div>'};function r(t){return r="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},r(t)}function l(t,e){var n=Object.keys(t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(t);e&&(o=o.filter(function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable})),n.push.apply(n,o)}return n}function a(t){for(var e=1;e<arguments.length;e++){var n=null!=arguments[e]?arguments[e]:{};e%2?l(Object(n),!0).forEach(function(e){c(t,e,n[e])}):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach(function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(n,e))})}return t}function c(t,e,n){return(e=function(t){var e=function(t){if("object"!=r(t)||!t)return t;var e=t[Symbol.toPrimitive];if(void 0!==e){var n=e.call(t,"string");if("object"!=r(n))return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(t);return"symbol"==r(e)?e:e+""}(e))in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}const u={name:"workflow-menu",inject:["libsPath","currentWorkflowID","currentStep","workflows","workflowsList","steps","newWorkflow","createStep","renameWorkflow","duplicateWorkflow","openHistoryDialog","listActions","listEvents","deleteWorkflow"],mounted:function(){console.log("menu mounted",Date.now());var t=document.getElementById("workflows");null!==t&&t.value!==this.currentWorkflowID&&(t.value=this.currentWorkflowID,$("#workflows").trigger("chosen:updated"))},computed:{selectedWorkflowDescription:function(){var t,e;return null!==(t=null===(e=this.workflows[this.currentWorkflowID])||void 0===e?void 0:e.description)&&void 0!==t?t:""},selectedWorkflowAria:function(){return this.selectedWorkflowDescription+"is selected."},selectedStepAria:function(){var t;return void 0!==(null===(t=this.currentStep)||void 0===t?void 0:t.stepTitle)?this.currentStep.stepTitle+"is selected.":""},stepList:function(){var t=[];for(var e in this.steps)t.push(a({},this.steps[e]));return t.sort(function(t,e){var n=t.stepTitle.toLowerCase(),o=e.stepTitle.toLowerCase();return n<o?-1:n>o?1:0})}},template:'<div id="sideBar">\n        <div>\n            <label id="workflows_label" for="workflows">Workflows:</label>\n            <div id="workflowList">\n                <span id="workflow_select_status" role="status" aria-live="polite" :aria-label="selectedWorkflowAria"></span>\n                <select id="workflows" title="Select a Workflow">\n                    <option v-for="w in workflowsList" :key="\'workflows_\' + w.workflowID" :value="w.workflowID">\n                        {{ w.description }} (ID:# {{ w.workflowID }})\n                    </option>\n                </select>\n            </div>\n        </div>\n        <button type="button" id="btn_newWorkflow" class="buttonNorm" @click="newWorkflow();">\n            <img :src="libsPath + \'dynicons/svg/list-add.svg\'" alt="">New Workflow\n        </button>\n        \n        <div>\n            <label id="steps_label" for="workflow_steps">Workflow Steps:</label>\n            <div id="stepList">\n                <span id="step_select_status" role="status" aria-live="polite" :aria-label="selectedStepAria"></span>\n                <select id="workflow_steps" title="Select a Workflow Step to edit it">\n                    <option value="0">Choose a step to edit</option>\n                    <option value="-1">Requestor</option>\n                    <option v-for="s in stepList" :key="\'workflow_steps_\' + s.stepID" :value="s.stepID">\n                        {{ s.stepTitle }} (#{{ s.stepID }})\n                    </option>\n                </select>\n            </div>\n        </div>\n        <button type="button" id="btn_createStep" class="buttonNorm" @click="createStep">\n            <img :src="libsPath + \'dynicons/svg/list-add.svg\'" alt="">New Step\n        </button>\n        <br>\n        <button type="button" id="btn_renameWorkflow" class="buttonNorm" @click="renameWorkflow()">\n            <img :src="libsPath + \'dynicons/svg/accessories-text-editor.svg\'" alt="" />Rename Workflow\n        </button>\n        <button type="button" id="btn_duplicateWorkflow" class="buttonNorm" @click="duplicateWorkflow()">\n            <img :src="libsPath + \'dynicons/svg/edit-copy.svg\'" alt="" />Copy Workflow\n        </button>\n        <br>\n        <button type="button" id="btn_viewHistory" class="buttonNorm" @click="openHistoryDialog(currentWorkflowID,\'workflow\');">\n            <img :src="libsPath + \'dynicons/svg/appointment.svg\'" alt="" />View History\n        </button>\n        <br>\n        <button type="button" id="btn_listActionType" class="buttonNorm" @click="listActions">\n            <img :src="libsPath + \'dynicons/svg/applications-other.svg\'" alt="" /> Edit Actions\n        </button>\n        <button type="button" id="btn_listEvents" class="buttonNorm" @click="listEvents">\n            <img :src="libsPath + \'dynicons/svg/gnome-system-run.svg\'" alt="" />Edit Events\n        </button>\n        <br>\n        <button type="button" id="btn_deleteWorkflow" class="buttonNorm" @click="deleteWorkflow">\n            <img :src="libsPath + \'dynicons/svg/list-remove.svg\'" alt="" />Delete Workflow\n        </button>\n    </div>'};function d(t){return d="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},d(t)}function p(t,e){var n=Object.keys(t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(t);e&&(o=o.filter(function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable})),n.push.apply(n,o)}return n}function f(t){for(var e=1;e<arguments.length;e++){var n=null!=arguments[e]?arguments[e]:{};e%2?p(Object(n),!0).forEach(function(e){h(t,e,n[e])}):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(n)):p(Object(n)).forEach(function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(n,e))})}return t}function h(t,e,n){return(e=function(t){var e=function(t){if("object"!=d(t)||!t)return t;var e=t[Symbol.toPrimitive];if(void 0!==e){var n=e.call(t,"string");if("object"!=d(n))return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(t);return"symbol"==d(e)?e:e+""}(e))in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}const v={name:"workflow-step-info",data:function(){var t,e;return{loadingDependencies:!0,checkingModules:!0,submenuElement:null,stepElement:null,stepTitleInput:null!==(t=null===(e=this.currentStep)||void 0===e?void 0:e.stepTitle)&&void 0!==t?t:"",selectedNextID:"",viewStepActions:!1,stepDependencies:[],indicatorListAll:[],leafWorkflowIndicator:""}},created:function(){"step"===this.workflowStepInfoType&&0!==this.stepID&&(this.getStepDependencies(),this.getIndicatorList(),this.checkForStepModules())},mounted:function(){console.log("mounted step info"),this.submenuElement=document.getElementById(this.menuID),this.stepElement=document.getElementById("step_"+this.stepID),this.setSubmenuPositions()},inject:["APIroot","CSRFToken","libsPath","isJSON","decodeAndStripHTML","currentWorkflowID","workflowStepInfoType","currentStep","currentJSPlumbParams","steps","routes","workflowCategories","createConnection","updateStepTitle","postStepModule","removeAction","closeWorkflowStepInfo","openBasicConfirmDialog","showFormDialog"],computed:{isEditable:function(){return this.currentWorkflowID>0},isNotEnd:function(){return 0!==this.stepID},isNotRequestor:function(){return-1!==this.stepID},stepID:function(){var t,e;return null!==(t=null===(e=this.currentStep)||void 0===e?void 0:e.stepID)&&void 0!==t?t:null},actionType:function(){var t,e;return null!==(t=null===(e=this.currentJSPlumbParams)||void 0===e?void 0:e.action)&&void 0!==t?t:null},menuID:function(){var t;return"stepInfo_"+(null!==(t=this.stepID)&&void 0!==t?t:this.actionType)},fromStepID:function(){var t,e;return null!==(t=null===(e=this.currentJSPlumbParams)||void 0===e?void 0:e.stepID)&&void 0!==t?t:null},fromStepTitle:function(){var t,e="Requestor";return-1!==this.fromStepID&&(e=this.decodeAndStripHTML((null===(t=this.steps)||void 0===t||null===(t=t[this.fromStepID])||void 0===t?void 0:t.stepTitle)||"")),e},outboundRoutes:function(){var t=this,e=!1,n=[];return this.routes.map(function(o){o.stepID===t.stepID&&n.push(f({},o)),"submit"===o.actionType&&(e=!0)}),-1===this.stepID&&!1===e&&n.push({actionText:"Submit",actionType:"submit",actionIcon:"",stepID:-1}),n},stepRouteOptions:function(){var t=this,e=[];return this.currentWorkflowID>0&&(Object.keys(this.steps).forEach(function(n){+n!==t.stepID&&e.push(f({},t.steps[n]))}),e=e.sort(function(t,e){var n=t.stepTitle.toLowerCase(),o=e.stepTitle.toLowerCase();return n<o?-1:n>o?1:0})),e},uniqueStepDependencies:function(){var t={},e=[];return this.stepDependencies.forEach(function(n){void 0===t[n.dependencyID]&&(e.push(n),t[n.dependencyID]=1)}),e},customRequirementGroupMap:function(){var t={},e=null;return this.stepDependencies.forEach(function(n){e=n.dependencyID,n.groupID>0&&(void 0===t[e]&&(t[e]=[]),t[e].push({groupID:n.groupID,name:n.name}))}),t},modalHeaderHTML:function(){var t="";switch(this.stepID){case null:"action"===this.workflowStepInfoType&&(t='Action: <div style="font-size:86%;">'.concat(this.fromStepTitle," clicks ").concat(this.actionType,"</div>"));break;case-1:t="Request initiator (stepID #: -1)";break;case 0:t="The End (stepID #: 0)";break;default:t="StepID: #".concat(this.stepID)}return t},smartRequirementIDs:function(){return[-3,-2,-1,1,8]},formfieldIndicatorList:function(){return this.indicatorListAll.filter(function(t){return null===t.parentIndicatorID||null!==t.parentStaples})},formfieldOptions:function(){var t=this,e=[];return this.workflowCategories.forEach(function(n){t.formfieldIndicatorList.forEach(function(t){(n.categoryID===t.categoryID||n.categoryID===t.parentCategoryID||Array.isArray(t.parentStaples)&&t.parentStaples.some(function(t){return t===n.categoryID}))&&e.push(f({},t))})}),e},dynamicApproverOptions:function(){return this.indicatorListAll.filter(function(t){return"orgchart_employee"===(null==t?void 0:t.format)||"raw_data"===(null==t?void 0:t.format)})},dynamicGroupApproverOptions:function(){return this.indicatorListAll.filter(function(t){return"orgchart_group"===(null==t?void 0:t.format)||"raw_data"===(null==t?void 0:t.format)})},emailNotificationHTML:function(){var t,e,n=null!==(t=null===(e=this.currentStep)||void 0===e?void 0:e.stepData)&&void 0!==t?t:"",o="";if(this.isJSON(n)){var i,s=JSON.parse(n);if("true"===(null===(i=s.AutomatedEmailReminders)||void 0===i||null===(i=i.AutomateEmailGroup)||void 0===i?void 0:i.toLowerCase())){var r,l,a,c=(null===(r=s.AutomatedEmailReminders)||void 0===r?void 0:r.DateSelected)||"",u=(null===(l=s.AutomatedEmailReminders)||void 0===l?void 0:l.DaysSelected)||"",d=(null===(a=s.AutomatedEmailReminders)||void 0===a?void 0:a.AdditionalDaysSelected)||"",p=+u>1?"Days":"Day",f=+d>1?"Days":"Day";o=""!==u?"<div>Email reminders will be sent after ".concat(u," ").concat(p," of inactivity.</div>"):"<div>Email reminders will be sent starting on ".concat(c,".</div>"),""!==d&&(o+="<div>Follow-up reminders will be sent after ".concat(d," ").concat(f," of inactivity.</div>"))}}return o}},methods:{tabControls:function(t){var e=arguments.length>1&&void 0!==arguments[1]&&arguments[1];!0===e&&null!=this.$refs.lastEl&&(this.$refs.lastEl.focus(),t.preventDefault()),!1===e&&!1===t.shiftKey&&null!=this.$refs.closeBtn&&(this.$refs.closeBtn.focus(),t.preventDefault())},setSubmenuPositions:function(){if(null!==this.submenuElement){"step"===this.workflowStepInfoType&&null!==this.stepElement&&(this.submenuElement.style.top=this.stepElement.offsetTop+this.stepElement.offsetHeight+8+"px",this.submenuElement.style.left=this.stepElement.offsetLeft+"px"),"action"===this.workflowStepInfoType&&null!==this.currentJSPlumbParams&&(this.submenuElement.style.top=this.currentJSPlumbParams.pageY+"px",this.submenuElement.style.left=this.currentJSPlumbParams.pageX+"px");var t=this.submenuElement.getBoundingClientRect();if(t.right>window.innerWidth){var e=16+t.right-window.innerWidth,n=parseInt(this.submenuElement.style.left);this.submenuElement.style.left=n-e+"px"}var o=document.getElementById("closeModal");null!==o&&o.focus()}},getStepDependencies:function(){var t=this;fetch("".concat(this.APIroot,"workflow/step/").concat(this.stepID,"/dependencies")).then(function(t){return t.json()}).then(function(e){t.stepDependencies=e,t.loadingDependencies=!1}).catch(function(t){return console.log(t)})},checkForStepModules:function(){var t,e=this;Array.isArray(null===(t=this.currentStep)||void 0===t?void 0:t.stepModules)&&this.currentStep.stepModules.forEach(function(t){if("LEAF_workflow_indicator"==t.moduleName&&e.isJSON(t.moduleConfig)){var n=JSON.parse(t.moduleConfig);e.leafWorkflowIndicator=n.indicatorID}}),this.checkingModules=!1},addConnection:function(){""!==this.selectedNextID&&this.createConnection(this.currentWorkflowID,this.stepID,+this.selectedNextID)},getIndicatorList:function(){var t=this,e=[];this.workflowCategories.forEach(function(t){return e.push(t.categoryID)});var n=e.join(",");fetch("".concat(this.APIroot,"form/indicator/list?includeHeadings=1&forms=").concat(n,"&x-filterData=").concat("categoryID,categoryName,parentCategoryID,indicatorID,name,format,parentIndicatorID,parentStaples")).then(function(t){return t.json()}).then(function(e){e.map(function(e){var n;e.name=t.decodeAndStripHTML(e.name),(null===(n=e.name)||void 0===n?void 0:n.length)>45&&(e.name=e.name.slice(0,42)+"...")}),t.indicatorListAll=e}).catch(function(t){return console.log(t)})},editRequirement:function(){console.log("edit requirement")},unlinkDependency:function(){var t=this,e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:0,n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"";if(!1===this.showFormDialog)this.openBasicConfirmDialog("Confirm removal of requirement:<br><b>".concat(n,"</b> from <b>Step ").concat(this.stepID,"</b>"),function(){return t.unlinkDependency(e)});else{var o="?CSRFToken=".concat(this.CSRFToken,"&workflowID=").concat(this.currentWorkflowID,"&dependencyID=").concat(e);fetch("".concat(this.APIroot,"workflow/step/").concat(this.stepID,"/dependencies").concat(o),{method:"DELETE"}).then(function(t){return t.json()}).then(function(n){1===+n?t.stepDependencies=t.stepDependencies.filter(function(t){return t.dependencyID!==e}):console.log(n)}).catch(function(t){return console.log(t)})}},setDynamicApprover:function(t){console.log("set dynamic employee")},setDynamicGroupApprover:function(t){console.log("set dynamic group")},dependencyGrantAccess:function(t,e){},openLinkDependencyDialog:function(){console.log("temp dialog method")},openEmailReminderDialog:function(){console.log("temp dialog method")}},watch:{currentStep:function(t,e){console.log("step watch",t,e)},currentJSPlumbParams:function(t,e){console.log("action watch",t,e)}},template:'<div :id="menuID" class="workflowStepInfo" :class="workflowStepInfoType"\n        @keydown.escape="closeWorkflowStepInfo($event, true)">\n        <div id="stepInfo_header">\n            <h3 v-html="modalHeaderHTML"></h3>\n            <button type="button" id="closeModal" aria-label="close modal"\n                @keydown.tab.shift="tabControls($event, true)" ref="closeBtn"\n                @click="closeWorkflowStepInfo($event, true)">\n                    &#10005;\n            </button>\n        </div>\n        \x3c!-- STEP submenu --\x3e\n        <div v-if="workflowStepInfoType === \'step\' && stepID !== null" id="stepInfo_content">\n            <template v-if="isNotEnd">\n                <template v-if="isNotRequestor">\n                    <label for="title"> Step Title:\n                        <input id="title" type="text" v-model="stepTitleInput"\n                        maxlength="64" @change="updateStepTitle(stepID, stepTitleInput)" :disabled="!isEditable">\n                    </label>\n                    <div v-if="!loadingDependencies">\n                        <b>Requirements</b>\n                        <ul id="step_requirements">\n                            <li v-if="!uniqueStepDependencies?.length > 0" class="error_message">A requirement must be added.</li>\n                            <li v-else v-for="d in uniqueStepDependencies" :key="\'step_\' + stepID + \'dep_\' + d.dependencyID">\n                                \x3c!-- SMART REQUIREMENTS --\x3e\n                                <template v-if="smartRequirementIDs.includes(d.dependencyID)">\n                                    <b style="color:green;vertical-align:middle;">{{ d.description }}</b>\n                                    <template v-if="isEditable">\n                                        \x3c!-- service chief and quadrad --\x3e\n                                        <button v-if="d.dependencyID === 1 || d.dependencyID === 8" type="button" class="buttonNorm icon"\n                                            @click="editRequirement(d.dependencyID, d.description, stepID)"\n                                            title="Edit Requirement Name" aria-label="Edit Requirement Name">\n                                            <img :src="libsPath + \'dynicons/svg/accessories-text-editor.svg\'" alt="">\n                                        </button>\n                                        <button type="button" class="buttonNorm icon"\n                                            @click="unlinkDependency(d.dependencyID, d.description)"\n                                            title="Remove Requirement" aria-label="Remove Requirement">\n                                            <img :src="libsPath + \'dynicons/svg/dialog-error.svg\'" alt="">\n                                        </button>\n                                    </template>\n                                    (depID: {{ d.dependencyID }})\n                                    <template v-if="d.dependencyID === -1">\n                                        <div v-if="d.indicatorID_for_assigned_empUID === null || d.indicatorID_for_assigned_empUID === 0"\n                                            class="error_message">A data field (indicatorID) must be set.</div>\n                                        <div>\n                                            indicatorID:\n                                            <span :class="{error_message: !d.indicatorID_for_assigned_empUID}">\n                                                {{ d.indicatorID_for_assigned_empUID ?? \'not set\' }}\n                                            </span>\n                                        </div>\n                                        <button v-if="isEditable" type="button" class="buttonNorm" @click="setDynamicApprover(stepID)">Set Data Field</button>\n                                    </template>\n                                    <template v-if="d.dependencyID === -3">\n                                        <div v-if="d.indicatorID_for_assigned_groupID === null || d.indicatorID_for_assigned_groupID === 0"\n                                            class="error_message">A data field (indicatorID) must be set.</div>\n                                        <div>\n                                            indicatorID:\n                                            <span :class="{error_message: !d.indicatorID_for_assigned_groupID}">\n                                                {{ d.indicatorID_for_assigned_groupID ?? \'not set\' }}\n                                            </span>\n                                        </div>\n                                        <button v-if="isEditable" type="button" class="buttonNorm" @click="setDynamicGroupApprover(stepID)">Set Data Field</button>\n                                    </template>\n                                </template>\n                                \x3c!-- CUSTOM REQUIREMENTS --\x3e\n                                <template v-else>\n                                    <b>{{ d.description }}</b>\n                                    <template v-if="isEditable">\n                                        <button type="button" class="buttonNorm icon"\n                                            @click="editRequirement(d.dependencyID, d.description, stepID)"\n                                            title="Edit Requirement Name" aria-label="Edit Requirement Name">\n                                            <img :src="libsPath + \'dynicons/svg/accessories-text-editor.svg\'" alt="">\n                                        </button>\n                                        <button type="button" class="buttonNorm icon"\n                                            @click="unlinkDependency(d.dependencyID, d.description)"\n                                            title="Remove Requirement" aria-label="Remove Requirement">\n                                            <img :src="libsPath + \'dynicons/svg/dialog-error.svg\'" alt="">\n                                        </button>\n                                    </template>\n                                    <ul :id="\'step_\' + stepID + \'_dep\' + d.dependencyID">\n                                        <li v-if="!customRequirementGroupMap[d.dependencyID]?.length > 0" class="error_message">A group must be added.</li>\n                                        <li v-else v-for="g in customRequirementGroupMap[d.dependencyID]"\n                                            :key="\'groups_\' + d.dependencyID + \'_\' + g.groupID">\n                                            {{ g.name }}\n                                        </li>\n                                        <button v-if="isEditable" type="button" class="buttonNorm" @click="dependencyGrantAccess(d.dependencyID, stepID)">\n                                            <img :src="libsPath + \'dynicons/svg/list-add.svg\'" alt=""> Add Group\n                                        </button>\n                                    </ul>\n                                </template>\n                            </li>\n                        </ul>\n                    </div>\n                    <div v-else><b>Loading ... </b></div>\n                </template>\n                \x3c!-- Formfield, Access outbound routes --\x3e\n                <fieldset>\n                    <legend>Options</legend>\n                    <label v-if="stepID > 0" :for="\'workflowIndicator_\' + stepID" style="margin:0 0 1.25rem 0;"> Form Field:\n                        <select :id="\'workflowIndicator_\' + stepID" v-model="leafWorkflowIndicator"\n                            @change="postStepModule(stepID, leafWorkflowIndicator)" :disabled="!isEditable">\n                            <option value="">None</option>\n                            <option v-for="f in formfieldOptions"\n                                :key="f.categoryID + \'_\' + f.indicatorID" :value="f.indicatorID">\n                                {{ f.categoryName }}: {{ f.name }} (id: {{ f.indicatorID }})\n                            </option>\n                        </select>\n                    </label>\n                    <label for="toggleManageActions" style="margin:0;">\n                        <input id="toggleManageActions" type="checkbox" style="margin:0;" v-model="viewStepActions">\n                        &nbsp; View Step Actions\n                    </label>\n                    <div v-show="viewStepActions" id="manage_actions_options">\n                        <ul id="outbound_actions_list">\n                            <li v-for="r in outboundRoutes" :key="\'route_info_\' + r.actionType">\n                                {{ r.actionText }}\n                                <button v-if="isEditable" type="button" class="icon"\n                                    :aria-label="\'Manage events for action: \' + r.actionText + \', step \' + r.stepID"\n                                    title="Manage Action Events"\n                                    aria-label="Manage Action Events">\n                                    <img :src="libsPath + \'dynicons/svg/accessories-text-editor.svg\'" alt="">\n                                </button>\n                                <button v-if="isEditable && r.stepID !== -1" type="button" class="icon"\n                                    :aria-label="\'Remove action: \' + r.actionText + \', step \' + r.stepID"\n                                    title="Remove this action"\n                                    aria-label="Remove Action" @click="removeAction(currentWorkflowID, stepID, r.actionType, r.nextStepID, r.actionText)">\n                                    <img :src="libsPath + \'dynicons/svg/dialog-error.svg\'" alt="">\n                                </button>\n                            </li>\n                        </ul>\n                        <template v-if="isEditable">\n                            <label for="create_route">Add Action:</label>\n                            <select id="create_route" title="Choose a step to connect to" v-model="selectedNextID" @change="addConnection">\n                                <option value="">Choose Step to Connect to</option>\n                                <option value="0">End</option>\n                                <template v-if="stepID > 0">\n                                    <option value="-1">Requestor</option>\n                                    <option :value="stepID">Self</option>\n                                </template>\n                                <option v-for="o in stepRouteOptions" :key="\'route_option_\' + o.stepID" :value="o.stepID">\n                                    {{ o.stepTitle }} (id#{{ o.stepID }})\n                                </option>\n                            </select>\n                        </template>\n                    </div>\n                </fieldset>\n                <template v-if="isNotRequestor && isEditable">\n                    <div v-if="emailNotificationHTML !== \'\'" v-html="emailNotificationHTML" id="email_reminder_html"></div>\n                    <div id="addRequirement_addReminder">\n                        <button type="button" class="buttonNorm" @click="openLinkDependencyDialog">Add Requirement</button>\n                        <button type="button" id="step_email_reminder" class="buttonNorm"\n                            @click="openEmailReminderDialog" @keydown.tab="tabControls($event, false)" ref="lastEl">\n                            Email Reminder\n                        </button>\n                    </div>\n                </template>\n            </template>\n         </div>\n\n         \x3c!-- ACTION submenu --\x3e\n         <div v-if="workflowStepInfoType === \'action\' && currentJSPlumbParams !== null" id="stepInfo_content">\n         </div>\n    </div>'};var m=n(425);function w(t){return w="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},w(t)}function g(t,e){var n=Object.keys(t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(t);e&&(o=o.filter(function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable})),n.push.apply(n,o)}return n}function b(t){for(var e=1;e<arguments.length;e++){var n=null!=arguments[e]?arguments[e]:{};e%2?g(Object(n),!0).forEach(function(e){I(t,e,n[e])}):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(n)):g(Object(n)).forEach(function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(n,e))})}return t}function I(t,e,n){return(e=function(t){var e=function(t){if("object"!=w(t)||!t)return t;var e=t[Symbol.toPrimitive];if(void 0!==e){var n=e.call(t,"string");if("object"!=w(n))return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(t);return"symbol"==w(e)?e:e+""}(e))in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}const y={name:"workflow-editor-view",components:{WorkflowMenu:u,WorkflowStepInfo:v,LeafFormDialog:o.A,HistoryDialog:i.A,WorkflowActionDialog:s,BasicConfirmDialog:{name:"basic-confirm-dialog",inject:["dialogData"],data:function(){return{confirmMessage:this.dialogData}},template:'<div id="basic_confirm_dialog" v-html="confirmMessage"></div>'}},data:function(){return{loading:!0,workflowMinHeight:300,spacerVector:{x:180,y:80},endStepDiffY:160,currentWorkflowID:null,currentStepID:null,workflowStepInfoType:"",firstWorkflowID:1,allWorkflows:[],steps:{},localSteps:{"-1":{stepID:-1,posX:null,posY:null},0:{stepID:0,posX:null,posY:null}},routes:[],workflowCategories:[],workflowStepDependencies:{},jsPlumbInstance:null,currentJSPlumbParams:null,endPoints:{},endpointOptions:{isSource:!0,isTarget:!0,endpoint:["Rectangle",{cssClass:"workflowEndpoint"}],paintStyle:{width:48,height:48},maxConnections:-1}}},inject:["APIroot","libsPath","CSRFToken","dialogData","getSiteSettings","isJSON","siteSettings","setDefaultAjaxResponseMessage","updateChosenAttributes","showFormDialog","dialogFormContent","openBasicConfirmDialog","openWorkflowActionDialog"],beforeRouteEnter:function(t,e,n){n(function(t){t.getSiteSettings(),t.setDefaultAjaxResponseMessage()})},beforeRouteLeave:function(){this.jsPlumbInstance.reset()},mounted:function(){this.loadWorkflowList(),this.setupJSPlumb(),console.log("mounted workflow editor view",Date.now()),document.addEventListener("mousedown",this.closeWorkflowStepInfo)},beforeUnmount:function(){document.removeEventListener("mousedown",this.closeWorkflowStepInfo)},provide:function(){var t=this;return{currentWorkflowID:(0,m.EW)(function(){return t.currentWorkflowID}),currentStep:(0,m.EW)(function(){return t.currentStep}),workflows:(0,m.EW)(function(){return t.workflows}),workflowsList:(0,m.EW)(function(){return t.workflowsList}),steps:(0,m.EW)(function(){return t.steps}),routes:(0,m.EW)(function(){return t.routes}),workflowCategories:(0,m.EW)(function(){return t.workflowCategories}),workflowStepInfoType:(0,m.EW)(function(){return t.workflowStepInfoType}),currentJSPlumbParams:(0,m.EW)(function(){return t.currentJSPlumbParams}),newWorkflow:this.newWorkflow,createStep:this.createStep,renameWorkflow:this.renameWorkflow,duplicateWorkflow:this.duplicateWorkflow,listActions:this.listActions,listEvents:this.listEvents,deleteWorkflow:this.deleteWorkflow,createConnection:this.createConnection,postActionConnection:this.postActionConnection,postNewAction:this.postNewAction,postEditAction:this.postEditAction,loadWorkflow:this.loadWorkflow,updateStepTitle:this.updateStepTitle,postStepModule:this.postStepModule,removeAction:this.removeAction,redraw:this.redraw,closeWorkflowStepInfo:this.closeWorkflowStepInfo}},computed:{routeQueryWorkflowID:function(){var t;return+(null===(t=this.$route.query)||void 0===t?void 0:t.workflowID)},hasRouteQueryDev:function(){return void 0!==this.$route.query.dev},workflowIDToLoad:function(){var t=this.routeQueryWorkflowID;return(0===t||void 0===this.workflows[t]||!1===this.hasRouteQueryDev&&t<0)&&(t=this.firstWorkflowID),t},workflowsList:function(){return this.hasRouteQueryDev?this.allWorkflows:this.allWorkflows.filter(function(t){return t.workflowID>0})},workflows:function(){var t={};return this.workflowsList.forEach(function(e){t[e.workflowID]=e}),t},hasWorkflows:function(){var t;return(null===(t=Object.keys(this.workflows))||void 0===t?void 0:t.length)>0},workflowMaxStepY:function(){var t=this.spacerVector.y,e=null;for(var n in this.steps){var o;(e=parseInt(null!==(o=this.steps[n].posY)&&void 0!==o?o:0))>t&&(t=e)}return t},workflowHeight:function(){return{height:this.workflowMinHeight+this.workflowMaxStepY+"px"}},requestorStepInitialVector:function(){return{x:this.spacerVector.x+40,y:this.spacerVector.y+40}},endStepInitialVector:function(){return{x:this.spacerVector.x+400,y:this.workflowMaxStepY+this.endStepDiffY}},requestorStepStyle:function(){return{left:this.localSteps[-1].posX+"px",top:this.localSteps[-1].posY+"px",backgroundColor:"#e0e0e0",fontWeight:"normal"}},lastStepStyle:function(){return{left:this.localSteps[0].posX+"px",top:this.localSteps[0].posY+"px",backgroundColor:"#ff8181",fontWeight:"normal"}},currentStep:function(){var t,e,n=null;return 0!==this.currentStepID&&-1!==this.currentStepID?n=null!==(t=null===(e=this.steps)||void 0===e?void 0:e[this.currentStepID])&&void 0!==t?t:null:null!==this.currentStepID&&(n={stepID:this.currentStepID}),n},configWarnings:function(){var t=this,e={},n=function(n){var o;void 0===e[n]&&(e[n]=""),(null!==(o=t.workflowStepDependencies[n])&&void 0!==o?o:[]).forEach(function(t){if(null===t.dependencyID)e[n]="\nA requirement must be added.";else switch(t.dependencyID){case-1:null===t.indicatorID_for_assigned_empUID&&(e[n]+="\nOrgchart Employee data field must be set.");break;case-3:null===t.indicatorID_for_assigned_groupID&&(e[n]+="\nOrgchart Group data field must be set.");break;default:t.dependencyID>8&&null===t.groupID&&(e[n]+="\nA requirement group must be added.")}})};for(var o in this.workflowStepDependencies)n(o);return e},stepInfoKey:function(){var t,e,n=null!==this.currentStepID?this.currentStepID:"".concat((null===(t=this.currentJSPlumbParams)||void 0===t?void 0:t.stepID)||"","_").concat((null===(e=this.currentJSPlumbParams)||void 0===e?void 0:e.action)||"");return"step_info_".concat(this.workflowStepInfoType,"_").concat(n)}},methods:{setupJSPlumb:function(){var t=this;jsPlumb.ready(function(){t.jsPlumbInstance=jsPlumb.getInstance(),t.jsPlumbInstance.Defaults.Container="workflow",t.jsPlumbInstance.Defaults.ConnectionOverlays=[["PlainArrow",{location:.9,width:16,length:14}]],t.jsPlumbInstance.Defaults.PaintStyle={stroke:"lime",lineWidth:1},t.jsPlumbInstance.Defaults.Connector=["StateMachine",{curviness:10}],t.jsPlumbInstance.Defaults.Anchor="Continuous",t.jsPlumbInstance.Defaults.Endpoint="Blank",console.log(t.jsPlumbInstance)})},updateChosen:function(){var t=this,e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"",n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"",o=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"Select an Option",i=arguments.length>3?arguments[3]:void 0;""!==e&&(0,m.dY)(function(){$("#"+e).chosen("destroy"),$("#"+e).chosen({disable_search_threshold:5,allow_single_deselect:!0}).change(function(t){return i(t)}),t.updateChosenAttributes(e,n,o)})},getStepStyle:function(){var t,e,n,o=arguments.length>0&&void 0!==arguments[0]?arguments[0]:0,i=this.localSteps[o]||this.steps[o],s=!0===(null===(t=this.steps[o])||void 0===t?void 0:t.hasUpdate)||!0===(null===(e=this.localSteps[o])||void 0===e?void 0:e.hasUpdate)?0:this.spacerVector.y;return void 0!==i?{left:Math.max(parseInt(i.posX),0)+"px",top:Math.max(parseInt(i.posY),s)+"px",fontSize:(null==i||null===(n=i.stepTitle)||void 0===n?void 0:n.length)>40?"86%":"100%",backgroundColor:i.stepBgColor,fontWeight:"normal"}:{}},makeStopHandler:function(t){var e=this;return function(){var n=document.getElementById("step_".concat(t));if(null!==n){var o=n.offsetLeft,i=n.offsetTop;e.updateStepPosition(t,o,i)}}},newWorkflow:function(){console.log("newWorkflow")},createStep:function(){console.log("createStep")},renameWorkflow:function(){},duplicateWorkflow:function(){},listActions:function(){},listEvents:function(){},deleteWorkflow:function(){},getCurrentWorkflow:function(){return fetch("".concat(this.APIroot,"workflow/").concat(this.currentWorkflowID)).then(function(t){return t.json()})},getCurrentWorkflowRoutes:function(){return fetch("".concat(this.APIroot,"workflow/").concat(this.currentWorkflowID,"/route")).then(function(t){return t.json()})},getCurrentWorkflowCategories:function(){return fetch("".concat(this.APIroot,"workflow/").concat(this.currentWorkflowID,"/categories")).then(function(t){return t.json()})},getCurrentWorkflowStepDependencies:function(){return fetch("".concat(this.APIroot,"workflow/").concat(this.currentWorkflowID,"/workflowStepDependencies")).then(function(t){return t.json()})},loadWorkflowList:function(){var t=this;fetch("".concat(this.APIroot,"workflow")).then(function(t){return t.json()}).then(function(e){var n;t.allWorkflows=e,t.firstWorkflowID=(null===(n=t.workflowsList)||void 0===n||null===(n=n[0])||void 0===n?void 0:n.workflowID)||0,t.currentWorkflowID=t.workflowIDToLoad,t.loading=!1}).catch(function(t){return console.log(t)})},loadWorkflow:function(){var t=this;if(this.routeQueryWorkflowID!==this.currentWorkflowID){var e={workflowID:this.currentWorkflowID};this.hasRouteQueryDev&&(e.dev=this.$route.query.dev),this.$router.push({path:"workflows",query:e})}for(var n in this.jsPlumbInstance.reset(),this.jsPlumbInstance.setSuspendDrawing(!0),this.localSteps)this.localSteps[n].poxX=null,this.localSteps[n].poxY=null;this.closeWorkflowStepInfo({},!0),this.steps={},this.routes=[],this.workflowCategories=[],this.workflowStepDependencies={},Promise.all([this.getCurrentWorkflow(),this.getCurrentWorkflowRoutes(),this.getCurrentWorkflowCategories(),this.getCurrentWorkflowStepDependencies()]).then(function(e){t.steps=e[0],t.routes=e[1],t.workflowCategories=e[2],t.workflowStepDependencies=e[3],t.localSteps[0].posX=t.endStepInitialVector.x,t.localSteps[0].posY=t.endStepInitialVector.y,t.localSteps[-1].posX=t.requestorStepInitialVector.x,t.localSteps[-1].posY=t.requestorStepInitialVector.y,t.jsPlumbConfig(),t.drawRoutes()}).catch(function(t){return console.log(t)})},jsPlumbConfig:function(){var t=this;(0,m.dY)(function(){for(var e in t.endPoints={},t.steps)null==t.endPoints[e]&&(t.endPoints[e]=t.jsPlumbInstance.addEndpoint("step_"+e,{anchor:"Continuous"},t.endpointOptions),t.jsPlumbInstance.draggable("step_"+e,{allowNegative:!1,stop:t.makeStopHandler(+e)}));null==t.endPoints[-1]&&(t.endPoints[-1]=t.jsPlumbInstance.addEndpoint("step_-1",{anchor:"Continuous"},t.endpointOptions),t.jsPlumbInstance.draggable("step_-1",{allowNegative:!1,stop:t.makeStopHandler(-1)})),null==t.endPoints[0]&&(t.endPoints[0]=t.jsPlumbInstance.addEndpoint("step_0",{anchor:"Continuous"},b(b({},t.endpointOptions),{},{isSource:!1})),t.jsPlumbInstance.draggable("step_0",{allowNegative:!1,stop:t.makeStopHandler(0)}))})},drawRoutes:function(){var t=this;(0,m.dY)(function(){var e,n=.5,o={};if(t.routes.forEach(function(e){switch(n=.5,e.actionType.toLowerCase()){case"sendback":n=.3;break;case"approve":case"concur":n=.5;break;case"defer":n=.25;break;case"disapprove":n=.75;break;default:var i=String(e.stepID),s=String(e.nextStepID);if(i!==s){var r=i+"_"+s;(null==o?void 0:o[r])>=0?(o[r]+=1,(n=Math.min(+(.05+.15*o[r]).toFixed(2),.65))>=.5&&(n+=.15)):o[r]=0}}if(0===e.nextStepID&&"sendback"==e.actionType)t.jsPlumbInstance.connect({source:"step_"+e.stepID,target:"step_-1",paintStyle:{stroke:"red"},overlays:[["Label",{id:"stepLabel_".concat(e.stepID,"_0_").concat(e.actionType),cssClass:"workflowAction action-".concat(e.stepID,"-sendback--1"),label:e.actionText,location:n,parameters:{stepID:e.stepID,nextStepID:0,action:e.actionType},events:{click:function(e,n){var o=e.getParameters();t.showActionInfo(o,n)}}}]]});else{var l={source:"step_"+e.stepID,target:"step_"+e.nextStepID,connector:["StateMachine",{curviness:10}],anchor:"Continuous",overlays:[["Label",{id:"stepLabel_"+e.stepID+"_"+e.nextStepID+"_"+e.actionType,cssClass:"workflowAction action-".concat(e.stepID,"-").concat(e.actionType,"-").concat(e.nextStepID),label:e.actionText,location:n,parameters:{stepID:e.stepID,nextStepID:e.nextStepID,action:e.actionType},events:{click:function(e,n){var o=e.getParameters();t.showActionInfo(o,n)}}}]]};"sendback"==e.actionType&&(l.paintStyle={stroke:"red"}),t.jsPlumbInstance.connect(l)}}),0!==(null===(e=t.workflows[t.currentWorkflowID])||void 0===e?void 0:e.initialStepID)){var i=t.workflows[t.currentWorkflowID].initialStepID;t.jsPlumbInstance.connect({source:t.endPoints[-1],target:t.endPoints[i],connector:["StateMachine",{curviness:10}],anchor:"Continuous",overlays:[["Label",{id:"stepLabel_0_"+i+"_submit",cssClass:"workflowAction action--1-submit-".concat(i),label:"Submit",location:n,parameters:{stepID:-1,nextStepID:i,action:"submit"},events:{click:function(e,n){var o=e.getParameters();t.showActionInfo(o,n)}}}]]})}t.jsPlumbInstance.bind("connection",function(e){if(t.currentWorkflowID>0){var n=parseInt(e.sourceId.substr(5)),o=parseInt(e.targetId.substr(5));t.createConnection(t.currentWorkflowID,n,o)}}),t.jsPlumbInstance.setSuspendDrawing(!1,!0),Array.from(document.querySelectorAll(".workflowEndpoint")).forEach(function(e){return e.style.backgroundImage="url(".concat(t.libsPath,"dynicons/svg/network-wired.svg)")})})},redraw:function(){var t=this;this.getCurrentWorkflowRoutes().then(function(e){t.routes=e,t.jsPlumbInstance.reset(),t.jsPlumbConfig(),t.drawRoutes()})},updateStepPosition:function(t,e,n){var o=this;if(t>0){var i=new FormData;i.append("CSRFToken",this.CSRFToken),i.append("stepID",t),i.append("x",e),i.append("y",n);var s=this.steps[t].posX,r=this.steps[t].posY;this.steps[t].posX=e,this.steps[t].posY=n,this.steps[t].hasUpdate=!0,fetch("".concat(this.APIroot,"workflow/").concat(this.currentWorkflowID,"/editorPosition"),{method:"POST",body:i}).catch(function(e){console.log("error saving step position",e),o.steps[t].posX=s,o.steps[t].posY=r})}else{var l;if(Number.isInteger(t)&&void 0===(null===(l=this.localSteps)||void 0===l?void 0:l[t])){var a=this.steps[t],c=a.stepID,u=a.posX,d=a.posY,p=a.stepBgColor,f=a.stepTitle;this.localSteps[c]={stepID:c,posX:u,posY:d,stepBgColor:p,stepTitle:f},this.steps[c].hasUpdate=!0}void 0!==this.localSteps[t]&&(this.localSteps[t].posX=e,this.localSteps[t].posY=n)}},showStepInfo:function(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:-1;if(console.log("show step info"),this.workflowStepInfoType="step",this.currentJSPlumbParams=null,this.currentStepID===t)this.currentStepID=null;else{this.currentStepID=+t;var e=document.getElementById("workflow_steps");null!==e&&+e.value!==t&&(e.value=t,$("#workflow_steps").trigger("chosen:updated"))}},showActionInfo:function(t,e){var n,o,i,s;this.workflowStepInfoType="action",this.currentStepID=null,this.currentJSPlumbParams=b(b({},t),{},{pageX:null!==(n=null==e?void 0:e.pageX)&&void 0!==n?n:200,pageY:null!==(o=null==e?void 0:e.pageY)&&void 0!==o?o:300,mediatingStep:null!==(i=null==e||null===(s=e.detail)||void 0===s?void 0:s.mediatingStep)&&void 0!==i?i:null})},closeWorkflowStepInfo:function(t){var e=arguments.length>1&&void 0!==arguments[1]&&arguments[1];if(!1===e&&!1===this.showFormDialog){var n;console.log("close submenu target was ",null===(n=t.target)||void 0===n?void 0:n.id);var o=document.querySelector(".workflowStepInfo");e=t.target.closest(".workflowStepInfo")!==o}!0===e&&(this.currentStepID=null,this.currentJSPlumbParams=null,this.workflowStepInfoType="")},emailNotificationIcon:function(){var t,e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:0,n="",o=null===(t=this.steps)||void 0===t?void 0:t[e];if("string"==typeof(null==o?void 0:o.stepData)&&this.isJSON(o.stepData)){var i,s=JSON.parse(o.stepData);if("true"===(null===(i=s.AutomatedEmailReminders)||void 0===i||null===(i=i.AutomateEmailGroup)||void 0===i?void 0:i.toLowerCase())){var r=s.AutomatedEmailReminders.DaysSelected,l=r>1?"Days":"Day";n='<img src="'.concat(this.libsPath,'dynicons/svg/appointment.svg"\n                        style="height:18px;width:18px;margin-bottom:-3px;"\n                        alt="Email reminders will be sent after ').concat(r," ").concat(l,' of inactivity"\n                        title="Email reminders will be sent after ').concat(r," ").concat(l,' of inactivity">')}}return n},createConnection:function(t,e,n){var o=this;if(-1===e)-1!==n&&this.setInitialStep(t,n,function(){o.allWorkflows.map(function(e){e.workflowID===t&&(e.initialStepID=n)}),0===n?o.postActionConnection(-1,0,"submit",t,o.redraw):o.redraw()});else if(-1===n)this.postActionConnection(e,0,"sendback",t,this.redraw);else{var i={stepID:e,nextStepID:n};this.openWorkflowActionDialog(i,!0,!0)}},setInitialStep:function(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:this.currentWorkflowID,e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null,o=new FormData;o.append("CSRFToken",this.CSRFToken),o.append("stepID",e),fetch("".concat(this.APIroot,"workflow/").concat(t,"/initialStep"),{method:"POST",body:o}).then(function(t){return t.json()}).then(function(){"function"==typeof n&&n()}).catch(function(t){return console.log(t)})},updateStepTitle:function(){var t=this,e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:0,n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"";if(e>0){var o=new FormData;o.append("CSRFToken",this.CSRFToken),o.append("title",n),fetch("".concat(this.APIroot,"workflow/step/").concat(e),{method:"POST",body:o}).then(function(t){return t.json()}).then(function(o){1===+o?t.steps[e].stepTitle=n:console.log("issue saving step title",o)}).catch(function(t){return console.log(t)})}},postStepModule:function(){var t=this,e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"",n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;if(n>0){var o=new FormData;o.append("CSRFToken",this.CSRFToken),o.append("indicatorID",n),fetch("".concat(this.APIroot,"workflow/step/").concat(e,"/inlineIndicator"),{method:"POST",body:o}).then(function(t){return t.json()}).then(function(e){1===+e?t.getCurrentWorkflow().then(function(e){return t.steps=e}).catch(function(t){return console.log(t)}):console.log("issue saving form field",e)}).catch(function(t){return console.log(t)})}},postActionConnection:function(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:0,e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"",o=arguments.length>3&&void 0!==arguments[3]?arguments[3]:this.currentWorkflowID,i=arguments.length>4&&void 0!==arguments[4]?arguments[4]:{},s=new FormData;s.append("CSRFToken",this.CSRFToken),s.append("stepID",t),s.append("nextStepID",e),s.append("action",n),fetch("".concat(this.APIroot,"workflow/").concat(o,"/action"),{method:"POST",body:s}).then(function(t){return t.json()}).then(function(t){1!==+t&&console.log("issue connecting route action",t),"function"==typeof i&&i()}).catch(function(t){return console.log(t)})},postNewAction:function(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null;fetch("".concat(this.APIroot,"system/action"),{method:"POST",body:t}).then(function(t){return t.json()}).then(function(t){var n;2!==(null==t||null===(n=t.status)||void 0===n?void 0:n.code)&&console.log(t),"function"==typeof e&&e()}).catch(function(t){return console.log(t)})},postEditAction:function(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},e=arguments.length>1?arguments[1]:void 0,n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null;fetch("".concat(this.APIroot,"workflow/editAction/_").concat(e),{method:"POST",body:t}).then(function(t){return t.json()}).then(function(t){console.log("edit action res",t),"function"==typeof n&&n()}).catch(function(t){return console.log(t)})},removeAction:function(t,e,n,o){var i=this,s=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"";if(!1===this.showFormDialog){var r,l,a,c,u=null!==(r=null===(l=this.steps[e])||void 0===l?void 0:l.stepTitle)&&void 0!==r?r:"",d="sendback"===n?"Requestor":0===o?"End":null!==(a=null===(c=this.steps[o])||void 0===c?void 0:c.stepTitle)&&void 0!==a?a:"";this.openBasicConfirmDialog("Confirm removal of action <b>".concat(s,'</b>\n                        <div id="remove_action_confirm">\n                            <div class="workflowStep">').concat(u,"<br>(step#").concat(e,')</div> → \n                            <span style="cursor:auto;" class="workflowAction ">').concat(s,'</span> → \n                            <div class="workflowStep">').concat(d,"<br>(step#").concat(o,")</div>\n                        </div>"),function(){return i.removeAction(t,e,n,o)})}else{var p="?CSRFToken=".concat(this.CSRFToken);fetch("".concat(this.APIroot,"workflow/").concat(t,"/step/").concat(e,"/_").concat(n,"/").concat(o).concat(p),{method:"DELETE"}).then(function(t){return t.json()}).then(function(t){1===+t?i.redraw():console.log("issue removing action",t)}).catch(function(t){return console.log(t)})}}},watch:{routeQueryWorkflowID:function(t,e){console.log("watch route wfID changed",t,e);var n=document.getElementById("workflows");null!==n&&+n.value!==t&&(console.log("updating select value and dispatching change event"),n.value=t,n.dispatchEvent(new Event("change")),$("#workflows").trigger("chosen:updated"))},hasRouteQueryDev:function(){console.log("dev param changed, confirming wf to load set"),this.currentWorkflowID=this.workflowIDToLoad},currentWorkflowID:function(){console.log("wf id changed to",this.currentWorkflowID,"reset local step positions"),void 0!==this.workflows[this.currentWorkflowID]?this.loadWorkflow():this.currentWorkflowID=this.firstWorkflowID},workflows:function(t,e){var n=this;console.log("wfs changed, update chosen options",t,e,Date.now()),this.updateChosen("workflows","workflows_label","Select a Workflow",function(t){console.log("wf selection triggered wfID update"),n.currentWorkflowID=+t.target.value})},steps:function(t,e){var n=this;console.log("steps changed, update chosen options",t,e),this.updateChosen("workflow_steps","steps_label","Select a Step",function(t){console.log("step dropdown selection triggered stepID and info type update"),0!==+t.target.value&&(n.workflowStepInfoType="step",n.currentStepID=+t.target.value)})}},template:'<div v-if="loading" class="page_loading">\n            Loading...\n            <img src="../images/largespinner.gif" alt="" />\n        </div>\n        <div v-else>\n        {{ dialogData }}\n            \x3c!-- TODO: this should be assoc with nav --\x3e\n            <div v-if="siteSettings?.siteType===\'national_subordinate\'" id="subordinate_site_warning" style="padding: 0.5rem; margin: 0.5rem 0;" >\n                <h3 style="margin: 0 0 0.5rem 0; color: #a00;">This is a Nationally Standardized Subordinate Site</h3>\n                <span><b>Do not make modifications!</b> &nbsp;Synchronization problems will occur. &nbsp;Please contact your process POC if modifications need to be made.</span>\n            </div>\n            <section id="workflow_editor" v-if="hasWorkflows">\n                <WorkflowMenu />\n\n                <div id="workflow" :style="workflowHeight">\n                    <template v-if="currentStepID !== null || currentJSPlumbParams !== null">\n                        <WorkflowStepInfo :key="stepInfoKey" />\n                    </template>\n                    <button type="button" class="workflowStep" id="step_-1" :style="requestorStepStyle"\n                        aria-label="workflow step: Requestor"\n                        aria-controls="stepInfo_-1"\n                        :aria-expanded="currentStepID === -1"\n                        @click="showStepInfo(-1)"\n                        @touchend="showStepInfo(-1)">\n                        Requestor\n                    </button>\n\n                    <template v-for="s in steps" :key="\'wf_step_\' + s.stepID">\n                        <button type="button" class="workflowStep" :id="\'step_\' + s.stepID" :style="getStepStyle(s.stepID)"\n                            :aria-label="\'workflow step: \' + s.stepTitle"\n                            :aria-controls="\'stepInfo_\' + s.stepID"\n                            :aria-expanded="currentStepID === s.stepID"\n                            @click="showStepInfo(s.stepID)"\n                            @touchend="showStepInfo(s.stepID)">\n                                {{ s.stepTitle }}&nbsp;<span v-if="typeof s?.stepData === \'string\'" v-html="emailNotificationIcon(s.stepID)"></span>\n                                <div v-if="configWarnings?.[s.stepID]"\n                                    class="missing_requirement"\n                                    :title="\'Config missing for Step \' + s.stepID + \': \' + configWarnings?.[s.stepID]"\n                                    :aria-label="\'Config missing for Step \' + s.stepID + \': \' + configWarnings?.[s.stepID]">⚠️\n                                </div>\n                        </button>\n                    </template>\n\n                    <button type="button" class="workflowStep" id="step_0" :style="lastStepStyle"\n                        aria-label="Workflow End"\n                        aria-controls="stepInfo_0"\n                        :aria-expanded="currentStepID === 0"\n                        @click="showStepInfo(0)"\n                        @touchend="showStepInfo(0)">\n                            End\n                    </button>\n                </div>\n            </section>\n\n            NOTE: TEST routes\n            <div style="display:flex;gap:2rem">\n            <router-link :to="{ name: \'browser\' }" >\n                Browser\n            </router-link>\n            <router-link :to="{ name: \'restore\' }" >\n                Restore Fields\n            </router-link>\n            <router-link :to="{ name: \'category\', query: { formID: \'form_512fa\' }}">\n                Input Formats\n            </router-link>\n            </div>\n        </div>\n\n        \x3c!-- DIALOGS --\x3e\n        <leaf-form-dialog v-if="showFormDialog">\n            <template #dialog-content-slot>\n                <component :is="dialogFormContent"></component>\n            </template>\n        </leaf-form-dialog>'}}}]);