"use strict";(self.webpackChunkleaf_vue=self.webpackChunkleaf_vue||[]).push([[160],{380:(t,e,n)=>{n.r(e),n.d(e,{default:()=>r});var o=n(392),i=n(424);const s={name:"workflow-action-dialog",data:function(){return{actionText:this.dialogData.actionText||"",actionTextPasttense:this.dialogData.actionTextPasttense||"",actionIcon:(this.dialogData.actionIcon||"").trim(),sort:this.dialogData.sort||0,fillDependency:this.dialogData.fillDependency||1,isNewAction:this.dialogData.isNewAction||!1}},inject:["APIroot","CSRFToken","libsPath","dialogData","setDialogSaveFunction","closeFormDialog"],created:function(){this.setDialogSaveFunction(this.onSave)},mounted:function(){document.getElementById("actionText").focus()},methods:{onSave:function(){this.closeFormDialog()}},template:'<div id="action_input_modal">\n            <div>\n                <label for="actionText" id="action_label">Action <span style="color: #c00">&nbsp;*Required</span></label>\n                <div class="helper_text">eg: Approve</div>\n                <div id="actionText_error_message" class="error_message"></div>\n                <input id="actionText" type="text" maxlength="50" v-model="actionText">\n            </div>\n            <div>\n                <label for="actionTextPasttense" id="action_past_tense_label"> Action Past Tense <span style="color: #c00">&nbsp;*Required</span></label>\n                <div class="helper_text">eg: Approved</div>\n                <input id="actionTextPasttense" type="text" maxlength="50" v-model="actionTextPasttense">\n            </div>\n            <div>\n                <label for="actionIcon" id="choose_icon_label">Icon</label>\n                <div class="helper_text">eg: go-next.svg &nbsp;<a :href="libsPath + \'dynicons/gallery.php\'" style="color:#005EA2;" target="_blank">List of available icons</a></div>\n                <div class="action_icon">\n                    <input id="actionIcon" type="text" maxlength="50" v-model="actionIcon">\n                    <img v-if="actionIcon !== \'\'" :src="libsPath + \'dynicons/svg/\' + actionIcon" class="icon_preview">\n                </div>\n            </div>\n            <div>\n                <label for="actionSortNumber" id="action_sort_label">Button Order</label>\n                <div class="helper_text">Lower numbers appear first</div>\n                <input id="actionSortNumber" type="number" min="-128" max="127" style="width:80px;" v-model="sort">\n            </div>\n            <div>\n                <label for="fillDependency" style="font-family:\'Source Sans Pro Web\', sans-serif; font-size: 1rem;">\n                    Does this action represent moving forwards or backwards in the process?\n                </label>\n                <div id="backwards_action_note" style="max-width:600px; display: none;" class="helper_text">\n                    Note: Backwards actions do not save form field data.\n                </div>\n                <select id="fillDependency" v-model="fillDependency">\n                    <option value="1">Forwards</option>\n                    <option value="-1">Backwards</option>\n                </select>\n            </div>\n        </div>'},l={name:"workflow-step-info",data:function(){return{viewStepActions:!1}},inject:["currentStep"],computed:{stepID:function(){var t,e;return null!==(t=null===(e=this.currentStep)||void 0===e?void 0:e.stepID)&&void 0!==t?t:null},stepInfoStyles:function(){var t={};if(null!==this.stepID){var e=$("#step_"+this.stepID).offset(),n=$("#step_"+this.stepID).height();t={top:e.top+n+20+"px",left:e.left+"px"}}return t}},template:'<div v-if="currentStep !== null" :id="\'stepInfo_\' + stepID" class="workflowStepInfo" :style="stepInfoStyles">\n        <div v-if="stepID === -1">\n            Request initiator (stepID #: -1)\n            <input type="checkbox" v-model="viewStepActions">\n            <ul v-show="viewStepActions">Test req</ul>\n        </div>\n        <div v-else-if="stepID === 0">\n            End\n        </div>\n        <div v-else>\n            <h3>stepID: #{{ stepID }}</h3>\n            <input type="checkbox" v-model="viewStepActions">\n            <ul v-show="viewStepActions">Test other</ul>\n        </div>\n        {{ stepInfoStyles }}\n    </div>'};var a=n(425);const r={name:"workflow-editor-view",components:{WorkflowMenu:{name:"workflow-menu",inject:["libsPath","currentWorkflowID","workflows","steps","newWorkflow","createStep","renameWorkflow","duplicateWorkflow","openHistoryDialog","listActions","listEvents","deleteWorkflow"],computed:{selectedWorkflowDescription:function(){var t,e;return null!==(t=null===(e=this.workflows[this.currentWorkflowID])||void 0===e?void 0:e.description)&&void 0!==t?t:""},selectedWorkflowAria:function(){return this.selectedWorkflowDescription+"is selected."},selectedStepAria:function(){return"TODO:is selected."}},template:'<div id="sideBar">\n        <div>\n            <label id="workflows_label" for="workflows">Workflows:</label>\n            <div id="workflowList">\n                <span id="workflow_select_status" role="status" aria-live="polite" :aria-label="selectedWorkflowAria"></span>\n                <select id="workflows" title="Select a Workflow">\n                    <option v-for="w in workflows" :key="\'workflows_\' + w.workflowID" :value="w.workflowID">\n                        {{ w.description }} (ID:# {{ w.workflowID }})\n                    </option>\n                </select>\n            </div>\n        </div>\n        <button type="button" id="btn_newWorkflow" class="buttonNorm" @click="newWorkflow();">\n            <img :src="libsPath + \'dynicons/svg/list-add.svg\'" alt="">New Workflow\n        </button>\n        \n        <div>\n            <label id="steps_label" for="workflow_steps">Workflow Steps:</label>\n            <div id="stepList">\n                <span id="step_select_status" role="status" aria-live="polite" :aria-label="selectedStepAria"></span>\n                <select id="workflow_steps" title="Select a Workflow Step to edit it">\n                    <option>Choose a step to edit</option>\n                    <option value="-1">Requestor</option>\n                    <option v-for="s in steps" :key="\'workflow_steps_\' + s.stepID" :value="s.stepID">\n                        {{ s.stepTitle }} (#{{ s.stepID }})\n                    </option>\n                </select>\n            </div>\n        </div>\n        <button type="button" id="btn_createStep" class="buttonNorm" @click="createStep">\n            <img :src="libsPath + \'dynicons/svg/list-add.svg\'" alt="">New Step\n        </button>\n        <br>\n        <button type="button" id="btn_renameWorkflow" class="buttonNorm" @click="renameWorkflow()">\n            <img :src="libsPath + \'dynicons/svg/accessories-text-editor.svg\'" alt="" />Rename Workflow\n        </button>\n        <button type="button" id="btn_duplicateWorkflow" class="buttonNorm" @click="duplicateWorkflow()">\n            <img :src="libsPath + \'dynicons/svg/edit-copy.svg\'" alt="" />Copy Workflow\n        </button>\n        <br>\n        <button type="button" id="btn_viewHistory" class="buttonNorm" @click="openHistoryDialog(currentWorkflowID,\'workflow\');">\n            <img :src="libsPath + \'dynicons/svg/appointment.svg\'" alt="" />View History\n        </button>\n        <br>\n        <button type="button" id="btn_listActionType" class="buttonNorm" @click="listActions">\n            <img :src="libsPath + \'dynicons/svg/applications-other.svg\'" alt="" /> Edit Actions\n        </button>\n        <button type="button" id="btn_listEvents" class="buttonNorm" @click="listEvents">\n            <img :src="libsPath + \'dynicons/svg/gnome-system-run.svg\'" alt="" />Edit Events\n        </button>\n        <br>\n        <button type="button" id="btn_deleteWorkflow" class="buttonNorm" @click="deleteWorkflow">\n            <img :src="libsPath + \'dynicons/svg/list-remove.svg\'" alt="" />Delete Workflow\n        </button>\n    </div>'},WorkflowStepInfo:l,LeafFormDialog:o.A,HistoryDialog:i.A,WorkflowActionDialog:s},data:function(){return{loading:!0,firstWorkflowDescription:"",firstWorkflowID:0,workflows:{},currentWorkflowID:null,steps:{},currentStepID:null,routes:[],jsPlumbInstance:null,endPoints:[],endpointOptions:{isSource:!0,isTarget:!0,endpoint:["Rectangle",{cssClass:"workflowEndpoint"}],paintStyle:{width:48,height:48},maxConnections:-1},mock_action:{actionText:"mock action test",actionTextPasttense:"mock action tested",actionIcon:"applications-graphics.svg",sort:0,fillDependency:1},mock_isNew:!1}},inject:["APIroot","libsPath","CSRFToken","getSiteSettings","isJSON","siteSettings","setDefaultAjaxResponseMessage","updateChosenAttributes","showFormDialog","dialogFormContent","openWorkflowActionDialog"],beforeRouteEnter:function(t,e,n){n((function(t){t.getSiteSettings(),t.setDefaultAjaxResponseMessage()}))},created:function(){this.loadWorkflowList()},mounted:function(){var t=this;this.setupJSPlumb(),this.updateChosen("workflows","workflows_label","Select a Workflow",(function(e){t.currentWorkflowID=e.target.value})),document.addEventListener("mousedown",this.closeStep)},beforeUnmount:function(){document.removeEventListener("mousedown",this.closeStep)},provide:function(){var t=this;return{workflows:(0,a.EW)((function(){return t.workflows})),steps:(0,a.EW)((function(){return t.steps})),currentWorkflowID:(0,a.EW)((function(){return t.currentWorkflowID})),currentStep:(0,a.EW)((function(){return t.currentStep})),newWorkflow:this.newWorkflow,createStep:this.createStep,renameWorkflow:this.renameWorkflow,duplicateWorkflow:this.duplicateWorkflow,listActions:this.listActions,listEvents:this.listEvents,deleteWorkflow:this.deleteWorkflow}},computed:{hasWorkflows:function(){var t;return(null===(t=Object.keys(this.workflows))||void 0===t?void 0:t.length)>0},workflowMaxY:function(){var t=80,e=null;for(var n in this.steps)(e=parseInt(this.steps[n].posY))>t&&(t=e);return t},workflowHeight:function(){return{height:300+this.workflowMaxY+"px"}},requestorStepStyle:function(){return{left:"220px",top:"120px",backgroundColor:"#e0e0e0",fontWeight:"normal"}},lastStepStyle:function(){return{left:"580px",top:160+this.workflowMaxY+"px",backgroundColor:"#ff8181",fontWeight:"normal"}},currentStep:function(){var t,e,n=null;return this.currentStepID>0?n=null!==(t=null===(e=this.steps)||void 0===e?void 0:e[this.currentStepID])&&void 0!==t?t:null:null!==this.currentStepID&&(n={stepID:this.currentStepID}),n}},methods:{setupJSPlumb:function(){var t=this;jsPlumb.ready((function(){t.jsPlumbInstance=jsPlumb.getInstance(),t.jsPlumbInstance.Defaults.Container="workflow",t.jsPlumbInstance.Defaults.ConnectionOverlays=[["PlainArrow",{location:.9,width:16,length:14}]],t.jsPlumbInstance.Defaults.PaintStyle={stroke:"lime",lineWidth:1},t.jsPlumbInstance.Defaults.Connector=["StateMachine",{curviness:10}],t.jsPlumbInstance.Defaults.Anchor="Continuous",t.jsPlumbInstance.Defaults.Endpoint="Blank"}))},stepStyle:function(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:0,e=this.steps[t];return{left:Math.max(parseInt(e.posX),0)+"px",top:Math.max(parseInt(e.posY),80)+"px",backgroundColor:e.stepBgColor,fontWeight:"normal"}},updateChosen:function(){var t=this,e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"",n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"",o=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"Select an Option",i=arguments.length>3?arguments[3]:void 0;""!==e&&(0,a.dY)((function(){$("#"+e).chosen("destroy"),$("#"+e).chosen({disable_search_threshold:5,allow_single_deselect:!0}).change((function(t){return i(t)})),t.updateChosenAttributes(e,n,o)}))},closeStep:function(t){var e=document.querySelector(".workflowStepInfo");t.target.closest(".workflowStepInfo")!==e&&(this.currentStepID=null)},newWorkflow:function(){console.log("newWorkflow")},createStep:function(){console.log("createStep")},renameWorkflow:function(){},duplicateWorkflow:function(){},listActions:function(){},listEvents:function(){},deleteWorkflow:function(){},loadWorkflowList:function(){var t=this;fetch("".concat(this.APIroot,"workflow")).then((function(t){return t.json()})).then((function(e){var n,o,i,s,l=void 0!==(null===(n=t.$route.query)||void 0===n?void 0:n.dev),a={};e.forEach((function(t){(t.workflowID>0||l)&&(a[t.workflowID]=t)})),t.workflows=a,t.firstWorkflowDescription=(null==e||null===(o=e[0])||void 0===o?void 0:o.description)||"",t.firstWorkflowID=(null==e||null===(i=e[0])||void 0===i?void 0:i.workflowID)||0,t.loading=!1;var r=null===(s=t.$route.query)||void 0===s?void 0:s.workflowID;void 0!==r&&void 0!==t.workflows[r]?t.currentWorkflowID=r:t.currentWorkflowID=t.firstWorkflowID})).catch((function(t){return console.log(t)}))},loadWorkflow:function(){var t=this;this.endPoints=[],this.jsPlumbInstance.reset(),this.jsPlumbInstance.setSuspendDrawing(!0),Promise.all([fetch("".concat(this.APIroot,"workflow/").concat(this.currentWorkflowID)),fetch("".concat(this.APIroot,"workflow/").concat(this.currentWorkflowID,"/route"))]).then((function(e){Promise.all([e[0].json(),e[1].json()]).then((function(e){t.steps=e[0],t.routes=e[1],console.log(t.steps,t.routes),t.jsPlumbConfig(),t.drawRoutes()}))})).catch((function(t){return console.log(t)}))},jsPlumbConfig:function(){var t=this;(0,a.dY)((function(){var e=function(e){null==t.endPoints[e]&&(t.endPoints[e]=t.jsPlumbInstance.addEndpoint("step_"+e,{anchor:"Continuous"},t.endpointOptions),t.jsPlumbInstance.draggable("step_"+e,{allowNegative:!1,stop:function(){var n=document.getElementById("step_".concat(e));if(null!==n){var o=n.offsetLeft,i=n.offsetTop;t.updatePosition(e,o,i)}}}))};for(var n in t.steps)e(n);null==t.endPoints[-1]&&(t.endPoints[-1]=t.jsPlumbInstance.addEndpoint("step_-1",{anchor:"Continuous"},t.endpointOptions),t.jsPlumbInstance.draggable("step_-1",{allowNegative:!1})),null==t.endPoints[0]&&(t.endPoints[0]=t.jsPlumbInstance.addEndpoint("step_0",{anchor:"Continuous"},t.endpointOptions),t.jsPlumbInstance.draggable("step_0",{allowNegative:!1}))}))},drawRoutes:function(){var t=this;(0,a.dY)((function(){var e,n,o=.5,i={};if(t.routes.forEach((function(e){switch(o=.5,e.actionType.toLowerCase()){case"sendback":o=.3;break;case"approve":case"concur":o=.5;break;case"defer":o=.25;break;case"disapprove":o=.75;break;default:var n=String(e.stepID),s=String(e.nextStepID);if(n!==s){var l=n+"_"+s;(null==i?void 0:i[l])>=0?(i[l]+=1,(o=Math.min(+(.05+.15*i[l]).toFixed(2),.65))>=.5&&(o+=.15)):i[l]=0}}if(0===e.nextStepID&&"sendback"==e.actionType)t.jsPlumbInstance.connect({source:"step_"+e.stepID,target:"step_-1",paintStyle:{stroke:"red"},overlays:[["Label",{id:"stepLabel_".concat(e.stepID,"_0_").concat(e.actionType),cssClass:"workflowAction action-".concat(e.stepID,"-sendback--1"),label:e.actionText,location:o,parameters:{stepID:e.stepID,nextStepID:0,action:e.actionType},events:{click:function(e,n){var o=e.getParameters();t.showActionInfo(o,n)}}}]]});else{var a={source:"step_"+e.stepID,target:"step_"+e.nextStepID,connector:["StateMachine",{curviness:10}],anchor:"Continuous",overlays:[["Label",{id:"stepLabel_"+e.stepID+"_"+e.nextStepID+"_"+e.actionType,cssClass:"workflowAction action-".concat(e.stepID,"-").concat(e.actionType,"-").concat(e.nextStepID),label:e.actionText,location:o,parameters:{stepID:e.stepID,nextStepID:e.nextStepID,action:e.actionType},events:{click:function(e,n){var o=e.getParameters();t.showActionInfo(o,n)}}}]]};"sendback"==e.actionType&&(a.paintStyle={stroke:"red"}),t.jsPlumbInstance.connect(a)}})),void 0!==(null===(e=t.workflows[t.currentWorkflowID])||void 0===e?void 0:e.initialStepID)&&0!==(null===(n=t.workflows[t.currentWorkflowID])||void 0===n?void 0:n.initialStepID)){var s=t.workflows[t.currentWorkflowID].initialStepID;t.jsPlumbInstance.connect({source:t.endPoints[-1],target:t.endPoints[s],connector:["StateMachine",{curviness:10}],anchor:"Continuous",overlays:[["Label",{id:"stepLabel_0_"+s+"_submit",cssClass:"workflowAction action--1-submit-".concat(s),label:"Submit",location:o,parameters:{stepID:-1,nextStepID:s,action:"submit"},events:{click:function(e,n){var o=e.getParameters();t.showActionInfo(o,n)}}}]]})}t.jsPlumbInstance.bind("connection",(function(t){return createAction(t)})),t.jsPlumbInstance.setSuspendDrawing(!1,!0),Array.from(document.querySelectorAll(".workflowEndpoint")).forEach((function(e){return e.style.backgroundImage="url(".concat(t.libsPath,"dynicons/svg/network-wired.svg)")}))}))},updatePosition:function(t,e,n){var o=new FormData;o.append("CSRFToken",this.CSRFToken),o.append("stepID",t),o.append("x",e),o.append("y",n),fetch("".concat(this.APIroot,"workflow/").concat(this.currentWorkflowID,"/editorPosition"),{method:"POST",body:o}).catch((function(t){return console.log(t)}))},showStepInfo:function(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:-1;if(this.currentStepID===t)this.currentStepID=null;else if(this.currentStepID=t,0!==t){var e=document.getElementById("workflow_steps");null!==e&&(e.value=t,e.dispatchEvent(new Event("change")),$("#workflow_steps").trigger("chosen:updated"))}else console.log("end")},showActionInfo:function(t,e){console.log("show action info",t,e)},createAction:function(t){console.log(t)},emailNotificationIcon:function(){var t,e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:0,n="",o=null===(t=this.steps)||void 0===t?void 0:t[e];if("string"==typeof(null==o?void 0:o.stepData)&&this.isJSON(o.stepData)){var i,s=JSON.parse(o.stepData);if("true"===(null===(i=s.AutomatedEmailReminders)||void 0===i||null===(i=i.AutomateEmailGroup)||void 0===i?void 0:i.toLowerCase())){var l=s.AutomatedEmailReminders.DaysSelected,a=l>1?"Days":"Day";n='<img src="'.concat(this.libsPath,'dynicons/svg/appointment.svg"\n                        style="height:18px;width:18px;margin-bottom:-3px;"\n                        alt="Email reminders will be sent after ').concat(l," ").concat(a,' of inactivity"\n                        title="Email reminders will be sent after ').concat(l," ").concat(a,' of inactivity">')}}return n}},watch:{currentWorkflowID:function(t,e){void 0!==this.workflows[t]&&this.loadWorkflow(t)},workflows:function(){var t=this;this.updateChosen("workflows","workflows_label","Select a Workflow",(function(e){t.currentWorkflowID=+e.target.value}))},steps:function(){var t=this;this.updateChosen("workflow_steps","steps_label","Select a Step",(function(e){t.currentStepID=+e.target.value}))}},template:'<div v-if="loading" class="page_loading">\n            Loading...\n            <img src="../images/largespinner.gif" alt="" />\n        </div>\n        <div v-else>\n            \x3c!-- TODO: this should be assoc with nav --\x3e\n            <div v-if="siteSettings?.siteType===\'national_subordinate\'" id="subordinate_site_warning" style="padding: 0.5rem; margin: 0.5rem 0;" >\n                <h3 style="margin: 0 0 0.5rem 0; color: #a00;">This is a Nationally Standardized Subordinate Site</h3>\n                <span><b>Do not make modifications!</b> &nbsp;Synchronization problems will occur. &nbsp;Please contact your process POC if modifications need to be made.</span>\n            </div>\n            <section id="workflow_editor" v-if="hasWorkflows">\n                <WorkflowMenu />\n\n                <div id="workflow" :style="workflowHeight">\n                    <WorkflowStepInfo />\n                    <button type="button" class="workflowStep" id="step_-1" :style="requestorStepStyle"\n                        aria-label="workflow step: Requestor"\n                        aria-controls="stepInfo_-1"\n                        :aria-expanded="currentStepID === -1"\n                        @click="showStepInfo(-1)">\n                        Requestor\n                    </button>\n\n                    <template v-for="s in steps" :key="\'wf_step_\' + s.stepID">\n                        <button type="button" class="workflowStep" :id="\'step_\' + s.stepID" :style="stepStyle(s.stepID)"\n                            :aria-label="\'workflow step: \' + s.stepTitle"\n                            :aria-controls="\'stepInfo_\' + s.stepID"\n                            :aria-expanded="currentStepID === s.stepID"\n                            @click="showStepInfo(s.stepID)">\n                                {{ s.stepTitle }}&nbsp;<span v-if="typeof s?.stepData === \'string\'" v-html="emailNotificationIcon(s.stepID)"></span>\n                        </button>\n                    </template>\n\n                    <button type="button" class="workflowStep" id="step_0" :style="lastStepStyle"\n                        aria-label="Workflow End"\n                        aria-controls="stepInfo_0"\n                        :aria-expanded="currentStepID === 0"\n                        @click="showStepInfo(0)">\n                            End\n                    </button>\n                </div>\n            </section>\n\n            <button type="button" @click="openWorkflowActionDialog(mock_action, mock_isNew)">MOCK Action</button>\n            <label for="mocktest"><input id="mocktest" type="checkbox" v-model="mock_isNew"> is new action</label>\n        </div>\n\n        \x3c!-- DIALOGS --\x3e\n        <leaf-form-dialog v-if="showFormDialog">\n            <template #dialog-content-slot>\n                <component :is="dialogFormContent"></component>\n            </template>\n        </leaf-form-dialog>'}},392:(t,e,n)=>{n.d(e,{A:()=>o});const o={data:function(){return{scrollY:window.scrollY,initialTop:15,modalElementID:"leaf_dialog_content",modalBackgroundID:"leaf-vue-dialog-background",elBody:null,elModal:null,elBackground:null,elClose:null,lastFocus:null}},inject:["dialogTitle","closeFormDialog","formSaveFunction","dialogButtonText","lastModalTab"],created:function(){this.lastFocus=document.activeElement||null},mounted:function(){this.elBody=document.querySelector("body"),this.elModal=document.getElementById(this.modalElementID),this.elModal.style.left=window.scrollX+window.innerWidth/2-this.elModal.clientWidth/2+"px",this.elBackground=document.getElementById(this.modalBackgroundID),this.elClose=document.getElementById("leaf-vue-dialog-close"),this.makeDraggable(this.elModal);var t=document.activeElement;null===(null!==t?t.closest(".leaf-vue-dialog-content"):null)&&this.elClose.focus()},beforeUnmount:function(){var t,e=(null===(t=this.lastFocus)||void 0===t?void 0:t.id)||null;if(null!==e){var n=document.getElementById(e);null!==n&&n.focus()}else null!==this.lastFocus&&this.lastFocus.focus()},methods:{firstTab:function(t){if(!0===(null==t?void 0:t.shiftKey)){var e=document.querySelector("#ifthen_deletion_dialog button.btn-general"),n=document.getElementById("next"),o=document.getElementById("button_cancelchange"),i=e||n||o;null!==i&&"function"==typeof i.focus&&(i.focus(),t.preventDefault())}},makeDraggable:function(){var t=this,e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},n=0,o=0,i=0,s=0,l=function(t){(t=t||window.event).preventDefault(),n=i-t.clientX,o=s-t.clientY,i=t.clientX,s=t.clientY,e.style.top=e.offsetTop-o+"px",e.style.left=e.offsetLeft-n+"px",r()},a=function(){document.onmouseup=null,document.onmousemove=null},r=function(){e.offsetTop<window.scrollY&&(e.style.top=window.scrollY+"px"),e.offsetLeft<window.scrollX&&(e.style.left=window.scrollX+"px"),e.offsetLeft+e.clientWidth+18>window.innerWidth+window.scrollX&&(e.style.left=window.innerWidth+window.scrollX-e.clientWidth-18+"px"),t.elBackground.style.minWidth=t.elBody.clientWidth+"px",t.elBackground.style.minHeight=t.elModal.offsetTop+t.elBody.clientHeight+"px"};document.getElementById(this.modalElementID+"_drag_handle")&&(document.getElementById(this.modalElementID+"_drag_handle").onmousedown=function(t){(t=t||window.event).preventDefault(),i=t.clientX,s=t.clientY,document.onmouseup=a,document.onmousemove=l})}},template:'<Teleport to="body">\n        <div id="leaf-vue-dialog-background" aria-disabled="true" aria-hidden="true"></div>\n        <div :id="modalElementID" class="leaf-vue-dialog"\n            role="dialog" aria-modal="true" :aria-labelledby="modalElementID + \'_drag_handle\'" aria-describedby="record"\n            :style="{top: scrollY + initialTop + \'px\'}">\n            <div v-html="dialogTitle" :id="modalElementID + \'_drag_handle\'" class="leaf-vue-dialog-title"></div>\n            <button type="button" @click="closeFormDialog" @keydown.tab="firstTab" id="leaf-vue-dialog-close" aria-label="Close">&#10005;</button>\n            <div id="record" style="max-height:100vh;overflow-y:auto">\n                <div id="xhr" class="leaf-vue-dialog-content">\n                    <slot name="dialog-content-slot"></slot>\n                </div>\n                <div id="leaf-vue-dialog-cancel-save">\n                    <button type="button" style="width: 90px;"\n                        id="button_save" class="btn-confirm" :title="dialogButtonText.confirm"\n                        @click="formSaveFunction">\n                        {{dialogButtonText.confirm}}\n                    </button>\n                    <button type="button" style="width: 90px;"\n                        id="button_cancelchange" class="btn-general" :title="dialogButtonText.cancel"\n                        @click="closeFormDialog" @keydown.tab="lastModalTab">\n                        {{dialogButtonText.cancel}}\n                    </button>\n                </div>\n            </div>\n        </div>\n    </Teleport>'}},424:(t,e,n)=>{n.d(e,{A:()=>o});const o={name:"history-dialog",data:function(){return{requiredDataProperties:["historyType","historyID"],divSaveCancelID:"leaf-vue-dialog-cancel-save",page:1,historyType:this.dialogData.historyType,historyID:this.dialogData.historyID,ajaxRes:null}},inject:["dialogData","checkRequiredData","lastModalTab"],created:function(){this.checkRequiredData(this.requiredDataProperties)},mounted:function(){document.getElementById(this.divSaveCancelID).style.display="none",this.getPage()},computed:{showNext:function(){return null!==this.ajaxRes&&-1===this.ajaxRes.indexOf("No history to show")},showPrev:function(){return this.page>1}},methods:{getNext:function(){this.page++,this.getPage()},getPrev:function(){this.page--,this.getPage()},getPage:function(){var t=this;try{var e="ajaxIndex.php?a=gethistory&type=".concat(this.historyType,"&gethistoryslice=1&page=").concat(this.page,"&id=").concat(this.historyID);fetch(e).then((function(e){e.text().then((function(e){return t.ajaxRes=e}))}))}catch(t){console.log("error getting history",t)}}},template:'<div>\n        <div v-if="ajaxRes === null" class="page_loading">\n            Loading...\n            <img src="../images/largespinner.gif" alt="" />\n        </div>\n        <div v-else id="history-slice" v-html="ajaxRes" style="min-height: 100px; min-width: 300px;"></div>\n        <div id="history-page-buttons" style="display: flex; justify-content: space-between;">\n            <button v-if="showPrev" id="prev" type="button"\n                class="btn-general"\n                style="width: 125px;"\n                @click="getPrev" title="get previous page">\n                Previous page\n            </button>\n            <button v-if="showNext" id="next" type="button"\n                class="btn-general"\n                style="width: 125px; margin-left: auto;"\n                @click="getNext" @keydown.tab="lastModalTab" title="get next page">\n                Next page\n            </button>\n        </div>\n    </div>'}}}]);