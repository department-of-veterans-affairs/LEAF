{"info":{"_postman_id":"27d352f0-7dcf-4ce1-8748-e3c0a61e8ef5","name":"LEAF API Localhost","schema":"https://schema.getpostman.com/json/collection/v2.1.0/collection.json"},"item":[{"name":"Dynamic Variables Test","event":[{"listen":"test","script":{"id":"bff05c7e-9a3d-4882-bb0f-9990f509709c","exec":["pm.test(\"Form-Trial&Error.  Status = 200\", function () {\r","    pm.response.to.have.status(200);\r","});\r","\r","var time = pm.response.responseTime;\r","\r","pm.test('Response time: ' + time + ' ms', () => pm.response.to.have.status(200));\r","\r","// FOR POST REQUESTS\r","pm.test(\"Form categoryID created\", function () {\r","    var jsonData = pm.response.json();\r","    //console.log.jsonData();\r","\r","                                                        //why is categoryID (Variable) inside quotes?\r","    pm.expect(jsonData.categoryID).to.eql(pm.collectionVariables.get(\"categoryID\").replaceAll(\" \", \"-\"));   \r","});\r","\r","\r","pm.test(\"Contains expected value\", function () {\r","    var jsonData = pm.response.json();\r","    //console.log.jsonData();\r","    pm.expect(jsonData.categoryID).to.eql(\"form_11e07\");\r","});\r","\r","//    \"categoryID\": \"form_11e07\",\r","//    \"categoryName\": \"AUT (Copy)\"\r","/*\r","pm.test(\"Response time is less than limit\", function() {\r","var limit = 10;\r","pm.expect(pm.response.responseTime, \"Response time was longer than \" + limit + \" ms.\").to.be.below(limit);\r","console.log(\"Response Time: \" + pm.response.responseTime + \" ms\" + \" / Response Date: \" + pm.response.headers.get(\"Date\"));\r","});\r","\r","*/\r",""],"type":"text/javascript"}},{"listen":"prerequest","script":{"id":"54f94fa0-477e-473c-b0de-5c3ed5184d6d","exec":["const random = Math.random().toString(36).substring(2);\r","const categoryID = \"Text to post\" + random;\r","pm.collectionVariables.set(\"categoryID\", categoryID);\r",""],"type":"text/javascript"}}],"id":"986a8997-7cf1-4d7a-9d7c-2bd00c1c3825","protocolProfileBehavior":{"disableBodyPruning":true,"disabledSystemHeaders":{}},"request":{"auth":{"type":"noauth"},"method":"GET","header":[{"key":"CSRFToken","value":"{{CSRFToken}}","type":"text","disabled":true}],"body":{"mode":"raw","raw":"{  \r\n    \"categoryID\": \"{{CategoryID}}\",\r\n    \"categoryName\": \"AUT (Copy)\"   \r\n}\r\n\r\nFOR POST REQUESTS  as these values will be posted","options":{"raw":{"language":"json"}}},"url":{"raw":"https://localhost/LEAF_Request_Portal/api/form/categories","protocol":"https","host":["localhost"],"path":["LEAF_Request_Portal","api","form","categories"]}},"response":[]},{"name":"Local - Base URL","event":[{"listen":"test","script":{"id":"d2470e0d-a4b9-463d-bbf0-4f9394d3988e","exec":["pm.test(\"Base URL.  Status = 200\", function () {\r","    pm.response.to.have.status(200);\r","});\r","\r","var time = pm.response.responseTime\r","\r","pm.test('Response time: ' + time + ' ms', () => pm.response.to.have.status(200))"],"type":"text/javascript"}}],"id":"1c550486-e04f-4b4e-97bb-9cc766013a76","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"auth":{"type":"noauth"},"method":"GET","header":[],"url":{"raw":"https://localhost/LEAF_Request_Portal/index.php?a=printview&recordID=498","protocol":"https","host":["localhost"],"path":["LEAF_Request_Portal","index.php"],"query":[{"key":"a","value":"printview"},{"key":"recordID","value":"498"}]}},"response":[]},{"name":"Local - Form Trial & Error (Currently Categories)","event":[{"listen":"test","script":{"id":"9ec3efbf-24ef-416a-9a5a-593f62d6cce7","exec":["pm.test(\"Contains expected value\", function () {\r","    const response = pm.response.json();\r","    const catIDs = response.map(catID => catID.categoryID);         //catIDs is the array containing IDs\r","    console.log(catIDs);\r","    pm.variables.set('catIDs', catIDs); //2nd catIDs is the var defined on line 3 - Only works in collection runner\r","    \r","\r","//6:05 in vid\r","    //pm.expect(jsonData.categoryID).to.eql(\"form_8bfe8\");\r","//    pm.expect(catIDs.categoryID).to.eql(\"form_8bfe8\");\r","\r"," //var jsonData = pm.response.json();\r"," //   console.log(jsonData.response);   \r"," //   pm.expect(jsonData.categoryID).to.eql(\"form_11e07\");\r","});\r","\r","/* \r","His POST data to insert\r","\"toolID\": 4643\r","\r","This ID then appears in a GET request\r","\r","const toolIDs = response.map(tool => tool.id);\r","console.log(toolIDs);\r","\r","Valid CategoryID(s)\r","0: \"form_854b7\"\r","1: \"form_1542d\"\r","2: \"form_8bfe8\"\r","3: \"form_8aded\"\r","4: \"form_e73f1\"\r","5: \"form_945a0\"\r","6: \"form_24f22\"\r","7: \"form_55af0\"\r","8: \"form_af5a3\"\r","9: \"form_354e4\"\r","10: \"form_66e4e\"\r","\r","\r","*/\r","\r","\r","\r","\r","\r","\r","/* \r","pm.test(\"Form-Categories.  Status = 200\", function () {\r","    pm.response.to.have.status(200);\r","});\r","\r","var time = pm.response.responseTime;\r","\r","pm.test('Response time: ' + time + ' ms', () => pm.response.to.have.status(200));\r","\r","\r","pm.test(\"Contains expected value\", function () {\r","    var jsonData = pm.response.json();\r","    console.log(jsonData.response);   \r","    pm.expect(jsonData.categoryID).to.eql(\"form_11e07\");  //iterate through\r","});\r","*/\r","\r","\r","\r","\r","\r","/*\r","// saving the API Response as a variable\r","let response = pm.response.json();\r","\r","// looping through each camera object\r","response.data.ActiveCamera.forEach(function(cam) {\r","    // checking if the camera has a property named \"RectilinearIR\"\r","    if(cam.hasOwnProperty(\"RectilinearIR\")) {\r","        // test if the ImageCenterX value in the object is equal to 0.5\r","        pm.test(\"Test diameter for RectilinearIR\", function () {\r","            let intrinsicCalibrationParams = cam.RectilinearIR.IntrinsicCalibration;\r","            pm.expect(intrinsicCalibrationParams.ImageCenterX).to.eql(0.5);\r","        });\r","    } \r","    // checking if the camera has a property named \"Fisheye\"\r","    if (cam.hasOwnProperty(\"Fisheye\")) {\r","        // test if the ImageCenterX value in the object is equal to 0.5109375\r","            pm.test(\"Test diameter for Fisheye\", function () {\r","            let intrinsicCalibrationParams = cam.Fisheye.IntrinsicCalibration;\r","            pm.expect(intrinsicCalibrationParams.ImageCenterX).to.eql(0.5109375);\r","        });\r","    }\r","});\r","*/\r","\r","\r","\r","\r","//    \"categoryID\": \"form_11e07\",\r","//    \"categoryName\": \"AUT (Copy)\"\r","/*\r","pm.test(\"Response time is less than limit\", function() {\r","var limit = 10;\r","pm.expect(pm.response.responseTime, \"Response time was longer than \" + limit + \" ms.\").to.be.below(limit);\r","console.log(\"Response Time: \" + pm.response.responseTime + \" ms\" + \" / Response Date: \" + pm.response.headers.get(\"Date\"));\r","});\r","\r","*/"],"type":"text/javascript"}},{"listen":"prerequest","script":{"id":"16791558-61f5-4372-966a-20efc18141e8","exec":["//For POST request\r","const catIDs = pm.variables.get('catIDs');\r","pm.variables.set('currentCatID', catIDs.shift());    //get first element/Id in array and return it. Can put in _\r","                                                     //array or modify original array (catIDs)\r","        //Then set as a Global ID in Body\r","\r","\r","/* \r","const random = Math.random().toString(36).substring(2);\r","const formCategories = \"formCategories \" + random;\r","pm.collectionVariables.set(\"formCategories\", formCategories);\r","*/"],"type":"text/javascript"}}],"id":"9c9d3b92-11d7-4671-9e25-037ac3914e8c","protocolProfileBehavior":{"disableBodyPruning":true,"disabledSystemHeaders":{}},"request":{"auth":{"type":"noauth"},"method":"GET","header":[{"key":"CSRFToken","value":"{{CSRFToken}}","type":"text","disabled":true}],"body":{"mode":"raw","raw":"{\r\n    \"categoryID\": {{currentCatID}},\r\n    \"categoryName\": \"PM API Test\"\r\n}\r\n\r\n","options":{"raw":{"language":"json"}}},"url":{"raw":"https://localhost/LEAF_Request_Portal/api/form/categories","protocol":"https","host":["localhost"],"path":["LEAF_Request_Portal","api","form","categories"]}},"response":[]},{"name":"Local - Forms","event":[{"listen":"test","script":{"id":"f211c6f6-517d-47d4-9606-9a5eb5cdbb2e","exec":["pm.test(\"Form-getAPI-URL.  Status = 200\", function () {\r","    pm.response.to.have.status(200);\r","});\r","\r","var time = pm.response.responseTime\r","\r","pm.test('Response time: ' + time + ' ms', () => pm.response.to.have.status(200))"],"type":"text/javascript"}}],"id":"06845091-e9f9-4f46-b93f-866ba816d40a","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"auth":{"type":"noauth"},"method":"GET","header":[],"url":{"raw":"https://localhost/LEAF_Request_Portal/api/form","protocol":"https","host":["localhost"],"path":["LEAF_Request_Portal","api","form"]}},"response":[]},{"name":"Local - Form Categories","event":[{"listen":"test","script":{"id":"c57ea32b-2a69-4e4a-a2c3-644fa0144d1d","exec":[" \r","pm.test(\"Form-Categories.  Status = 200\", function () {\r","    pm.response.to.have.status(200);\r","});\r","\r","var time = pm.response.responseTime;\r","pm.test('Response time: ' + time + ' ms', () => pm.response.to.have.status(200));\r","\r","\r","\r","pm.test(\"Contains expected value\", function () {\r","    const response = pm.response.json();\r","    const catIDs = response.map(catID => catID.categoryID);         //catIDs is the array containing IDs\r","    //console.log(catIDs);\r","    pm.variables.set('catIDs', catIDs); //Creates a variable or updates an existing one.\r","                                        //2nd catIDs is the var defined on line 3 - Only works in collection runner\r","    console.log(catIDs);\r","\r","    let currentCatID = catIDs.shift();\r","    console.log(currentCatID);\r","    pm.expect(currentCatID).to.eql(\"form_12334\");  //    //form_854b7\r","\r","\r","\r","});\r","\r",""],"type":"text/javascript"}},{"listen":"prerequest","script":{"id":"94ef5633-60b5-466e-a324-38ce91df8460","exec":["/* const random = Math.random().toString(36).substring(2);\r","const formCategories = \"formCategories \" + random;\r","pm.collectionVariables.set(\"formCategories\", formCategories);\r","*/"],"type":"text/javascript"}}],"id":"4a0c8592-8720-4645-998d-aba705284518","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"auth":{"type":"noauth"},"method":"GET","header":[],"body":{"mode":"raw","raw":"{  \r\n    \"categoryID\": \"form_11e07\",\r\n    \"categoryName\": \"AUT (Copy)\"   \r\n}\r\n\r\nFOR POST REQUESTS","options":{"raw":{"language":"json"}}},"url":{"raw":"https://localhost/LEAF_Request_Portal/api/form/categories","protocol":"https","host":["localhost"],"path":["LEAF_Request_Portal","api","form","categories"]}},"response":[]},{"name":"Local - FIX Form Indicators","event":[{"listen":"test","script":{"id":"c57ea32b-2a69-4e4a-a2c3-644fa0144d1d","exec":["pm.test(\"Form-Categories.  Status = 200\", function () {\r","    pm.response.to.have.status(200);\r","});\r","\r","var time = pm.response.responseTime;\r","pm.test('Response time: ' + time + ' ms', () => pm.response.to.have.status(200));\r","\r","pm.test(\"JSON Contains expected value\", function () {\r","    const response = pm.response.json();\r","    const catIDs = response.map(catID => catID.categoryID);         //catIDs is the array containing IDs\r","    console.log(catIDs);\r","    pm.variables.set('catIDs', catIDs); //2nd catIDs is the var defined on line 3 - Only works in collection runner\r","});\r","\r","/* \r","pm.test(\"Contains expected value\", function () {\r","    var jsonData = pm.response.json();\r","    console.log(jsonData.response);   \r","    pm.expect(jsonData.categoryID).to.eql(\"form_11e07\");  //iterate through\r","});\r","*/\r","\r","\r","\r","//    \"categoryID\": \"form_11e07\",\r","//    \"categoryName\": \"AUT (Copy)\"\r","/*\r","pm.test(\"Response time is less than limit\", function() {\r","var limit = 10;\r","pm.expect(pm.response.responseTime, \"Response time was longer than \" + limit + \" ms.\").to.be.below(limit);\r","console.log(\"Response Time: \" + pm.response.responseTime + \" ms\" + \" / Response Date: \" + pm.response.headers.get(\"Date\"));\r","});\r","\r","*/"],"type":"text/javascript"}},{"listen":"prerequest","script":{"id":"94ef5633-60b5-466e-a324-38ce91df8460","exec":["/* const random = Math.random().toString(36).substring(2);\r","const formCategories = \"formCategories \" + random;\r","pm.collectionVariables.set(\"formCategories\", formCategories);\r","*/"],"type":"text/javascript"}}],"id":"be905dca-86c3-4d63-8cff-fa8009ecd774","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"auth":{"type":"noauth"},"method":"GET","header":[],"body":{"mode":"raw","raw":"{  \r\n    \"categoryID\": \"form_11e07\",\r\n    \"categoryName\": \"AUT (Copy)\"   \r\n}\r\n\r\nFOR POST REQUESTS","options":{"raw":{"language":"json"}}},"url":{"raw":"https://localhost/LEAF_Request_Portal/api/form/categories","protocol":"https","host":["localhost"],"path":["LEAF_Request_Portal","api","form","categories"]}},"response":[]},{"name":"Local - FIX Create Form","event":[{"listen":"test","script":{"id":"f211c6f6-517d-47d4-9606-9a5eb5cdbb2e","exec":["pm.test(\"Form-getAPI-URL.  Status = 200\", function () {\r","    pm.response.to.have.status(200);\r","});\r","\r","var time = pm.response.responseTime\r","\r","pm.test('Response time: ' + time + ' ms', () => pm.response.to.have.status(200));\r",""],"type":"text/javascript"}}],"id":"39ef254e-1888-4b5d-9874-7addbb704335","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"auth":{"type":"noauth"},"method":"POST","header":[],"body":{"mode":"raw","raw":"{  \r\n    \"formID\": \"form_12307\",\r\n    \"requestData\": \"Test Form\"   \r\n}"},"url":{"raw":"https://localhost/LEAF_Request_Portal/api/new?formID=_form_12334&requestData=Test Request","protocol":"https","host":["localhost"],"path":["LEAF_Request_Portal","api","new"],"query":[{"key":"formID","value":"_form_12334"},{"key":"requestData","value":"Test Request"}]}},"response":[]},{"name":"Local - TMP","event":[{"listen":"test","script":{"id":"f211c6f6-517d-47d4-9606-9a5eb5cdbb2e","exec":["pm.test(\"Form-getAPI-URL.  Status = 200\", function () {\r","    pm.response.to.have.status(200);\r","});\r","\r","var time = pm.response.responseTime\r","\r","pm.test('Response time: ' + time + ' ms', () => pm.response.to.have.status(200))"],"type":"text/javascript"}}],"id":"a90ee8ef-6f19-412b-ac92-65dd7a425dac","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"auth":{"type":"noauth"},"method":"GET","header":[],"url":{"raw":"https://localhost/LEAF_Request_Portal/api/","protocol":"https","host":["localhost"],"path":["LEAF_Request_Portal","api",""]}},"response":[]},{"name":"Local - TMP","event":[{"listen":"test","script":{"id":"f211c6f6-517d-47d4-9606-9a5eb5cdbb2e","exec":["pm.test(\"Form-getAPI-URL.  Status = 200\", function () {\r","    pm.response.to.have.status(200);\r","});\r","\r","var time = pm.response.responseTime\r","\r","pm.test('Response time: ' + time + ' ms', () => pm.response.to.have.status(200))"],"type":"text/javascript"}}],"id":"aee92a02-ae2f-4035-94f1-37c714f017cc","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"auth":{"type":"noauth"},"method":"GET","header":[],"url":{"raw":"https://localhost/LEAF_Request_Portal/api/","protocol":"https","host":["localhost"],"path":["LEAF_Request_Portal","api",""]}},"response":[]},{"name":"Local - Workflow","event":[{"listen":"test","script":{"id":"bf104723-118e-455b-a6db-c8d31ccc0507","exec":["pm.test(\"Workflow.  Status = 200\", function () {\r","    pm.response.to.have.status(200);\r","});\r","\r","var time = pm.response.responseTime\r","\r","pm.test('Response time: ' + time + ' ms', () => pm.response.to.have.status(200))\r","\r","//workflowID: \"70\"\r","//workflowID: \"63\"\r","//workflowID: \"55\"\r","//workflowID: \"46\"   // This value\r","\r","\r",""],"type":"text/javascript"}}],"id":"5dd418f1-2e06-4a6e-88a9-a73a88f28ae1","protocolProfileBehavior":{"disableBodyPruning":true,"tlsPreferServerCiphers":false,"followAuthorizationHeader":false},"request":{"auth":{"type":"noauth"},"method":"GET","header":[],"url":{"raw":"https://localhost/LEAF_Request_Portal/api/workflow","protocol":"https","host":["localhost"],"path":["LEAF_Request_Portal","api","workflow"]}},"response":[]},{"name":"Local Portal - Workflow userActions","event":[{"listen":"test","script":{"id":"2a0db6c0-aeb1-40a7-8227-d00e31d30b5b","exec":["pm.test(\"Workflow userActions.  Status = 200\", function () {\r","    pm.response.to.have.status(200);\r","});\r","\r","var time = pm.response.responseTime\r","\r","pm.test('Response time: ' + time + ' ms', () => pm.response.to.have.status(200))\r","\r","// get a list of all \"AcceptJob\"\r","\r","\r","\r",""],"type":"text/javascript"}},{"listen":"prerequest","script":{"id":"57ff22ff-9513-424f-9a50-b1693c6d1f57","exec":["var moment = require('moment');\r","pm.globals.set('CurrentDatetime', moment().format());\r","\r",""],"type":"text/javascript"}}],"id":"43e5e695-582a-42af-973b-732bbeb4f970","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"auth":{"type":"noauth"},"method":"GET","header":[],"url":{"raw":"https://localhost/LEAF_Request_Portal/api/workflow/userActions","protocol":"https","host":["localhost"],"path":["LEAF_Request_Portal","api","workflow","userActions"]}},"response":[]},{"name":"Local - Form Get Specific Form","event":[{"listen":"test","script":{"id":"7b2beb1a-4de9-477e-8265-51764d22069c","exec":["pm.test(\"Form-getSpecific Form.  Status = 200\", function () {\r","    pm.response.to.have.status(200);\r","});\r","\r","var time = pm.response.responseTime\r","\r","pm.test('Response time: ' + time + ' ms', () => pm.response.to.have.status(200))"],"type":"text/javascript"}}],"id":"cc1d6584-8bf6-40cb-9914-e41675281170","protocolProfileBehavior":{"disableBodyPruning":true,"disabledSystemHeaders":{}},"request":{"auth":{"type":"noauth"},"method":"GET","header":[{"key":"CSRFToken","value":"{{CSRFToken}}","type":"text","disabled":true}],"url":{"raw":"https://localhost/LEAF_Request_Portal/api/form/_form_00882","protocol":"https","host":["localhost"],"path":["LEAF_Request_Portal","api","form","_form_00882"]}},"response":[]},{"name":"Local - Form Get Specific Form - Flat","event":[{"listen":"test","script":{"id":"7b2beb1a-4de9-477e-8265-51764d22069c","exec":["pm.test(\"Form-getSpecific Form.  Status = 200\", function () {\r","    pm.response.to.have.status(200);\r","});\r","\r","var time = pm.response.responseTime\r","\r","pm.test('Response time: ' + time + ' ms', () => pm.response.to.have.status(200))"],"type":"text/javascript"}}],"id":"06db52cb-3962-473f-b912-6a69c5c949e1","protocolProfileBehavior":{"disableBodyPruning":true,"disabledSystemHeaders":{}},"request":{"auth":{"type":"noauth"},"method":"GET","header":[{"key":"CSRFToken","value":"{{CSRFToken}}","type":"text","disabled":true}],"url":{"raw":"https://localhost/LEAF_Request_Portal/api/form/_form_00882/flat","protocol":"https","host":["localhost"],"path":["LEAF_Request_Portal","api","form","_form_00882","flat"]}},"response":[]},{"name":"Local - Form Get Specific Form - Export","event":[{"listen":"test","script":{"id":"7b2beb1a-4de9-477e-8265-51764d22069c","exec":["pm.test(\"Form-getSpecific Form.  Status = 200\", function () {\r","    pm.response.to.have.status(200);\r","});\r","\r","var time = pm.response.responseTime\r","\r","pm.test('Response time: ' + time + ' ms', () => pm.response.to.have.status(200))"],"type":"text/javascript"}}],"id":"ce804bd5-1f42-44dd-a936-f04e19666b30","protocolProfileBehavior":{"disableBodyPruning":true,"disabledSystemHeaders":{}},"request":{"auth":{"type":"noauth"},"method":"GET","header":[{"key":"CSRFToken","value":"{{CSRFToken}}","type":"text","disabled":true}],"url":{"raw":"https://localhost/LEAF_Request_Portal/api/form/_form_00882/export","protocol":"https","host":["localhost"],"path":["LEAF_Request_Portal","api","form","_form_00882","export"]}},"response":[]},{"name":"Local - Form Get Specific Form - Workflow","event":[{"listen":"test","script":{"id":"7b2beb1a-4de9-477e-8265-51764d22069c","exec":["pm.test(\"Form-getSpecific Form.  Status = 200\", function () {\r","    pm.response.to.have.status(200);\r","});\r","\r","var time = pm.response.responseTime\r","\r","pm.test('Response time: ' + time + ' ms', () => pm.response.to.have.status(200))"],"type":"text/javascript"}}],"id":"85e6e87d-d83c-406b-8aca-7848047ba1d2","protocolProfileBehavior":{"disableBodyPruning":true,"disabledSystemHeaders":{}},"request":{"auth":{"type":"noauth"},"method":"GET","header":[{"key":"CSRFToken","value":"{{CSRFToken}}","type":"text","disabled":true}],"url":{"raw":"https://localhost/LEAF_Request_Portal/api/form/_form_00882/workflow","protocol":"https","host":["localhost"],"path":["LEAF_Request_Portal","api","form","_form_00882","workflow"]}},"response":[]},{"name":"Local - Form Get Specific Form Record - RecordInfo","event":[{"listen":"test","script":{"id":"7b2beb1a-4de9-477e-8265-51764d22069c","exec":["pm.test(\"Form-getSpecific Form.  Status = 200\", function () {\r","    pm.response.to.have.status(200);\r","});\r","\r","var time = pm.response.responseTime\r","\r","pm.test('Response time: ' + time + ' ms', () => pm.response.to.have.status(200))"],"type":"text/javascript"}}],"id":"a420f61c-e5f0-4f68-9bc7-c44c0c112faf","protocolProfileBehavior":{"disableBodyPruning":true,"disabledSystemHeaders":{}},"request":{"auth":{"type":"noauth"},"method":"GET","header":[{"key":"CSRFToken","value":"{{CSRFToken}}","type":"text","disabled":true}],"url":{"raw":"https://localhost/LEAF_Request_Portal/api/form/50/recordinfo","protocol":"https","host":["localhost"],"path":["LEAF_Request_Portal","api","form","50","recordinfo"]}},"response":[]},{"name":"Local - Form Get Specific Form - Records","event":[{"listen":"test","script":{"id":"7b2beb1a-4de9-477e-8265-51764d22069c","exec":["pm.test(\"Form-getSpecific Form.  Status = 200\", function () {\r","    pm.response.to.have.status(200);\r","});\r","\r","var time = pm.response.responseTime\r","\r","pm.test('Response time: ' + time + ' ms', () => pm.response.to.have.status(200))"],"type":"text/javascript"}}],"id":"515a6bdd-a2d3-4de9-aa7c-eb38feabc978","protocolProfileBehavior":{"disableBodyPruning":true,"disabledSystemHeaders":{}},"request":{"auth":{"type":"noauth"},"method":"GET","header":[{"key":"CSRFToken","value":"{{CSRFToken}}","type":"text","disabled":true}],"url":{"raw":"https://localhost/LEAF_Request_Portal/api/form/_form_00882/records","protocol":"https","host":["localhost"],"path":["LEAF_Request_Portal","api","form","_form_00882","records"]}},"response":[]}],"auth":{"type":"ntlm","ntlm":[{"key":"password","value":"211212","type":"string"},{"key":"username","value":"OITBIRRICHAM1","type":"string"}]},"event":[{"listen":"prerequest","script":{"id":"d1db69b7-dfb9-4712-aac4-a4a32de30174","type":"text/javascript","exec":[""]}},{"listen":"test","script":{"id":"9cdd4731-51a9-4035-a4c7-0bcb6add81c5","type":"text/javascript","exec":[""]}}],"variable":[{"id":"aa7ba53c-7197-48f6-9ef4-0cab0deb09c4","key":"CSFRToken","value":"Input CSFR Token","type":"string"},{"id":"f6e600d0-a2c4-48b3-8b6d-fff127bc590e","key":"formCategories","value":""},{"id":"68283dc6-5880-4c4b-99ce-b157b6372e59","key":"CategoryID","value":""},{"id":"e69de574-9cc1-47a1-b404-b260697db794","key":"categoryID","value":""}]}