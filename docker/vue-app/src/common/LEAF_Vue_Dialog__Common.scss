/* variables, SASS mixins, Modal styles */

$BG_DarkNavy: #162e51;
$base_navy: #005EA2;
$LtNavy: #1476bd;
$LEAF_CSS_outline: #2491ff;
$charcoal: #252f3e;
$dk-gray: #4a5778;
$BG_LightGray: #f3f3f3;
$BG_Pearl: #f2f2f6;
$manila: #feffd1;
$USWDS_LtGray: #c9c9c9;
$USWDS_Cyan: #00bde3;
$lt_cyan: #e8f2ff;
$BG_VividOrange: #ff6800; /*changed from Figma #f56600 to meet accessibility contrast*/
$attention: #a00;

$custom_drop_spacer: 80px;


/* mixins, utils, resets, general styles */
@mixin flexcenter {
    display: flex;
    justify-content: center;
    align-items: center;
}
@mixin fit {
    width: -moz-fit-content;
    width: fit-content;
}

body { /* fixes header not extending entire width */
    min-width: -moz-fit-content; /*firefox prior to nov 2021*/
    min-width: fit-content;
} 
[v-cloak] {
    display: none;
}
.page_loading {
    border: 2px solid black;
    text-align: center;
    font-size: 24px;
    font-weight: bold;
    padding: 1rem;
    background-color: white;
}
input[type="color"] {
    cursor: pointer;
}

#vue-formeditor-app {
    min-height: 100vh;
    #vue_app_main {
        margin: 0;
        > section {
            margin: auto;
            padding: 0 0.5em;
            max-width: 1800px;
        }
    }
}
#vue-formeditor-app *, #site-designer-app *, #leaf_dialog_content * {
    box-sizing: border-box;
}
#vue-formeditor-app label, #site-designer-app label, #leaf_dialog_content label {
    font-family: 'Source Sans Pro Web', Helvetica, Arial, sans-serif;
}

#vue-formeditor-app button:not(.choices__button,[class*="trumbowyg"]),
#vue-formeditor-app a.btn-general,
#site-designer-app button:not(.choices__button,[class*="trumbowyg"]),
#leaf_dialog_content button:not(.choices__button,[class*="trumbowyg"]) {
    @include flexcenter;
    cursor: pointer;
    font-weight: bolder;
    padding: 2px 0.4em;
    border-radius: 3px;
    white-space: nowrap;
    line-height: normal;
    text-decoration: none;
    &:not(.disabled):hover, &:not(.disabled):focus, &:not(.disabled):active {
        outline: 2px solid #20a0f0;
    }
}
button.btn-general, a.btn-general, button.btn-confirm {
    background-color: $lt_cyan;
    color: $base_navy;
    border: 2px solid $base_navy;
    &:not(.disabled):hover, &:not(.disabled):focus, &:not(.disabled):active {
        background-color: $base_navy;
        color: white;
        border: 2px solid black !important;
    }
    &.disabled {
        cursor: not-allowed !important;
        background-color: #c9c9c9;
        color: #454545;
        &:active {
            border: 2px solid $base_navy !important;
        }
    }
    a, a:visited, a:active, a:focus {
        text-decoration: none;
        color: inherit;
    }
}
button.btn-confirm {
    color: white;
    background-color: $base_navy;
}
ul {
    list-style-type: none;
    margin: 0;
    padding: 0;
}
label {
    padding: 0;
    display: flex;
    align-items: center;
    font-weight: bolder;
    white-space: nowrap;
    margin-bottom: 2px;
    &.checkable {
        margin-bottom: 0;
    }
}

a.router-link {
    @include flexcenter;
    text-decoration: none;
    color: inherit;
    border-radius: 3px;
}
td a.router-link {
    justify-content: flex-start;
}


/* base dialog modal styling */
#leaf-vue-dialog-background {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    z-index: 100;
    background-color: rgba(0,0,20,0.5);
}
#leaf_dialog_content {
    position: absolute;
    margin: auto;
    width: auto;
    min-width: 450px;
    resize: horizontal;
    z-index: 9999;
    max-width: 900px;
    height: auto;
    min-height: 0;
    border-radius: 4px;
    background-color: white;
    box-shadow: 0 0 5px 1px rgba(0,0,25,0.25);
    overflow: visible;

    p {
        margin: 0;
        padding: 0;
        line-height: 1.5;
    }

    > div {
        padding: 0.75rem 1rem;
    }
    li {
        display: flex;
        align-items: center;
    }
    .leaf-vue-dialog-title {
        color: $charcoal;
        border-top: 3px solid white;
        border-left: 3px solid white;
        border-right: 3px solid #cadff0;
        border-bottom: 2px solid #cadff0;
        border-radius: 3px;
        background-color: $lt_cyan;
        cursor: move;
    
        h2 {
            color: inherit;
            font-size: 22px;
            margin: 0 1.5rem 0 0;
        }
    } 
    #leaf-vue-dialog-close {
        @include flexcenter;
        position: absolute;
        top: 8px;
        right: 8px;
        width: 25px;
        height: 25px;
        cursor: pointer;
        font-weight: bold;
        font-size: 1.2rem;
        border: 0;
        background-color: transparent;
    }
    #leaf-vue-dialog-cancel-save {
        display:flex; 
        justify-content: space-between; 
        margin-top: 1em;
        #button_save {
            margin-right:auto;
        }
        #button_cancelchange {
            margin-left: auto;
        }
    }
}
#history-slice td {
    word-break:break-word;
}


/* custom checkboxes and radio, choicesjs modifications */
.checkable.leaf_check {
    cursor: pointer;
    position: relative;
    display:flex;
    align-items: center;
    width: -moz-fit-content;
    width: fit-content;
    max-width: 600px;
    margin-bottom: 0.2em;
    white-space: normal;
}
input[class*="icheck"][class*="leaf_check"], 
input[class*="ischecked"][class*="leaf_check"] { 
    opacity: 0;
    cursor: pointer;
    width: 18px;
    flex: 0 0 18px;
    height: 18px;
    margin: 2px;
}
span.leaf_check {
    position: absolute;
    top: 50%;
    transform: translate(0, -50%);
    left: 0;
    width: 18px;
    height: 18px;
    background-color: white;
    border: 1px solid rgb(151, 150, 149);
    border-radius: 2px;
}
span.leaf_check:hover, span.leaf_check:focus, span.leaf_check:active,
input[class*="ischecked"][class*="leaf_check"]:focus ~ span.leaf_check,
input[class*="icheck"][class*="leaf_check"]:focus ~ span.leaf_check {
    border: 2px solid #47e;
    background-color: transparent;
}
input[type="radio"][class*="icheck"][class*="leaf_check"] ~ span.leaf_check {
    border-radius: 50%;
}
span.leaf_check::after {
    content: "";
    box-sizing: content-box; /* needed to fix leaf.css collision */
    position: absolute;
    top: 10%;
    left: 30%;
    width: 25%;
    height: 50%;
    background-color: transparent;
    border: 1px solid #FFF;
    border-width: 0px 3px 3px 0px;
    border-radius: 2px;
    transform: rotate(40deg);
    display: none;
}
input[class*="icheck"][class*="leaf_check"]:checked ~ span.leaf_check,
input[class*="ischecked"][class*="leaf_check"]:checked ~ span.leaf_check {
    background-color: #47e;
    border: 1px solid #47e;
    opacity: 1;
}
input[class*="icheck"][class*="leaf_check"]:checked ~ span.leaf_check::after,
input[class*="ischecked"][class*="leaf_check"]:checked ~ span.leaf_check::after {
    display: block;
}

/** modifications to choicesjs styles **/
.choices__inner div.choices__item.choices__item--selectable,
.choices__inner div.choices__item.is-highlighted  {
    background-color: #f6faff;
    background-image: linear-gradient(0, #eee 50%, #fff 53%);
    border: 1px solid #aaa;
    border-radius: 4px;
    color:black;
}
button.choices__button {
    filter: brightness(25%); 
}
button.choices__button:hover, button.choices__button:focus, button.choices__button:active {
    filter: brightness(0);
    transform: scale(1.05);
    border-left: 1px solid black !important;
}
.choices__list {
    color: black;
}
.choices__list.choices__list--dropdown.is-active .is-highlighted {
    background-color: $lt_cyan;
    box-shadow: 0px 0px 1px 1px #00a5bb60 inset;
}
.choices__list[aria-expanded] .choices__item--selectable.is-highlighted::after {
    opacity: 0.75;
}
.choices input {  /* prevent leaf.css corruption */
    float: none;
    &:hover, &:focus, &:active {
        outline: none;
    }
}



/** drag-drop customizations:
API image replacement, custom display, and drop area list styling 
**/

/* override the drag-drop API default image so that it does not show. */
#drag_drop_default_img_replacement {
    position: absolute;
    left: -9999px;
    height: 0;
    width: 0;
}
/* replace custom image (it cannot be styled) with a custom display div/card.
position of this element will need to be programmatically updated during drag events */
#drag_drop_custom_display {
    cursor: pointer;
    position: absolute;
    left: -9999px;
    width: 600px;
    height: 100px;
    padding: 0.75rem 1rem;
    z-index: 1001;
    background-color: white;
    border: 1px solid black;
    border-radius: 4px;
    box-shadow: 2px 2px 4px 1px rgba(0,0,25,0.25);
}

/* make element being moved look like an empty slot */
li.is_being_dragged {
    overflow: hide;
    margin-bottom: 1rem;
    background-color: rgba(0,0,0,0.2) !important;
    box-shadow: 2px 2px 4px 1px rgba(0,0,25,0.3) inset !important;
    & * {
        display: none
    }
}

/* general styling of base and nested drop area lists */
ul[id^="base_drop_area"] {
    position: relative;
    padding: 1px 0; //top and bottom padding needed for base drop area visibility
    li[id^="index_listing_"] {
        position: relative;
        transition: margin 0.4s ease;
    }
    ul[id^="drop_area_parent_"] {
        position: relative;
    }
}

/* drop area ul that do not yet have any li */
ul.empty_drop_area_ul {
    height: 10px;
    transition: height .4s ease;
}
ul.entered-empty-ul-drop-zone {
    height: $custom_drop_spacer;
    border-radius: 3px;
    box-shadow: 2px 2px 4px 1px rgba(0,0,25,0.3) inset;
    background-color: rgba(0,0,25,0.15);
    outline: 2px solid $LEAF_CSS_outline;
    margin: 0 1rem 1rem 0 !important;
}

/* applied to closest li if it is not at end of ul list to add space above */
li.entered-parent-ul-drop-zone {
    margin-top: calc($custom_drop_spacer + 2rem) !important;
}
/* applied to the last li if the user is dragging element to end of ul list to add space below */
li.entered-parent-ul-drop-zone-last {
    margin-bottom: calc($custom_drop_spacer + 2rem) !important;
}

/* display ::before styles for drop area ul that have li, to create a preview display of where the item will be dropped. */
li.entered-parent-ul-drop-zone::before, li.entered-parent-ul-drop-zone-last::before {
    content: "";
    position: absolute;
    opacity: 0;
    pointer-events: none;
    display: block;
    margin: 0;
    top: calc(-1 * $custom_drop_spacer - 1rem);
    left: 0;
    height: 10px;
    width: 100%;
    border-radius: 3px;
    box-shadow: 2px 2px 4px 1px rgba(0,0,25,0.3) inset;
    background-color: rgba(0,0,25,0.15);
    outline: 2px solid $LEAF_CSS_outline;
    transition: height 0.2s ease, opacity 0.2s ease;
}
li.entered-parent-ul-drop-zone-last::before {
    top: calc(100% + 1rem);
}
li.drop_preview_visible.entered-parent-ul-drop-zone::before,
li.drop_preview_visible.entered-parent-ul-drop-zone-last::before {
    opacity: 1;
    height: $custom_drop_spacer;
}