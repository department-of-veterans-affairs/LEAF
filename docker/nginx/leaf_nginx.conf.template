upstream backend_api_servers{
  server ${NGINX_POD}:${HTTP_API_PORT};
}

upstream backend_lq_api_servers{
  server ${NGINX_POD}:${HTTP_API_LQ_PORT};
}

server {
    listen ${HTTP_PORT} default_server;
    #listen [::]:${HTTP_PORT};
    server_name ${HOST};
    root /var/www/html;
    return 301 https://$server_name$request_uri;
}

# Large query NGINX Server
server {

    listen ${HTTP_API_LQ_PORT} ;

    client_max_body_size 20m;

    error_log  /var/log/nginx/error.log;
    access_log /var/log/nginx/access.log;

    #no ports in any redirect.
    port_in_redirect off;

    server_name ${HOST};
    root /var/www/html;
    index index.php index.html index.htm;

    location /health-check-api {
        access_log off;
        return 200 "ok api";
        add_header Content-Type text/plain;
    }
    
    location ~ \.php$ {
        try_files $uri $uri/ /index.php =404;
        fastcgi_pass ${LEAF_API_POD}:9000;
        fastcgi_index index.php;
        fastcgi_buffers 16 16k;
        fastcgi_buffer_size 32k;
        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
        #fixes timeouts
        fastcgi_read_timeout 600;
        include fastcgi_params;
        gzip on;
    }

    location ~ /api/(.*?)$ {
        fastcgi_pass ${LEAF_API_POD}:9000;
        fastcgi_buffers 16 16k;
        fastcgi_buffer_size 32k;
        fastcgi_split_path_info ^(.+\/api\/)(.*)$;
        fastcgi_index index.php;
        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
        fastcgi_param PATH_INFO $fastcgi_path_info;
        fastcgi_param QUERY_STRING $query_string;
        fastcgi_param REQUEST_METHOD $request_method;
        fastcgi_param CONTENT_TYPE $content_type;
        fastcgi_param CONTENT_LENGTH $content_length;
        #fixes timeouts
        fastcgi_read_timeout 3000;
        fastcgi_send_timeout 3000;

        # Give this info to php
        fastcgi_param LEAF_Is_Large_Query "true";
        # Give this info to the browser, need to see if this is actually needed or just a nice to have to see
        add_header LEAF_Is_Large_Query "true" always;

        include fastcgi_params;
        gzip on;

        # debuging
        add_header x-debug-root-script "$document_root$fastcgi_script_name" always;
        add_header x-debug-path-info "$fastcgi_path_info" always;
        add_header x-debug-args-info "$args" always;
    }

}

#API server
server {

    listen ${HTTP_API_PORT};

    client_max_body_size 20m;

    error_log  /var/log/nginx/error.log;
    access_log /var/log/nginx/access.log;

    #no ports in any redirect.
    port_in_redirect off;

    server_name ${HOST};
    root /var/www/html;
    index index.php index.html index.htm;

    location /health-check-api {
        access_log off;
        return 200 "ok api";
        add_header Content-Type text/plain;
    }
    
    location ~ \.php$ {
        try_files $uri $uri/ /index.php =404;
        fastcgi_pass ${LEAF_API_POD}:9000;
        fastcgi_index index.php;
        fastcgi_buffers 16 16k;
        fastcgi_buffer_size 32k;
        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
        #fixes timeouts
        fastcgi_read_timeout 600;
        include fastcgi_params;
        gzip on;
    }

    location ~ /api/(.*?)$ {
        fastcgi_pass ${LEAF_POD}:9000;
        fastcgi_buffers 16 16k;
        fastcgi_buffer_size 32k;
        fastcgi_split_path_info ^(.+\/api\/)(.*)$;
        fastcgi_index index.php;
        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
        fastcgi_param PATH_INFO $fastcgi_path_info;
        fastcgi_param QUERY_STRING $query_string;
        fastcgi_param REQUEST_METHOD $request_method;
        fastcgi_param CONTENT_TYPE $content_type;
        fastcgi_param CONTENT_LENGTH $content_length;
        #fixes timeouts
        fastcgi_read_timeout 600;

        # Give this info to php
        fastcgi_param LEAF_Is_Large_Query "false";
        # Give this info to the browser, need to see if this is actually needed or just a nice to have to see
        add_header LEAF_Is_Large_Query "false" always;

        include fastcgi_params;
        gzip on;

        

        # debuging
        add_header x-debug-root-script "$document_root$fastcgi_script_name" always;
        add_header x-debug-path-info "$fastcgi_path_info" always;
        add_header x-debug-args-info "$args" always;
    }

}


server {
   

    listen ${HTTPS_PORT} ssl http2 default_server;
    #listen [::]:${HTTPS_PORT} ssl http2 default_server;

    ssl_certificate /etc/ssl/certs/leaf.pem;
    ssl_certificate_key /etc/ssl/certs/leaf.key;
    ssl_protocols TLSv1.3;
    ssl_ciphers HIGH:!aNULL:!MD5;

    client_max_body_size 20m;

    error_log  /var/log/nginx/error.log;
    access_log /var/log/nginx/access.log;

    #no ports in any redirect.
    port_in_redirect off;

    server_name ${HOST};
    root /var/www/html;
    index index.php index.html index.htm;

    #this is for everything except gallery.php and svgs since those need to load still
    location ~* ^(.*)/libs/dynicons(?!(/gallery.php|/(.*).svg)){

        #absolute_redirect off;

        rewrite ^/(.*)/libs/dynicons(.*)$ /$1/dynicons;# permanent;

    }

    location /health-check-server {
        access_log off;
        return 200 "ok server";
        add_header Content-Type text/plain;
    }

    location ~ \.php$ {
        try_files $uri $uri/ /index.php =404;
        fastcgi_pass ${LEAF_POD}:9000;
        fastcgi_index index.php;
        fastcgi_buffers 16 16k;
        fastcgi_buffer_size 32k;
        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
        #fixes timeouts
        fastcgi_read_timeout 600;
        include fastcgi_params;
        gzip on;

    }

    # static files browser caching
    location ~* \.(jpg|jpeg|png|gif|ico)$ {
        #how long a browser should wait on checking for new cache
        expires 1m;
        #leave these out of the access log, who cares if someone access the leaf logo at 1245 pm
        access_log off;
        add_header Vary Accept-Encoding;
        #send the whole file
        #tcp_nodelay off;
        #If many changes to the file it can cause the file not to load, waiting the 45s between file changes keeps it
        #from failing. This should not be too much of an issue on live and helps perf
        #open_file_cache max=3000 inactive=120s;
        #open_file_cache_valid 45s;
        #open_file_cache_min_uses 2;
        #open_file_cache_errors off;
        #the magic sauce to bust a cache
        etag on;
    }

    # static files browser caching that impact client runtime
    location ~* \.(css|js)$ {
        #leave these out of the access log, who cares if someone access the leaf logo at 1245 pm
        access_log off;
        add_header Vary Accept-Encoding;
        #send the whole file
        #tcp_nodelay off;
        #If many changes to the file it can cause the file not to load, waiting the 45s between file changes keeps it
        #from failing. This should not be too much of an issue on live and helps perf
        #open_file_cache max=3000 inactive=120s;
        #open_file_cache_valid 45s;
        #open_file_cache_min_uses 2;
        #open_file_cache_errors off;
        #the magic sauce to bust a cache
        etag on;
        add_header Cache-Control "max-age=0, must-revalidate";
    }

    location ~ /api/v2/(.*?)$ {
        set $api_directory /var/www/html/app/Api/v2;
        fastcgi_pass php-fpm:9000;
        fastcgi_buffers 16 16k;
        fastcgi_buffer_size 32k;
        fastcgi_split_path_info ^(.+\/api\/v2\/)(.*)$;
        fastcgi_index index.php;
        fastcgi_param SCRIPT_FILENAME $api_directory/index.php;
        fastcgi_param PATH_INFO $fastcgi_path_info;
        fastcgi_param QUERY_STRING $query_string;
        fastcgi_param REQUEST_METHOD $request_method;
        fastcgi_param CONTENT_TYPE $content_type;
        fastcgi_param CONTENT_LENGTH $content_length;
        #fixes timeouts
        fastcgi_read_timeout 600;
        include fastcgi_params;
        gzip on;

        # debuging
        add_header x-debug-root-script "$document_root$fastcgi_script_name" always;
        add_header x-debug-path-info "$fastcgi_path_info" always;
        add_header x-debug-args-info "$args" always;
    }

    location ~ /api/(.*?)$ {
        proxy_pass http://backend_api_servers;

        #this is what is used to tell nginx that we want the next server
        #proxy_next_upstream error timeout http_503;
        #proxy_next_upstream_tries 2;
        proxy_intercept_errors on;

        proxy_set_header Host $host;
        proxy_redirect     off;
        proxy_set_header   X-Real-IP  $remote_addr;
        proxy_set_header   X-Scheme   $scheme;
        proxy_set_header   X-Forwarded-Proto https;
        proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header   X-Proto on;
        proxy_set_header   REFERER $http_referer;
        #proxy_http_version 1.1;
        proxy_connect_timeout 600;
        proxy_read_timeout 600;
        proxy_buffer_size 16k;
        proxy_buffers 32 8k;
        proxy_busy_buffers_size 64k;

        error_page 306 = @transfer_error;
    }

    location @transfer_error {
        internal;
        proxy_pass http://backend_lq_api_servers;

        proxy_intercept_errors on;


        proxy_set_header Host $host;
        proxy_redirect     off;
        proxy_set_header   X-Real-IP  $remote_addr;
        proxy_set_header   X-Scheme   $scheme;
        proxy_set_header   X-Forwarded-Proto https;
        proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header   X-Proto on;
        proxy_set_header   REFERER $http_referer;
        #proxy_http_version 1.1;
        proxy_connect_timeout 600;
        proxy_read_timeout 600;
        proxy_buffer_size 16k;
        proxy_buffers 32 8k;
        proxy_busy_buffers_size 64k;
    }


    location /selenium-tests {
        resolver 127.0.0.11;
        set $selen_pod ${SEL_POD}:9000;
        fastcgi_pass $selen_pod;
        fastcgi_buffers 16 16k;
        fastcgi_buffer_size 32k;
        fastcgi_split_path_info ^(.+\/selenium-tests\/)(.*)$;
        fastcgi_index index.php;
        fastcgi_param SCRIPT_FILENAME /app/index.php;
        fastcgi_param PATH_INFO $fastcgi_path_info;
        fastcgi_param QUERY_STRING $query_string;
        fastcgi_param REQUEST_METHOD $request_method;
        fastcgi_param CONTENT_TYPE $content_type;
        fastcgi_param CONTENT_LENGTH $content_length;
        
        #fixes timeouts
        fastcgi_read_timeout 600;
        include fastcgi_params;
        gzip on;

        # debuging
        add_header x-debug-root-script "$document_root$fastcgi_script_name" always;
        add_header x-debug-path-info "$fastcgi_path_info" always;
        add_header x-debug-args-info "$args" always;
    }



    #location /adminer {
    #    proxy_pass ${LEAF}:8080;
    #}
}
