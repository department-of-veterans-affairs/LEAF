services:
    leaf_vue_ui:
        container_name: leaf_vue_ui
        env_file:
            - ./env_files/vue_ui_local.env
        build:
            context: ./vue-app
            dockerfile: leaf_vue.dockerfile
        volumes:
            - "./vue-app/src:/app/src"
            - "/app/node_modules"
            - "../app/libs/js/vue-dest:/app/vue-dest"
            - "../app/libs/css:/app/css"
        networks:
            - leaf-sql
            - leaf

    leaf-php-8:
        image: leaf-fpm
        container_name: leaf-fpm
        env_file:
            - ./env_files/globals_local.env
            - ./env_files/secrets.env
            - ./env_files/globals_leaf20_local.env
        build:
            context: ../
            dockerfile: docker/php/leaf_monlith.dockerfile
            args:
                - BUILD_UID=${BUILD_UID}
                - SMTP_HOST=leaf-smtp
                - MAIL_HUB=leaf-smtp
        volumes:
            - ./env_files/leaf.key:/etc/ssl/certs/leaf.key
            - ./env_files/leaf.pem:/etc/ssl/certs/leaf.pem
            - ../LEAF_Request_Portal/vafavicon.ico:/var/www/html/favicon.ico
            - ../LEAF_Request_Portal/vafavicon.ico:/var/www/html/LEAF_Nexus/vafavicon.ico
            # - ../launchpad:/var/www/html/launchpad  # Dev should echo prod as exact as possible.  Will be added later
            - ../LEAF_Nexus:/var/www/html/LEAF_NationalNexus
            - ../LEAF_Nexus:/var/www/html/LEAF_Nexus
            - ../LEAF_Request_Portal:/var/www/html/LEAF_Request_Portal
            - ../scripts:/var/www/scripts
            - ../health_checks:/var/www/html/health_checks
            - ../app:/var/www/html/app
            - ../libs:/var/www/html/libs # temp step.  Will shift to below later
            - ../docker/mysql/db:/var/www/db
            - ./php/dev:/var/www/html/dev
        networks:
            - leaf-sql
            - leaf
        environment:
            - REMOTE_USER=${REMOTE_USER}
            - APACHE_RUN_USER=build_user

    leaf-nginx:
        image: leaf-nginx
        container_name: leaf-nginx
        env_file:
            - ./env_files/nginx_local.env
        build:
            context: ../
            dockerfile: docker/nginx/leaf_nginx.dockerfile
        volumes:
            - ./env_files/leaf.key:/etc/ssl/certs/leaf.key
            - ./env_files/leaf.pem:/etc/ssl/certs/leaf.pem
            - ./nginx/src:/var/www/html
            - ./nginx/leaf_nginx.conf.template:/etc/nginx/templates/default.conf.template
        volumes_from:
            - leaf-php-8
        ports:
            - 80:${HTTP_PORT}
            - 443:${HTTPS_PORT}
        depends_on:
            - leaf-php-8
        networks:
            - leaf

    leaf-smtp:
        image: rnwood/smtp4dev
        container_name: leaf-smtp
        env_file:
            - ./env_files/globals_local.env
            - ./env_files/secrets.env
        ports:
            - "5080:80"
        networks:
            - leaf

    leaf-adminer:
        container_name: leaf-adminer
        image: adminer
        environment:
            ADMINER_DEFAULT_SERVER: leaf-mysql
        ports:
            - "8080:8080"
        networks:
            - leaf-sql

    leaf-mysql:
        image: mysql:8.0
        container_name: leaf-mysql
        ports:
            - "3306:3306"
        env_file:
            - ./env_files/mysql_local.env
            - ./env_files/secrets.env
        command: mysqld --sql_mode="NO_ENGINE_SUBSTITUTION" # set same mode as prod
        #healthcheck:
        #  test: "mysqladmin ping -h localhost -u $${MYSQL_USER} -p$${MYSQL_PASSWORD}"
        #  start_interval: 1s
        #  timeout: 1s
        #  retries: 5
        networks:
            - leaf-sql
        volumes:
            - leaf-dev-mysql-data:/var/lib/mysql
            - ./mysql/dev_bootstrap.sh:/docker-entrypoint-initdb.d/dev_bootstrap.sh # this only runs if leaf-dev-mysql-data doesn't exist
            - ./mysql/db/boilerplate:/leaf-boilerplate
            - ./mysql/dev_db:/leaf-dev_db

    leaf-api-test-helper:
        image: golang
        container_name: leaf-api-test-helper
        volumes:
            - "../x-test/api-test-helper/:/app"
            - "../x-test/API-tests/:/API-tests"
        ports:
            - "8000:8000"
        env_file:
            - ./env_files/mysql_local.env
            - ./env_files/secrets.env
        networks:
            - leaf
            - leaf-sql
        working_dir: /app
        entrypoint: go run .
        extra_hosts:
            - host.docker.internal:host-gateway

    test-api:
        image: test-api:latest
        container_name: test-api
        build:
            context: ../
            dockerfile: docker/selenium-tests/test-api.dockerfile
        env_file:
            - ./selenium-tests/leaf_selenium.env
        networks:
            - leaf
            - ui-test
        volumes:
            - ./selenium-tests/index.php:/app/index.php
            - ../test/Test-Automation/src:/app/src
            - ../test/Test-Automation/testng.xml:/app/testng.xml
            - ../test/Test-Automation/ExtentReports:/app/ExtentReports
        depends_on:
            - chrome
        environment:
            - ENVIRONMENT=remote
            - ENV_URL=http://host.docker.internal/LEAF_Request_Portal/admin/
            - HUB_URL=http://selenium-chrome:4445/wd/hub

    chrome:
        image: custom-selenium-chrome
        container_name: selenium-chrome
        build:
            context: ./
            dockerfile: selenium-tests/selenium.dockerfile
        networks:
            - ui-test
            - leaf
        ports:
            - "4445:4445"
            - "5900:5900"
            - "7900:7900"
        shm_size: '2g'
        environment:
            - SE_NODE_MAX_INSTANCES=2
            - SE_NODE_MAX_SESSIONS=2
            - SE_NODE_OVERRIDE_MAX_SESSIONS=true
            - SE_NODE_SESSION_TIMEOUT=600
            - SE_SESSION_REQUEST_TIMEOUT=60000
            - SE_SESSION_RETRY_INTERVAL=5000
        healthcheck:
            test: curl --fail http://localhost:4445/wd/hub/status || exit 1
            interval: 5s
            timeout: 10s
            retries: 5

    playwright:
        build:
            context: ../
            dockerfile: docker/playwright/playwright.dockerfile
        stdin_open: true # docker run -i
        tty: true        # docker run -t
        volumes:
            - ../x-test/end2end/:/usr/app
        ports:
            - "8001:8001"
        networks:
            - leaf

volumes:
    leaf-php-data:
        external: true
    leaf-lib:
        external: true
    leaf-dev-mysql-data:
        external: false

networks:
    leaf-sql:
        external: true
    leaf:
        external: true
    ui-test:
