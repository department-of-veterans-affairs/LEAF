<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="15" passed="14" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2023-09-14T20:10:18 CDT" name="RegressionSuite" finished-at="2023-09-14T20:10:50 CDT" duration-ms="32426">
    <groups>
    </groups>
    <test started-at="2023-09-14T20:10:18 CDT" name="Service Chiefs" finished-at="2023-09-14T20:10:50 CDT" duration-ms="32426">
      <class name="Execution.serviceChiefs">
        <test-method is-config="true" signature="initializeFramework(java.lang.String,java.lang.String)[pri:0, instance:Execution.serviceChiefs@2dde1bff]" started-at="2023-09-14T20:10:18 CDT" name="initializeFramework" finished-at="2023-09-14T20:10:20 CDT" duration-ms="2602" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[https://localhost/LEAF_Nexus/admin/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initializeFramework -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:Execution.serviceChiefs@2dde1bff]" started-at="2023-09-14T20:10:20 CDT" name="setUp" finished-at="2023-09-14T20:10:20 CDT" duration-ms="5" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:Execution.serviceChiefs@2dde1bff]" started-at="2023-09-14T20:10:20 CDT" name="setUp" finished-at="2023-09-14T20:10:20 CDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testForCertPage()[pri:1, instance:Execution.serviceChiefs@2dde1bff]" started-at="2023-09-14T20:10:20 CDT" name="testForCertPage" finished-at="2023-09-14T20:10:22 CDT" duration-ms="1525" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testForCertPage -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:Execution.serviceChiefs@2dde1bff]" started-at="2023-09-14T20:10:22 CDT" name="setUp" finished-at="2023-09-14T20:10:22 CDT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="clickSetupWizard()[pri:100, instance:Execution.serviceChiefs@2dde1bff]" started-at="2023-09-14T20:10:22 CDT" name="clickSetupWizard" finished-at="2023-09-14T20:10:25 CDT" duration-ms="2910" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- clickSetupWizard -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:Execution.serviceChiefs@2dde1bff]" started-at="2023-09-14T20:10:25 CDT" name="setUp" finished-at="2023-09-14T20:10:25 CDT" duration-ms="3" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="clickExecLeadershipTeam()[pri:110, instance:Execution.serviceChiefs@2dde1bff]" started-at="2023-09-14T20:10:25 CDT" name="clickExecLeadershipTeam" finished-at="2023-09-14T20:10:27 CDT" duration-ms="2563" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- clickExecLeadershipTeam -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:Execution.serviceChiefs@2dde1bff]" started-at="2023-09-14T20:10:27 CDT" name="setUp" finished-at="2023-09-14T20:10:27 CDT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="clickCreateELT()[pri:120, instance:Execution.serviceChiefs@2dde1bff]" started-at="2023-09-14T20:10:27 CDT" name="clickCreateELT" finished-at="2023-09-14T20:10:29 CDT" duration-ms="1059" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- clickCreateELT -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:Execution.serviceChiefs@2dde1bff]" started-at="2023-09-14T20:10:29 CDT" name="setUp" finished-at="2023-09-14T20:10:29 CDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="enterNameOfService()[pri:130, instance:Execution.serviceChiefs@2dde1bff]" started-at="2023-09-14T20:10:29 CDT" name="enterNameOfService" finished-at="2023-09-14T20:10:32 CDT" duration-ms="3849" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- enterNameOfService -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:Execution.serviceChiefs@2dde1bff]" started-at="2023-09-14T20:10:32 CDT" name="setUp" finished-at="2023-09-14T20:10:32 CDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="enterPositionTitle()[pri:140, instance:Execution.serviceChiefs@2dde1bff]" started-at="2023-09-14T20:10:32 CDT" name="enterPositionTitle" finished-at="2023-09-14T20:10:34 CDT" duration-ms="2074" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- enterPositionTitle -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:Execution.serviceChiefs@2dde1bff]" started-at="2023-09-14T20:10:34 CDT" name="setUp" finished-at="2023-09-14T20:10:34 CDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="inputEmployeeName()[pri:150, instance:Execution.serviceChiefs@2dde1bff]" started-at="2023-09-14T20:10:34 CDT" name="inputEmployeeName" finished-at="2023-09-14T20:10:37 CDT" duration-ms="2521" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- inputEmployeeName -->
        <test-method signature="saveSCGroup()[pri:160, instance:Execution.serviceChiefs@2dde1bff]" started-at="2023-09-14T20:10:37 CDT" name="saveSCGroup" finished-at="2023-09-14T20:10:37 CDT" duration-ms="362" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- saveSCGroup -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:Execution.serviceChiefs@2dde1bff]" started-at="2023-09-14T20:10:37 CDT" name="setUp" finished-at="2023-09-14T20:10:37 CDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:Execution.serviceChiefs@2dde1bff]" started-at="2023-09-14T20:10:37 CDT" name="setUp" finished-at="2023-09-14T20:10:37 CDT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="createNexusDriver1()[pri:200, instance:Execution.serviceChiefs@2dde1bff]" started-at="2023-09-14T20:10:37 CDT" name="createNexusDriver1" finished-at="2023-09-14T20:10:43 CDT" duration-ms="5812" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createNexusDriver1 -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:Execution.serviceChiefs@2dde1bff]" started-at="2023-09-14T20:10:43 CDT" name="setUp" finished-at="2023-09-14T20:10:43 CDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="scrollDownNexus()[pri:210, instance:Execution.serviceChiefs@2dde1bff]" started-at="2023-09-14T20:10:43 CDT" name="scrollDownNexus" finished-at="2023-09-14T20:10:45 CDT" duration-ms="2013" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- scrollDownNexus -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:Execution.serviceChiefs@2dde1bff]" started-at="2023-09-14T20:10:45 CDT" name="setUp" finished-at="2023-09-14T20:10:45 CDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="syncServices()[pri:220, instance:Execution.serviceChiefs@2dde1bff]" started-at="2023-09-14T20:10:45 CDT" name="syncServices" finished-at="2023-09-14T20:10:47 CDT" duration-ms="1792" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- syncServices -->
        <test-method signature="navigateNexusBack()[pri:230, instance:Execution.serviceChiefs@2dde1bff]" started-at="2023-09-14T20:10:47 CDT" name="navigateNexusBack" finished-at="2023-09-14T20:10:47 CDT" duration-ms="262" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- navigateNexusBack -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:Execution.serviceChiefs@2dde1bff]" started-at="2023-09-14T20:10:47 CDT" name="setUp" finished-at="2023-09-14T20:10:47 CDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="clickServiceChiefs()[pri:240, instance:Execution.serviceChiefs@2dde1bff]" started-at="2023-09-14T20:10:47 CDT" name="clickServiceChiefs" finished-at="2023-09-14T20:10:49 CDT" duration-ms="1415" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- clickServiceChiefs -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:Execution.serviceChiefs@2dde1bff]" started-at="2023-09-14T20:10:47 CDT" name="setUp" finished-at="2023-09-14T20:10:47 CDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:Execution.serviceChiefs@2dde1bff]" started-at="2023-09-14T20:10:49 CDT" name="setUp" finished-at="2023-09-14T20:10:49 CDT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="scrollUpNexus()[pri:240, instance:Execution.serviceChiefs@2dde1bff]" started-at="2023-09-14T20:10:49 CDT" name="scrollUpNexus" finished-at="2023-09-14T20:10:49 CDT" duration-ms="523" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- scrollUpNexus -->
        <test-method signature="openSCGroup()[pri:250, instance:Execution.serviceChiefs@2dde1bff]" started-at="2023-09-14T20:10:49 CDT" name="openSCGroup" finished-at="2023-09-14T20:10:50 CDT" duration-ms="1036" status="FAIL">
          <exception class="org.openqa.selenium.NoSuchElementException">
            <message>
              <![CDATA[no such element: Unable to locate element: {"method":"xpath","selector":"//*[contains(text(),'000 Automated Test Services')]"}
  (Session info: chrome=116.0.5845.188)
For documentation on this error, please visit: https://www.seleniumhq.org/exceptions/no_such_element.html
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:25:48'
System info: host: 'DESKTOP-OOHKJP3', ip: '192.168.1.223', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '15.0.2'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 116.0.5845.188, chrome: {chromedriverVersion: 116.0.5845.96 (1a3918166880..., userDataDir: C:\Users\MAXRIC~1\AppData\L...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:63184}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: 0092c0708900fb7e4a4686172e6e7914
*** Element info: {Using=xpath, value=//*[contains(text(),'000 Automated Test Services')]}]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.NoSuchElementException: no such element: Unable to locate element: {"method":"xpath","selector":"//*[contains(text(),'000 Automated Test Services')]"}
  (Session info: chrome=116.0.5845.188)
For documentation on this error, please visit: https://www.seleniumhq.org/exceptions/no_such_element.html
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:25:48'
System info: host: 'DESKTOP-OOHKJP3', ip: '192.168.1.223', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '15.0.2'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 116.0.5845.188, chrome: {chromedriverVersion: 116.0.5845.96 (1a3918166880..., userDataDir: C:\Users\MAXRIC~1\AppData\L...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:63184}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: 0092c0708900fb7e4a4686172e6e7914
*** Element info: {Using=xpath, value=//*[contains(text(),'000 Automated Test Services')]}
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:64)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:500)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:481)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:323)
at org.openqa.selenium.remote.RemoteWebDriver.findElementByXPath(RemoteWebDriver.java:428)
at org.openqa.selenium.By$ByXPath.findElement(By.java:353)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:315)
at Execution.serviceChiefs.openSCGroup(serviceChiefs.java:399)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openSCGroup -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:Execution.serviceChiefs@2dde1bff]" started-at="2023-09-14T20:10:49 CDT" name="setUp" finished-at="2023-09-14T20:10:49 CDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="closeDown()[pri:0, instance:Execution.serviceChiefs@2dde1bff]" started-at="2023-09-14T20:10:50 CDT" name="closeDown" finished-at="2023-09-14T20:10:50 CDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closeDown -->
      </class> <!-- Execution.serviceChiefs -->
    </test> <!-- Service Chiefs -->
  </suite> <!-- RegressionSuite -->
</testng-results>
