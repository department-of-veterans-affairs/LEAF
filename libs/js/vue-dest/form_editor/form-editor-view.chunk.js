/*! For license information please see form-editor-view.chunk.js.LICENSE.txt */
"use strict";(self.webpackChunkleaf_vue=self.webpackChunkleaf_vue||[]).push([[145],{435:(e,t,n)=>{n.r(t),n.d(t,{default:()=>N});var o=n(166),i=n(775);function r(e){return r="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},r(e)}function a(){a=function(){return e};var e={},t=Object.prototype,n=t.hasOwnProperty,o=Object.defineProperty||function(e,t,n){e[t]=n.value},i="function"==typeof Symbol?Symbol:{},l=i.iterator||"@@iterator",s=i.asyncIterator||"@@asyncIterator",c=i.toStringTag||"@@toStringTag";function d(e,t,n){return Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}),e[t]}try{d({},"")}catch(e){d=function(e,t,n){return e[t]=n}}function u(e,t,n,i){var r=t&&t.prototype instanceof m?t:m,a=Object.create(r.prototype),l=new F(i||[]);return o(a,"_invoke",{value:S(e,n,l)}),a}function p(e,t,n){try{return{type:"normal",arg:e.call(t,n)}}catch(e){return{type:"throw",arg:e}}}e.wrap=u;var h={};function m(){}function f(){}function v(){}var g={};d(g,l,(function(){return this}));var I=Object.getPrototypeOf,y=I&&I(I(_([])));y&&y!==t&&n.call(y,l)&&(g=y);var b=v.prototype=m.prototype=Object.create(g);function D(e){["next","throw","return"].forEach((function(t){d(e,t,(function(e){return this._invoke(t,e)}))}))}function w(e,t){function i(o,a,l,s){var c=p(e[o],e,a);if("throw"!==c.type){var d=c.arg,u=d.value;return u&&"object"==r(u)&&n.call(u,"__await")?t.resolve(u.__await).then((function(e){i("next",e,l,s)}),(function(e){i("throw",e,l,s)})):t.resolve(u).then((function(e){d.value=e,l(d)}),(function(e){return i("throw",e,l,s)}))}s(c.arg)}var a;o(this,"_invoke",{value:function(e,n){function o(){return new t((function(t,o){i(e,n,t,o)}))}return a=a?a.then(o,o):o()}})}function S(e,t,n){var o="suspendedStart";return function(i,r){if("executing"===o)throw new Error("Generator is already running");if("completed"===o){if("throw"===i)throw r;return{value:void 0,done:!0}}for(n.method=i,n.arg=r;;){var a=n.delegate;if(a){var l=x(a,n);if(l){if(l===h)continue;return l}}if("next"===n.method)n.sent=n._sent=n.arg;else if("throw"===n.method){if("suspendedStart"===o)throw o="completed",n.arg;n.dispatchException(n.arg)}else"return"===n.method&&n.abrupt("return",n.arg);o="executing";var s=p(e,t,n);if("normal"===s.type){if(o=n.done?"completed":"suspendedYield",s.arg===h)continue;return{value:s.arg,done:n.done}}"throw"===s.type&&(o="completed",n.method="throw",n.arg=s.arg)}}}function x(e,t){var n=t.method,o=e.iterator[n];if(void 0===o)return t.delegate=null,"throw"===n&&e.iterator.return&&(t.method="return",t.arg=void 0,x(e,t),"throw"===t.method)||"return"!==n&&(t.method="throw",t.arg=new TypeError("The iterator does not provide a '"+n+"' method")),h;var i=p(o,e.iterator,t.arg);if("throw"===i.type)return t.method="throw",t.arg=i.arg,t.delegate=null,h;var r=i.arg;return r?r.done?(t[e.resultName]=r.value,t.next=e.nextLoc,"return"!==t.method&&(t.method="next",t.arg=void 0),t.delegate=null,h):r:(t.method="throw",t.arg=new TypeError("iterator result is not an object"),t.delegate=null,h)}function k(e){var t={tryLoc:e[0]};1 in e&&(t.catchLoc=e[1]),2 in e&&(t.finallyLoc=e[2],t.afterLoc=e[3]),this.tryEntries.push(t)}function T(e){var t=e.completion||{};t.type="normal",delete t.arg,e.completion=t}function F(e){this.tryEntries=[{tryLoc:"root"}],e.forEach(k,this),this.reset(!0)}function _(e){if(e){var t=e[l];if(t)return t.call(e);if("function"==typeof e.next)return e;if(!isNaN(e.length)){var o=-1,i=function t(){for(;++o<e.length;)if(n.call(e,o))return t.value=e[o],t.done=!1,t;return t.value=void 0,t.done=!0,t};return i.next=i}}return{next:O}}function O(){return{value:void 0,done:!0}}return f.prototype=v,o(b,"constructor",{value:v,configurable:!0}),o(v,"constructor",{value:f,configurable:!0}),f.displayName=d(v,c,"GeneratorFunction"),e.isGeneratorFunction=function(e){var t="function"==typeof e&&e.constructor;return!!t&&(t===f||"GeneratorFunction"===(t.displayName||t.name))},e.mark=function(e){return Object.setPrototypeOf?Object.setPrototypeOf(e,v):(e.__proto__=v,d(e,c,"GeneratorFunction")),e.prototype=Object.create(b),e},e.awrap=function(e){return{__await:e}},D(w.prototype),d(w.prototype,s,(function(){return this})),e.AsyncIterator=w,e.async=function(t,n,o,i,r){void 0===r&&(r=Promise);var a=new w(u(t,n,o,i),r);return e.isGeneratorFunction(n)?a:a.next().then((function(e){return e.done?e.value:a.next()}))},D(b),d(b,c,"Generator"),d(b,l,(function(){return this})),d(b,"toString",(function(){return"[object Generator]"})),e.keys=function(e){var t=Object(e),n=[];for(var o in t)n.push(o);return n.reverse(),function e(){for(;n.length;){var o=n.pop();if(o in t)return e.value=o,e.done=!1,e}return e.done=!0,e}},e.values=_,F.prototype={constructor:F,reset:function(e){if(this.prev=0,this.next=0,this.sent=this._sent=void 0,this.done=!1,this.delegate=null,this.method="next",this.arg=void 0,this.tryEntries.forEach(T),!e)for(var t in this)"t"===t.charAt(0)&&n.call(this,t)&&!isNaN(+t.slice(1))&&(this[t]=void 0)},stop:function(){this.done=!0;var e=this.tryEntries[0].completion;if("throw"===e.type)throw e.arg;return this.rval},dispatchException:function(e){if(this.done)throw e;var t=this;function o(n,o){return a.type="throw",a.arg=e,t.next=n,o&&(t.method="next",t.arg=void 0),!!o}for(var i=this.tryEntries.length-1;i>=0;--i){var r=this.tryEntries[i],a=r.completion;if("root"===r.tryLoc)return o("end");if(r.tryLoc<=this.prev){var l=n.call(r,"catchLoc"),s=n.call(r,"finallyLoc");if(l&&s){if(this.prev<r.catchLoc)return o(r.catchLoc,!0);if(this.prev<r.finallyLoc)return o(r.finallyLoc)}else if(l){if(this.prev<r.catchLoc)return o(r.catchLoc,!0)}else{if(!s)throw new Error("try statement without catch or finally");if(this.prev<r.finallyLoc)return o(r.finallyLoc)}}}},abrupt:function(e,t){for(var o=this.tryEntries.length-1;o>=0;--o){var i=this.tryEntries[o];if(i.tryLoc<=this.prev&&n.call(i,"finallyLoc")&&this.prev<i.finallyLoc){var r=i;break}}r&&("break"===e||"continue"===e)&&r.tryLoc<=t&&t<=r.finallyLoc&&(r=null);var a=r?r.completion:{};return a.type=e,a.arg=t,r?(this.method="next",this.next=r.finallyLoc,h):this.complete(a)},complete:function(e,t){if("throw"===e.type)throw e.arg;return"break"===e.type||"continue"===e.type?this.next=e.arg:"return"===e.type?(this.rval=this.arg=e.arg,this.method="return",this.next="end"):"normal"===e.type&&t&&(this.next=t),h},finish:function(e){for(var t=this.tryEntries.length-1;t>=0;--t){var n=this.tryEntries[t];if(n.finallyLoc===e)return this.complete(n.completion,n.afterLoc),T(n),h}},catch:function(e){for(var t=this.tryEntries.length-1;t>=0;--t){var n=this.tryEntries[t];if(n.tryLoc===e){var o=n.completion;if("throw"===o.type){var i=o.arg;T(n)}return i}}throw new Error("illegal catch attempt")},delegateYield:function(e,t,n){return this.delegate={iterator:_(e),resultName:t,nextLoc:n},"next"===this.method&&(this.arg=void 0),h}},e}function l(e,t,n,o,i,r,a){try{var l=e[r](a),s=l.value}catch(e){return void n(e)}l.done?t(s):Promise.resolve(s).then(o,i)}const s={name:"history-dialog",data:function(){return{divSaveCancelID:"leaf-vue-dialog-cancel-save",page:1,historyType:this.dialogData.historyType,historyID:this.dialogData.historyID,ajaxRes:""}},inject:["dialogData"],mounted:function(){document.getElementById(this.divSaveCancelID).style.display="none",this.getPage()},computed:{showNext:function(){return-1===this.ajaxRes.indexOf("No history to show")},showPrev:function(){return this.page>1}},methods:{getNext:function(){this.page++,this.getPage()},getPrev:function(){this.page--,this.getPage()},getPage:function(){var e,t=this;return(e=a().mark((function e(){var n,o;return a().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.prev=0,n="ajaxIndex.php?a=gethistory&type=".concat(t.historyType,"&gethistoryslice=1&page=").concat(t.page,"&id=").concat(t.historyID),e.next=4,fetch(n);case 4:return o=e.sent,e.next=7,o.text();case 7:t.ajaxRes=e.sent,e.next=13;break;case 10:e.prev=10,e.t0=e.catch(0),console.log("error getting history",e.t0);case 13:case"end":return e.stop()}}),e,null,[[0,10]])})),function(){var t=this,n=arguments;return new Promise((function(o,i){var r=e.apply(t,n);function a(e){l(r,o,i,a,s,"next",e)}function s(e){l(r,o,i,a,s,"throw",e)}a(void 0)}))})()}},template:'<div>\n        <div id="history-slice" v-html="ajaxRes" style="min-height: 100px; min-width: 300px;"></div>\n        <div id="history-page-buttons" style="display: flex; justify-content: space-between;">\n            <button v-if="showPrev" id="prev" type="button"\n                class="btn-general"\n                style="width: 125px;"\n                @click="getPrev" title="get previous page">\n                Previous page\n            </button>\n            <button v-if="showNext" id="next" type="button"\n                class="btn-general"\n                style="width: 125px; margin-left: auto;"\n                @click="getNext" title="get next page">\n                Next page\n            </button>\n        </div>\n    </div>'},c={name:"indicator-editing-dialog",data:function(){var e,t,n,o,i,r,a,l,s,c,d,u,p;return{initialFocusElID:"name",showAdditionalOptions:!1,showDetailedFormatInfo:!1,formID:this.focusedFormRecord.categoryID,formats:{text:"Single line text",textarea:"Multi-line text",grid:"Grid (Table with rows and columns)",number:"Numeric",currency:"Currency",date:"Date",radio:"Radio (single select, multiple options)",checkbox:"Checkbox (A single checkbox)",checkboxes:"Checkboxes (Multiple Checkboxes)",multiselect:"Multi-Select Dropdown",dropdown:"Dropdown Menu (single select, multiple options)",fileupload:"File Attachment",image:"Image Attachment",orgchart_group:"Orgchart Group",orgchart_position:"Orgchart Position",orgchart_employee:"Orgchart Employee",raw_data:"Raw Data (for programmers)"},formatInfo:{text:"A single input for short text entries.",textarea:"A large area for multiple lines of text and limited text formatting options.",grid:"A table format with rows and columns.  Additional rows can be added, removed, or moved during data entry.",number:"A single input used to store numeric data.  Useful for information that will be used for calculations.",currency:"A single input used to store currency values in dollars to two decimal places.",date:"Embeds a datepicker.",radio:"Radio buttons allow a single selection from multiple options.  All of the question's options will display.",checkbox:"A single checkbox is typically used for confirmation. The checkbox label text can be further customized.",checkboxes:"Checkboxes will allow the selection of multiple options.  All of the question's options will display.",multiselect:"Multi-Select format will allow the selection of several options from a selection box with a dropdown.  Only selected items will display.",dropdown:"A dropdown menu will allow one selection from multiple options.  Only the selected option will display.",fileupload:"File Attachment",image:"Similar to file upload, but only image format files will be shown during selection",orgchart_group:"Orgchart Group format is used to select a specific LEAF User Access Group",orgchart_position:"Orgchart Position format is used to select a specific LEAF user by their position in the orgchart",orgchart_employee:"Orgchart Employee format is used to select a specific LEAF user from the orgchart",raw_data:"Raw Data is associated with Advanced Options, which can be used by programmers to run custom code during form data entry or review"},listForParentIDs:[],isLoadingParentIDs:!0,multianswerFormats:["checkboxes","radio","multiselect","dropdown"],newIndicatorID:null,name:(null===(e=this.indicatorRecord[this.currIndicatorID])||void 0===e?void 0:e.name)||"",options:(null===(t=this.indicatorRecord[this.currIndicatorID])||void 0===t?void 0:t.options)||[],format:(null===(n=this.indicatorRecord[this.currIndicatorID])||void 0===n?void 0:n.format)||"",description:(null===(o=this.indicatorRecord[this.currIndicatorID])||void 0===o?void 0:o.description)||"",defaultValue:this.decodeAndStripHTML((null===(i=this.indicatorRecord[this.currIndicatorID])||void 0===i?void 0:i.default)||""),required:1===parseInt(null===(r=this.indicatorRecord[this.currIndicatorID])||void 0===r?void 0:r.required)||!1,is_sensitive:1===parseInt(null===(a=this.indicatorRecord[this.currIndicatorID])||void 0===a?void 0:a.is_sensitive)||!1,parentID:null!==(l=this.indicatorRecord[this.currIndicatorID])&&void 0!==l&&l.parentID?parseInt(this.indicatorRecord[this.currIndicatorID].parentID):this.newIndicatorParentID,sort:void 0!==(null===(s=this.indicatorRecord[this.currIndicatorID])||void 0===s?void 0:s.sort)?parseInt(this.indicatorRecord[this.currIndicatorID].sort):null,singleOptionValue:"checkbox"===(null===(c=this.indicatorRecord[this.currIndicatorID])||void 0===c?void 0:c.format)?this.indicatorRecord[this.currIndicatorID].options:"",multiOptionValue:["checkboxes","radio","multiselect","dropdown"].includes(null===(d=this.indicatorRecord[this.currIndicatorID])||void 0===d?void 0:d.format)?(this.indicatorRecord[this.currIndicatorID].options||[]).join("\n"):"",gridBodyElement:"div#container_indicatorGrid > div",gridJSON:"grid"===(null===(u=this.indicatorRecord[this.currIndicatorID])||void 0===u?void 0:u.format)?JSON.parse(null===(p=this.indicatorRecord[this.currIndicatorID])||void 0===p?void 0:p.options[0]):[],archived:!1,deleted:!1}},inject:["APIroot","CSRFToken","advancedMode","setDialogSaveFunction","initializeOrgSelector","isEditingModal","closeFormDialog","currIndicatorID","indicatorRecord","focusedFormRecord","focusedFormTree","selectedNodeIndicatorID","selectNewCategory","newIndicatorParentID","truncateText","decodeAndStripHTML","orgchartFormats"],created:function(){this.setDialogSaveFunction(this.onSave)},provide:function(){var e=this;return{gridJSON:(0,o.Fl)((function(){return e.gridJSON})),updateGridJSON:this.updateGridJSON}},components:{GridCell:{data:function(){var e,t,n,o;return{name:(null===(e=this.cell)||void 0===e?void 0:e.name)||"No title",id:(null===(t=this.cell)||void 0===t?void 0:t.id)||this.makeColumnID(),gridType:(null===(n=this.cell)||void 0===n?void 0:n.type)||"text",textareaDropOptions:null!==(o=this.cell)&&void 0!==o&&o.options?this.cell.options.join("\n"):[]}},props:{cell:Object,column:Number},inject:["libsPath","gridJSON","updateGridJSON"],mounted:function(){0===this.gridJSON.length&&this.updateGridJSON()},computed:{gridJSONlength:function(){return this.gridJSON.length}},methods:{makeColumnID:function(){return"col_"+(65536*(1+Math.random())|0).toString(16).substring(1)},deleteColumn:function(){var e,t=(arguments.length>0&&void 0!==arguments[0]?arguments[0]:{}).currentTarget.closest("div.cell"),n=document.getElementById("gridcell_col_parent"),o=Array.from(n.querySelectorAll("div.cell")),i=o.indexOf(t)+1,r=o.length;2===r?(t.remove(),r--,e=o[0]):(e=null===t.querySelector('[title="Move column right"]')?t.previousElementSibling.querySelector('[title="Delete column"]'):t.nextElementSibling.querySelector('[title="Delete column"]'),t.remove(),r--),document.getElementById("tableStatus").setAttribute("aria-label","column ".concat(i," removed, ").concat(r," total.")),e.focus(),this.updateGridJSON()},moveRight:function(){var e=(arguments.length>0&&void 0!==arguments[0]?arguments[0]:{}).currentTarget.closest("div.cell"),t=e.nextElementSibling,n=e.nextElementSibling.querySelector('[title="Move column right"]');t.after(e),setTimeout((function(){var t;null===(t=e.querySelector('[title="Move column '.concat(null===n?"left":"right",'"]')))||void 0===t||t.focus()}),0),document.getElementById("tableStatus").setAttribute("aria-label","Moved right to column ".concat(this.column+1," of ").concat(this.gridJSONlength)),this.updateGridJSON()},moveLeft:function(){var e=(arguments.length>0&&void 0!==arguments[0]?arguments[0]:{}).currentTarget.closest("div.cell"),t=e.previousElementSibling,n=e.previousElementSibling.querySelector('[title="Move column left"]');t.before(e),setTimeout((function(){var t;null===(t=e.querySelector('[title="Move column '.concat(null===n?"right":"left",'"]')))||void 0===t||t.focus()}),0),document.getElementById("tableStatus").setAttribute("aria-label","Moved left to column ".concat(this.column-1," of ").concat(this.gridJSONlength)),this.updateGridJSON()}},watch:{gridJSONlength:function(e,t){e>t&&document.getElementById("tableStatus").setAttribute("aria-label","Added a new column, ".concat(this.gridJSONlength," total."))}},template:'<div :id="id" class="cell">\n        <img v-if="column !== 1" role="button" tabindex="0"\n            @click="moveLeft" @keypress.space.enter.prevent="moveLeft"\n            :src="libsPath + \'dynicons/svg/go-previous.svg\'" style="width: 16px; cursor: pointer"\n            title="Move column left" alt="Move column left"  />\n        <img v-if="column !== gridJSON.length" role="button" tabindex="0" \n            @click="moveRight"  @keypress.space.enter.prevent="moveRight" \n            :src="libsPath + \'dynicons/svg/go-next.svg\'" style="width: 16px; cursor: pointer"\n            title="Move column right" alt="Move column right" /><br />\n        <span class="columnNumber">\n            <span>Column #{{column}}:</span>\n            <img v-if="gridJSON.length !== 1" role="button" tabindex="0"\n            @click="deleteColumn" @keypress.space.enter.prevent="deleteColumn"\n            :src="libsPath + \'dynicons/svg/process-stop.svg\'" style="width: 16px; cursor: pointer"\n            title="Delete column" alt="Delete column" />\n        </span>\n        <label :for="\'gridcell_title_\' + id">Title:</label>\n        <input type="text" v-model="name" :id="\'gridcell_title_\' + id" />\n        <label :for="\'gridcell_type_\' + id">Type:</label>\n        <select v-model="gridType" :id="\'gridcell_type_\' + id">\n            <option value="text">Single line input</option>\n            <option value="date">Date</option>\n            <option value="dropdown">Drop Down</option>\n            <option value="textarea">Multi-line text</option>\n        </select>\n        <span v-if="gridType === \'dropdown\'" class="dropdown">\n            <label for="\'gridcell_options_\' + id">One option per line</label>\n            <textarea :id="\'gridcell_options_\' + id" \n                v-model="textareaDropOptions"\n                aria-label="Dropdown options, one option per line"\n                style="width: 100%; height: 60px; resize:vertical">\n            </textarea>\n        </span>\n    </div>'},IndicatorPrivileges:{data:function(){return{allGroups:[],groupsWithPrivileges:[],group:0,statusMessageError:""}},inject:["APIroot","CSRFToken","currIndicatorID"],mounted:function(){var e=this,t=[$.ajax({type:"GET",url:"".concat(this.APIroot,"system/groups"),success:function(t){e.allGroups=t},error:function(e){return console.log(e)},cache:!1}),$.ajax({type:"GET",url:"".concat(this.APIroot,"formEditor/indicator/").concat(this.currIndicatorID,"/privileges"),success:function(t){e.groupsWithPrivileges=t},error:function(t){console.log(t),e.statusMessageError="There was an error retrieving the Indicator Privileges. Please try again."},cache:!1})];Promise.all(t).then((function(e){})).catch((function(e){return console.log("an error has occurred",e)}))},computed:{availableGroups:function(){var e=[];return this.groupsWithPrivileges.map((function(t){return e.push(parseInt(t.id))})),this.allGroups.filter((function(t){return!e.includes(parseInt(t.groupID))}))}},methods:{removeIndicatorPrivilege:function(){var e=this,t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:0;0!==t&&$.ajax({method:"POST",url:"".concat(this.APIroot,"formEditor/indicator/").concat(this.currIndicatorID,"/privileges/remove"),data:{groupID:t,CSRFToken:this.CSRFToken},success:function(n){e.groupsWithPrivileges=e.groupsWithPrivileges.filter((function(e){return e.id!==t}))},error:function(e){return console.log(e)}})},addIndicatorPrivilege:function(){var e=this;0!==this.group&&$.ajax({method:"POST",url:"".concat(this.APIroot,"formEditor/indicator/").concat(this.currIndicatorID,"/privileges"),data:{groupIDs:[this.group.groupID],CSRFToken:this.CSRFToken},success:function(){e.groupsWithPrivileges.push({id:e.group.groupID,name:e.group.name}),e.group=0},error:function(e){return console.log("an error occurred while setting group access restrictions",e)}})}},template:'<fieldset id="indicatorPrivileges"  style="font-size: 90%; border-radius: 3px;">\n                <legend style="font-family: PublicSans-Bold">Special access restrictions</legend>\n                <div>\n                    Restrictions will limit view access to the request initiator and members of specific groups.<br/> \n                    They will also only allow the specified groups to apply search filters for this field.<br/>\n                    All others will see "[protected data]".\n                </div>\n                <template v-if="statusMessageError === \'\'">\n                    <div v-if="groupsWithPrivileges.length === 0" style="margin:0.5rem 0">No special access restrictions are enabled. Normal access rules apply.</div>\n                    <div v-else style="margin:0.5rem 0">\n                        <div style="color: #a00;">Special access restrictions are enabled.</div>\n                        <ul>\n                            <li v-for="g in groupsWithPrivileges" :key="g.name + g.id">\n                                {{g.name}}\n                                <button type="button" @click="removeIndicatorPrivilege(parseInt(g.id))"\n                                    style="margin-left: 3px; background-color: transparent; color:#a00; padding: 0.1em 0.2em; border: 0; border-radius:3px;" \n                                    :title="\'remove \' + g.name">\n                                    <b>[ Remove ]</b>\n                                </button>\n                            </li>\n                        </ul>\n                    </div>\n                </template>\n                <div v-else>{{ statusMessageError }}</div>\n                <label for="selectIndicatorPrivileges" style="">What group should have access to this field?</label>\n                <div style="display: flex; align-items: center;">\n                    <select id="selectIndicatorPrivileges" v-model="group" style="width:260px;">\n                        <option :value="0">Select a Group</option>\n                        <option v-for="g in availableGroups" :value="g" :key="\'avail_\' + g.groupID">{{g.name}} (id{{g.groupID}})</option>\n                    </select><button type="button" class="btn-general" @click="addIndicatorPrivilege" style="margin-left: 3px; align-self:stretch;">Add group</button>\n                </div>\n            </fieldset>'}},mounted:function(){var e=this;if(!0===this.isEditingModal&&this.getFormParentIDs().then((function(t){e.listForParentIDs=t,e.isLoadingParentIDs=!1})).catch((function(e){return console.log("an error has occurred",e)})),null===this.sort&&(this.sort=this.newQuestionSortValue),XSSHelpers.containsTags(this.name,["<b>","<i>","<u>","<ol>","<li>","<br>","<p>","<td>"])?(document.getElementById("advNameEditor").click(),document.querySelector(".trumbowyg-editor").focus()):document.getElementById(this.initialFocusElID).focus(),this.orgchartFormats.includes(this.format)){var t=this.format.slice(this.format.indexOf("_")+1);this.initializeOrgSelector(t,this.currIndicatorID,"modal_",this.defaultValue,this.setOrgSelDefaultValue);var n=document.querySelector("#modal_orgSel_".concat(this.currIndicatorID," input"));null!==n&&n.addEventListener("change",(function(t){""===t.target.value.trim()&&(e.defaultValue="")}))}},computed:{nameLabelText:function(){return null===this.parentID?"Section Heading":"Field Name"},showFormatSelect:function(){return null!==this.parentID||!0===this.advancedMode||""!==this.format},shortLabelTriggered:function(){return this.name.trim().split(" ").length>3},formatBtnText:function(){return this.showDetailedFormatInfo?"Hide Details":"What's this?"},isMultiOptionQuestion:function(){return this.multianswerFormats.includes(this.format)},fullFormatForPost:function(){var e=this.format;switch(this.format.toLowerCase()){case"grid":this.updateGridJSON(),e=e+"\n"+JSON.stringify(this.gridJSON);break;case"radio":case"checkboxes":case"multiselect":case"dropdown":e=e+"\n"+this.formatIndicatorMultiAnswer();break;case"checkbox":e=e+"\n"+this.singleOptionValue}return e},shortlabelCharsRemaining:function(){return 50-this.description.length},newQuestionSortValue:function(){var e="#drop_area_parent_".concat(this.parentID," > li");return null===this.parentID?this.focusedFormTree.length-128:Array.from(document.querySelectorAll(e)).length-128}},methods:{setOrgSelDefaultValue:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};void 0!==e.selection&&(this.defaultValue=e.selection.toString())},toggleSelection:function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"showDetailedFormatInfo";"boolean"==typeof this[t]&&(this[t]=!this[t])},getFormParentIDs:function(){var e=this;return new Promise((function(t,n){$.ajax({type:"GET",url:"".concat(e.APIroot,"/form/_").concat(e.formID,"/flat"),success:function(e){for(var n in e)e[n][1].name=XSSHelpers.stripAllTags(e[n][1].name);t(e)},error:function(e){return n(e)}})}))},preventSelectionIfFormatNone:function(){""!==this.format||!0!==this.required&&!0!==this.is_sensitive||(this.required=!1,this.is_sensitive=!1,alert('You can\'t mark a field as sensitive or required if the Input Format is "None".'))},onSave:function(){var e=this,t=document.querySelector(".trumbowyg-editor");null!=t&&(this.name=t.innerHTML);var n=[];if(this.isEditingModal){var o,i,r=this.name!==this.indicatorRecord[this.currIndicatorID].name,a=this.description!==this.indicatorRecord[this.currIndicatorID].description,l=null!==(o=this.indicatorRecord[this.currIndicatorID])&&void 0!==o&&o.options?"\n"+(null===(i=this.indicatorRecord[this.currIndicatorID])||void 0===i||null===(i=i.options)||void 0===i?void 0:i.join("\n")):"",s=this.fullFormatForPost!==this.indicatorRecord[this.currIndicatorID].format+l,c=this.decodeAndStripHTML(this.defaultValue)!==this.decodeAndStripHTML(this.indicatorRecord[this.currIndicatorID].default),d=+this.required!==parseInt(this.indicatorRecord[this.currIndicatorID].required),u=+this.is_sensitive!==parseInt(this.indicatorRecord[this.currIndicatorID].is_sensitive),p=this.parentID!==this.indicatorRecord[this.currIndicatorID].parentID,h=!0===this.archived,m=!0===this.deleted;r&&n.push($.ajax({type:"POST",url:"".concat(this.APIroot,"formEditor/").concat(this.currIndicatorID,"/name"),data:{name:this.name,CSRFToken:this.CSRFToken},error:function(e){return console.log("ind name post err",e)}})),a&&n.push($.ajax({type:"POST",url:"".concat(this.APIroot,"formEditor/").concat(this.currIndicatorID,"/description"),data:{description:this.description,CSRFToken:this.CSRFToken},error:function(e){return console.log("ind desciption post err",e)}})),s&&n.push($.ajax({type:"POST",url:"".concat(this.APIroot,"formEditor/").concat(this.currIndicatorID,"/format"),data:{format:this.fullFormatForPost,CSRFToken:this.CSRFToken},success:function(e){"size limit exceeded"===e&&alert("The input format was not saved because it was too long.\nIf you require extended length, please submit a YourIT ticket.")},error:function(e){return console.log("ind format post err",e)}})),c&&n.push($.ajax({type:"POST",url:"".concat(this.APIroot,"formEditor/").concat(this.currIndicatorID,"/default"),data:{default:this.defaultValue,CSRFToken:this.CSRFToken},error:function(e){return console.log("ind default value post err",e)}})),d&&n.push($.ajax({type:"POST",url:"".concat(this.APIroot,"formEditor/").concat(this.currIndicatorID,"/required"),data:{required:this.required?1:0,CSRFToken:this.CSRFToken},error:function(e){return console.log("ind required post err",e)}})),u&&n.push($.ajax({type:"POST",url:"".concat(this.APIroot,"formEditor/").concat(this.currIndicatorID,"/sensitive"),data:{is_sensitive:this.is_sensitive?1:0,CSRFToken:this.CSRFToken},error:function(e){return console.log("ind is_sensitive post err",e)}})),u&&!0===this.is_sensitive&&n.push($.ajax({type:"POST",url:"".concat(this.APIroot,"formEditor/formNeedToKnow"),data:{needToKnow:1,categoryID:this.formID,CSRFToken:this.CSRFToken},success:function(){var e=document.querySelector("select#needToKnow");e.value=1,e.dispatchEvent(new Event("change"))},error:function(e){return console.log("set form need to know post err",e)}})),h&&n.push($.ajax({type:"POST",url:"".concat(this.APIroot,"formEditor/").concat(this.currIndicatorID,"/disabled"),data:{disabled:1,CSRFToken:this.CSRFToken},success:function(){},error:function(e){return console.log("ind disabled (archive) post err",e)}})),m&&n.push($.ajax({type:"POST",url:"".concat(this.APIroot,"formEditor/").concat(this.currIndicatorID,"/disabled"),data:{disabled:2,CSRFToken:this.CSRFToken},success:function(){},error:function(e){return console.log("ind disabled (deletion) post err",e)}})),p&&this.parentID!==this.currIndicatorID&&n.push($.ajax({type:"POST",url:"".concat(this.APIroot,"formEditor/").concat(this.currIndicatorID,"/parentID"),data:{parentID:this.parentID,CSRFToken:this.CSRFToken},error:function(e){return console.log("ind parentID post err",e)}}))}else this.is_sensitive&&n.push($.ajax({type:"POST",url:"".concat(this.APIroot,"formEditor/formNeedToKnow"),data:{needToKnow:1,categoryID:this.formID,CSRFToken:this.CSRFToken},success:function(){var e=document.querySelector("select#needToKnow");e.value=1,e.dispatchEvent(new Event("change"))},error:function(e){return console.log("set form need to know post err",e)}})),n.push($.ajax({type:"POST",url:"".concat(this.APIroot,"formEditor/newIndicator"),data:{name:this.name,format:this.fullFormatForPost,description:this.description,default:this.defaultValue,parentID:this.parentID,categoryID:this.formID,required:this.required?1:0,is_sensitive:this.is_sensitive?1:0,sort:this.newQuestionSortValue,CSRFToken:this.CSRFToken},success:function(t){e.newIndicatorID=parseInt(t)},error:function(e){return console.log("error posting new question",e)}}));Promise.all(n).then((function(t){if(t.length>0)if(null!==e.newIndicatorID&&null===e.parentID)e.selectNewCategory(e.formID,e.newIndicatorID);else{var n=e.currIndicatorID!==e.selectedNodeIndicatorID||!0!==e.archived&&!0!==e.deleted?e.selectedNodeIndicatorID:e.parentID;e.selectNewCategory(e.formID,n)}e.closeFormDialog()})).catch((function(e){return console.log("an error has occurred",e)}))},radioBehavior:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t=null==e?void 0:e.target.id;"archived"===t.toLowerCase()&&this.deleted&&(document.getElementById("deleted").checked=!1,this.deleted=!1),"deleted"===t.toLowerCase()&&this.archived&&(document.getElementById("archived").checked=!1,this.archived=!1)},appAddCell:function(){this.gridJSON.push({})},gridDropdown:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"",t=[];if(null!==e&&0!==e.length){var n=e.split("\n");n=(n=n.map((function(e){return e.trim()}))).map((function(e){return"no"===e?"No":e})),t=Array.from(new Set(n))}return t},updateGridJSON:function(){var e=[],t=this;$(this.gridBodyElement).find("div.cell").each((function(){var n=new Object;"undefined"===$(this).children("input:eq(0)").val()?n.name="No title":n.name=$(this).children("input:eq(0)").val(),n.id=$(this).attr("id"),n.type=$(this).find("select").val(),void 0!==n.type&&null!==n.type?"dropdown"===n.type.toLowerCase()&&(n.options=t.gridDropdown($(this).find("textarea").val().replace(/,/g,""))):n.type="textarea",e.push(n)})),this.gridJSON=e},formatIndicatorMultiAnswer:function(){var e=this.multiOptionValue.split("\n");return e=(e=e.map((function(e){return e.trim()}))).map((function(e){return"no"===e?"No":e})),Array.from(new Set(e)).join("\n")},advNameEditorClick:function(){$("#advNameEditor").css("display","none"),$("#rawNameEditor").css("display","block"),$("#name").trumbowyg({resetCss:!0,btns:["formatting","bold","italic","underline","|","unorderedList","orderedList","|","link","|","foreColor","|","justifyLeft","justifyCenter","justifyRight"]}),$(".trumbowyg-box").css({"min-height":"130px","max-width":"700px",margin:"0.5rem 0"}),$(".trumbowyg-editor, .trumbowyg-texteditor").css({"min-height":"100px",height:"100px",padding:"1rem"})},rawNameEditorClick:function(){$("#advNameEditor").css("display","block"),$("#rawNameEditor").css("display","none"),$("#name").trumbowyg("destroy")}},watch:{format:function(e,t){var n=this;if(this.defaultValue="",this.orgchartFormats.includes(e)){var o=e.slice(e.indexOf("_")+1);this.initializeOrgSelector(o,this.currIndicatorID,"modal_","",this.setOrgSelDefaultValue);var i=document.querySelector("#modal_orgSel_".concat(this.currIndicatorID," input"));null!==i&&i.addEventListener("change",(function(e){""===e.target.value.trim()&&(n.defaultValue="")}))}}},template:'<div id="indicator-editing-dialog-content">\n        <div>\n            <label for="name">{{ nameLabelText }}</label>\n            <textarea id="name" v-model="name" rows="4">{{name}}</textarea>\n            <div style="display:flex; justify-content: space-between;">\n                <button type="button" class="btn-general" id="rawNameEditor"\n                    title="use basic text editor"\n                    @click="rawNameEditorClick" style="display: none; width:135px">\n                    Show formatted code\n                </button>\n                <button type="button" class="btn-general" id="advNameEditor"\n                    title="use advanced text editor" style="width:135px"\n                    @click="advNameEditorClick">\n                    Advanced Formatting\n                </button>\n            </div>\n        </div>\n        <div v-show="description !== \'\' || shortLabelTriggered">\n            <div style="display: flex; justify-content: space-between; align-items: center;">\n                <label for="description">What would you call this field in a spreadsheet?</label>\n                <div>{{shortlabelCharsRemaining}}</div>\n            </div>\n            <input type="text" id="description" v-model="description" maxlength="50" />\n        </div>\n        <div>\n            <div v-if="showFormatSelect">\n                <label for="indicatorType">Input Format</label>\n                <div style="display:flex;">\n                    <select id="indicatorType" title="Select a Format" v-model="format" @change="preventSelectionIfFormatNone">\n                        <option value="">None</option>\n                        <option v-for="kv in Object.entries(formats)" \n                        :value="kv[0]" :selected="kv[0] === format" :key="kv[0]">{{ kv[1] }}</option>\n                    </select>\n                    <button type="button" id="editing-format-assist" class="btn-general"\n                        @click="toggleSelection($event, \'showDetailedFormatInfo\')"\n                        title="select for assistance with format choices" style=" align-self:stretch; margin-left: 3px;">\n                        {{ formatBtnText }}\n                    </button>\n                </div>\n                <div v-show="showDetailedFormatInfo" id="formatDetails" style="max-width:500px; font-size: 0.9rem; margin-bottom: 1rem;">\n                    <p><b>Format Information</b></p>\n                    {{ format !== \'\' ? formatInfo[format] : \'No format.  Indicators without a format are often used to provide additional information for the user.  They are often used for form section headers.\' }}\n                </div>\n            </div>\n            <div v-show="format === \'checkbox\'" id="container_indicatorSingleAnswer" style="margin-top:0.5rem;">\n                <label for="indicatorSingleAnswer">Text for checkbox:</label>\n                <input type="text" id="indicatorSingleAnswer" v-model="singleOptionValue"/>\n            </div>\n            <div v-show="isMultiOptionQuestion" id="container_indicatorMultiAnswer" style="margin-top:0.5rem;">\n                <label for="indicatorMultiAnswer">One option per line:</label>\n                <textarea id="indicatorMultiAnswer" v-model="multiOptionValue" style="height: 130px;">\n                </textarea>\n            </div>\n            <div v-if="format === \'grid\'" id="container_indicatorGrid">\n                <span id="tableStatus" style="position: absolute; color: transparent" \n                    aria-atomic="true" aria-live="polite"  role="status"></span>\n                <br/>\n                <div style="display:flex; align-items: center;">\n                    <button type="button" class="btn-general" id="addColumnBtn" title="Add column" alt="Add column" aria-label="grid input add column" \n                        @click="appAddCell">\n                        + Add column\n                    </button>&nbsp;Columns ({{gridJSON.length}}):\n                </div>\n                <div style="overflow-x: scroll;" id="gridcell_col_parent">\n                    <grid-cell v-if="gridJSON.length === 0" :column="1" :cell="new Object()" key="initial_cell"></grid-cell>\n                    <grid-cell v-for="(c,i) in gridJSON" :column="i+1" :cell="c" :key="c.id"></grid-cell>\n                </div>\n            </div>\n            <div v-show="format !== \'\' && format !== \'raw_data\'" style="margin-top:0.75rem;">\n                <label for="defaultValue">Default Answer</label>\n                <div v-show="orgchartFormats.includes(format)"\n                    :id="\'modal_orgSel_\' + currIndicatorID"\n                    style="min-height:30px" aria-labelledby="defaultValue">\n                </div>\n                <textarea v-show="!orgchartFormats.includes(format)" id="defaultValue" v-model="defaultValue"></textarea>\n            </div>\n        </div>\n        <div v-show="!(!isEditingModal && format === \'\')" id="indicator-editing-attributes">\n            <b>Attributes</b>\n            <div class="attribute-row">\n                <template v-if="format !== \'\'">\n                    <label class="checkable leaf_check" for="required" style="margin-right: 1.5rem;">\n                        <input type="checkbox" id="required" v-model="required" name="required" class="icheck leaf_check"  \n                            @change="preventSelectionIfFormatNone" />\n                        <span class="leaf_check"></span>Required\n                    </label>\n                    <label class="checkable leaf_check" for="sensitive" style="margin-right: 4rem;">\n                        <input type="checkbox" id="sensitive" v-model="is_sensitive" name="sensitive" class="icheck leaf_check"  \n                            @change="preventSelectionIfFormatNone" />\n                        <span class="leaf_check"></span>Sensitive Data (PHI/PII)\n                    </label>\n                </template>\n                <template v-if="isEditingModal">\n                    <label class="checkable leaf_check" for="archived" style="margin-right: 1.5rem;">\n                        <input type="checkbox" id="archived" name="disable_or_delete" class="icheck leaf_check"  \n                            v-model="archived" @change="radioBehavior" />\n                        <span class="leaf_check"></span>Archive\n                    </label>\n                    <label class="checkable leaf_check" for="deleted">\n                        <input type="checkbox" id="deleted" name="disable_or_delete" class="icheck leaf_check"  \n                            v-model="deleted" @change="radioBehavior" />\n                        <span class="leaf_check"></span>Delete\n                    </label>\n                </template>\n            </div>\n            <button v-if="isEditingModal" type="button"\n                class="btn-general" \n                title="edit additional options"\n                @click="toggleSelection($event, \'showAdditionalOptions\')">\n                {{showAdditionalOptions ? \'Hide\' : \'Show\'}} Advanced Attributes\n            </button>\n            <template v-if="showAdditionalOptions">\n                <div class="attribute-row" style="margin-top: 1rem; justify-content: space-between;">\n                    <template v-if="isLoadingParentIDs === false">\n                        <label for="container_parentID" style="margin-right: 1rem;">Parent Question ID\n                            <select v-model.number="parentID" id="container_parentID" style="width:250px; margin-left:3px;">\n                                <option :value="null" :selected="parentID === null">None</option> \n                                <template v-for="kv in Object.entries(listForParentIDs)">\n                                    <option v-if="currIndicatorID !== parseInt(kv[0])" \n                                        :value="kv[0]" \n                                        :key="\'parent_\'+kv[0]">\n                                        {{kv[0]}}: {{truncateText(kv[1][\'1\'].name), 50}}\n                                    </option>\n                                </template>\n                            </select>\n                        </label>\n                    </template>\n                </div>\n                <indicator-privileges></indicator-privileges>\n            </template>\n            <span v-show="archived" id="archived-warning">\n                This field will be archived. &nbsp;It can be<br/>re-enabled by using Restore Fields.\n            </span>\n            <span v-show="deleted" id="deletion-warning">\n                Deleted items can only be re-enabled<br />within 30 days by using Restore Fields.\n            </span>\n        </div>\n    </div>'},d={name:"advanced-options-dialog",data:function(){return{initialFocusElID:"#advanced legend",left:"{{",right:"}}",formID:this.focusedFormRecord.categoryID,codeEditorHtml:{},codeEditorHtmlPrint:{},html:null===this.indicatorRecord[this.currIndicatorID].html?"":this.indicatorRecord[this.currIndicatorID].html,htmlPrint:null===this.indicatorRecord[this.currIndicatorID].htmlPrint?"":this.indicatorRecord[this.currIndicatorID].htmlPrint}},inject:["APIroot","libsPath","CSRFToken","setDialogSaveFunction","closeFormDialog","focusedFormRecord","currIndicatorID","indicatorRecord","selectNewCategory","hasDevConsoleAccess","selectedNodeIndicatorID"],created:function(){this.setDialogSaveFunction(this.onSave)},mounted:function(){var e;null===(e=document.querySelector(this.initialFocusElID))||void 0===e||e.focus(),1==+this.hasDevConsoleAccess&&this.setupAdvancedOptions()},methods:{setupAdvancedOptions:function(){var e=this;this.codeEditorHtml=CodeMirror.fromTextArea(document.getElementById("html"),{mode:"htmlmixed",lineNumbers:!0,extraKeys:{F11:function(e){e.setOption("fullScreen",!e.getOption("fullScreen"))},Esc:function(e){e.getOption("fullScreen")&&e.setOption("fullScreen",!1)},"Ctrl-S":function(t){e.saveCodeHTML()}}}),this.codeEditorHtmlPrint=CodeMirror.fromTextArea(document.getElementById("htmlPrint"),{mode:"htmlmixed",lineNumbers:!0,extraKeys:{F11:function(e){e.setOption("fullScreen",!e.getOption("fullScreen"))},Esc:function(e){e.getOption("fullScreen")&&e.setOption("fullScreen",!1)},"Ctrl-S":function(t){e.saveCodeHTMLPrint()}}}),$(".CodeMirror").css("border","1px solid black")},saveCodeHTML:function(){var e=this,t=this.codeEditorHtml.getValue();$.ajax({type:"POST",url:"".concat(this.APIroot,"formEditor/").concat(this.currIndicatorID,"/html"),data:{html:t,CSRFToken:this.CSRFToken},success:function(){e.html=t;var n=(new Date).toLocaleTimeString();document.getElementById("codeSaveStatus_html").innerHTML=", Last saved: "+n,e.selectNewCategory(e.formID,e.selectedNodeIndicatorID)},error:function(e){return console.log(e)}})},saveCodeHTMLPrint:function(){var e=this,t=this.codeEditorHtmlPrint.getValue();$.ajax({type:"POST",url:"".concat(this.APIroot,"formEditor/").concat(this.currIndicatorID,"/htmlPrint"),data:{htmlPrint:t,CSRFToken:this.CSRFToken},success:function(){e.htmlPrint=t;var n=(new Date).toLocaleTimeString();document.getElementById("codeSaveStatus_htmlPrint").innerHTML=", Last saved: "+n,e.selectNewCategory(e.formID,e.selectedNodeIndicatorID)},error:function(e){return console.log(e)}})},onSave:function(){var e=this,t=[],n=this.html!==this.codeEditorHtml.getValue(),o=this.htmlPrint!==this.codeEditorHtmlPrint.getValue();n&&t.push($.ajax({type:"POST",url:"".concat(this.APIroot,"formEditor/").concat(this.currIndicatorID,"/html"),data:{html:this.codeEditorHtml.getValue(),CSRFToken:this.CSRFToken},success:function(){},error:function(e){return console.log("ind html post err",e)}})),o&&t.push($.ajax({type:"POST",url:"".concat(this.APIroot,"formEditor/").concat(this.currIndicatorID,"/htmlPrint"),data:{htmlPrint:this.codeEditorHtmlPrint.getValue(),CSRFToken:this.CSRFToken},success:function(){},error:function(e){return console.log("ind htmlPrint post err",e)}})),Promise.all(t).then((function(t){e.closeFormDialog(),t.length>0&&e.selectNewCategory(e.formID,e.selectedNodeIndicatorID)})).catch((function(e){return console.log("an error has occurred",e)}))}},template:'<div v-if="parseInt(hasDevConsoleAccess) === 1">\n            <fieldset id="advanced" style="min-width: 700px; padding: 0.5em; margin:0"><legend tabindex="0">Template Variables and Controls</legend>\n                <table class="table" style="border-collapse: collapse; margin: 0; width: 100%;">\n                    <tr>\n                        <td><b>{{ left }} iID {{ right }}</b></td>\n                        <td>The indicatorID # of the current data field.</td>\n                        <td><b>Ctrl-S</b></td>\n                        <td>Save the focused section</td>\n                    </tr>\n                    <tr>\n                        <td><b>{{ left }} recordID {{ right }}</b></td>\n                        <td>The record ID # of the current request.</td>\n                        <td><b>F11</b></td>\n                        <td>Toggle Full Screen mode for the focused section</td>\n                    </tr>\n                    <tr>\n                        <td><b>{{ left }} data {{ right }}</b></td>\n                        <td>The contents of the current data field as stored in the database.</td>\n                        <td><b>Esc</b></td>\n                        <td>Escape Full Screen mode</td>\n                    </tr>\n                </table><br />\n                <div style="display:flex; justify-content: space-between; align-items: flex-end;">\n                    html (for pages where the user can edit data): \n                    <button type="button" id="btn_codeSave_html" class="btn-general" @click="saveCodeHTML" title="Save Code">\n                        <img id="saveIndicator" :src="libsPath + \'dynicons/svg/media-floppy.svg\'" style="width:16px" alt="" />\n                        &nbsp;Save Code<span id="codeSaveStatus_html"></span>\n                    </button>\n                </div>\n                <textarea id="html">{{html}}</textarea><br />\n                <div style="display:flex; justify-content: space-between; align-items: flex-end;">\n                    htmlPrint (for pages where the user can only read data): \n                    <button  type="button" id="btn_codeSave_htmlPrint" class="btn-general" @click="saveCodeHTMLPrint" title="Save Code">\n                        <img id="saveIndicator" :src="libsPath + \'dynicons/svg/media-floppy.svg\'" style="width:16px" alt="" />\n                        &nbsp;Save Code<span id="codeSaveStatus_htmlPrint"></span>\n                    </button>\n                </div>\n                <textarea id="htmlPrint">{{htmlPrint}}</textarea>\n            </fieldset>\n        </div>\n        <div v-else style="height:50px; margin: 1em 0;">\n            Notice: Please go to <b>Admin Panel → LEAF Programmer</b> to ensure continued access to this area.\n        </div>'};var u=n(491),p=n(169);function h(e){return h="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},h(e)}function m(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function f(e,t,n){return(t=function(e){var t=function(e,t){if("object"!==h(e)||null===e)return e;var n=e[Symbol.toPrimitive];if(void 0!==n){var o=n.call(e,"string");if("object"!==h(o))return o;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(e);return"symbol"===h(t)?t:String(t)}(t))in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}const v={name:"staple-form-dialog",data:function(){return{catIDtoStaple:""}},inject:["APIroot","CSRFToken","setDialogSaveFunction","truncateText","decodeAndStripHTML","categories","focusedFormRecord","closeFormDialog","updateStapledFormsInfo"],created:function(){this.setDialogSaveFunction(this.onSave)},mounted:function(){if(this.isSubform&&this.closeFormDialog(),this.mergeableForms.length>0){var e=document.getElementById("select-form-to-staple");null!==e&&e.focus()}},computed:{isSubform:function(){var e;return""!==(null===(e=this.focusedFormRecord)||void 0===e?void 0:e.parentID)},formID:function(){var e;return(null===(e=this.focusedFormRecord)||void 0===e?void 0:e.categoryID)||""},currentStapleIDs:function(){var e;return(null===(e=this.categories[this.formID])||void 0===e?void 0:e.stapledFormIDs)||[]},mergeableForms:function(){var e=this,t=[],n=function(){var n=parseInt(e.categories[o].workflowID),i=e.categories[o].categoryID,r=e.categories[o].parentID,a=e.currentStapleIDs.every((function(e){return e!==i}));0===n&&""===r&&i!==e.formID&&a&&t.push(function(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?m(Object(n),!0).forEach((function(t){f(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):m(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}({},e.categories[o]))};for(var o in this.categories)n();return t}},methods:{unmergeForm:function(){var e=this,t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"";$.ajax({type:"DELETE",url:"".concat(this.APIroot,"formEditor/_").concat(this.formID,"/stapled/_").concat(t,"?")+$.param({CSRFToken:this.CSRFToken}),success:function(n){e.updateStapledFormsInfo(t,!0)},error:function(e){return console.log(e)}})},onSave:function(){var e=this;""!==this.catIDtoStaple&&$.ajax({type:"POST",url:"".concat(this.APIroot,"formEditor/_").concat(this.formID,"/stapled"),data:{CSRFToken:this.CSRFToken,stapledCategoryID:this.catIDtoStaple},success:function(t){1!=+t?alert(t):(e.updateStapledFormsInfo(e.catIDtoStaple),e.catIDtoStaple="")},error:function(e){return console.log(e)},cache:!1})}},template:'<div>\n        <p>Stapled forms will show up on the same page as the primary form.</p>\n        <p>The order of the forms will be determined by the forms\' assigned sort values.</p>\n        <div id="mergedForms" style="margin-top: 1rem;">\n            <ul style="list-style-type:none; padding: 0; min-height: 50px;">\n                <li v-for="id in currentStapleIDs" :key="\'staple_list_\' + id">\n                    {{truncateText(decodeAndStripHTML(categories[id]?.categoryName || \'Untitled\')) }}\n                    <button type="button"\n                        style="margin-left: 0.25em; background-color: transparent; color:#a00; padding: 0.1em 0.2em; border: 0; border-radius:3px;" \n                        @click="unmergeForm(id)" :title="\'remove \' + categories[id]?.categoryName || \'Untitled\'">\n                        <b>[ Remove ]</b>\n                    </button>\n                </li>\n            </ul>\n        </div><hr/>\n        <div style="min-height: 50px; margin: 1em 0;">\n            <template v-if="mergeableForms.length > 0">\n                <label for="select-form-to-staple" style="padding-right: 0.3em;">Select a form to merge</label>\n                <select v-model="catIDtoStaple" title="select a form to merge" id="select-form-to-staple" style="width:100%;">\n                    <option value="">Select a Form</option>\n                    <option v-for="f in mergeableForms" \n                        :value="f.categoryID" \n                        :key="\'merge_\'+f.categoryID">{{truncateText(decodeAndStripHTML(f.categoryName)) || \'Untitled\'}}</option>\n                </select>\n            </template>\n            <div v-else>There are no available forms to merge</div>\n        </div>\n    </div>'},g={name:"edit-collaborators-dialog",data:function(){return{formID:this.focusedFormRecord.categoryID,group:"",allGroups:[],collaborators:[]}},inject:["APIroot","CSRFToken","setDialogSaveFunction","categories","focusedFormRecord","closeFormDialog"],created:function(){this.setDialogSaveFunction(this.onSave)},mounted:function(){var e=this,t=[$.ajax({type:"GET",url:"".concat(this.APIroot,"system/groups"),success:function(t){e.allGroups=t},error:function(e){return console.log(e)},cache:!1}),$.ajax({type:"GET",url:"".concat(this.APIroot,"formEditor/_").concat(this.formID,"/privileges"),success:function(t){e.collaborators=t},error:function(e){return console.log(e)},cache:!1})];Promise.all(t).then((function(){var e=document.getElementById("selectFormCollaborators");null!==e&&e.focus()})).catch((function(e){return console.log("an error has occurred",e)}))},computed:{availableGroups:function(){var e=[];return this.collaborators.map((function(t){return e.push(parseInt(t.groupID))})),this.allGroups.filter((function(t){return!e.includes(parseInt(t.groupID))}))}},methods:{removePermission:function(){var e=this,t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:0;$.ajax({type:"POST",url:"".concat(this.APIroot,"formEditor/_").concat(this.formID,"/privileges"),data:{CSRFToken:this.CSRFToken,groupID:t,read:0,write:0},success:function(n){e.collaborators=e.collaborators.filter((function(e){return parseInt(e.groupID)!==t}))},error:function(e){return console.log(e)}})},formNameStripped:function(){var e=this.categories[this.formID].categoryName;return XSSHelpers.stripAllTags(e)||"Untitled"},onSave:function(){var e=this;""!==this.group&&$.ajax({type:"POST",url:"".concat(this.APIroot,"formEditor/_").concat(this.formID,"/privileges"),data:{CSRFToken:this.CSRFToken,groupID:parseInt(this.group.groupID),read:1,write:1},success:function(t){void 0===e.collaborators.find((function(t){return parseInt(t.groupID)===parseInt(e.group.groupID)}))&&(e.collaborators.push({groupID:e.group.groupID,name:e.group.name}),e.group="")},error:function(e){return console.log(e)},cache:!1})}},template:'<div>\n        <h3>{{formNameStripped()}}</h3>\n        <p>Collaborators have access to fill out data fields at any time in the workflow.</p>\n        <p>This is typically used to give groups access to fill out internal-use fields.</p>\n        <div id="formPrivs" style="margin-top: 1rem;">\n            <template v-if="collaborators.length > 0">\n                <ul style="list-style-type:none; padding: 0; min-height: 30px;">\n                    <li v-for="c in collaborators" :key="c.name + c.groupID">\n                        {{c.name}}\n                        <button type="button"\n                            style="margin-left: 0.25em; background-color: transparent; color:#a00; padding: 0.1em 0.2em; border: 0; border-radius:3px;" \n                            @click="removePermission(parseInt(c.groupID))" :title="\'remove \' + c.name">\n                            <b>[ Remove ]</b>\n                        </button>\n                    </li>\n                </ul>\n            </template>\n        </div><hr/>\n        <div style="min-height: 50px; margin: 1em 0;">\n            <template v-if="availableGroups.length > 0">\n                <label for="selectFormCollaborators" style="display:block; margin-bottom:2px;">Select a group to add</label>\n                <select v-model="group" id="selectFormCollaborators" style="width:100%;">\n                    <option value="">Select a Group</option>\n                    <option v-for="g in availableGroups" :value="g" :key="\'collab_group_\' + g.groupID">{{g.name}}</option>\n                </select>\n            </template>\n            <div v-else>There are no available groups to add</div>\n        </div>\n    </div>'},I={name:"confirm-delete-dialog",inject:["APIroot","CSRFToken","setDialogSaveFunction","focusedFormRecord","selectNewCategory","removeCategory","closeFormDialog"],created:function(){this.setDialogSaveFunction(this.onSave)},computed:{formName:function(){return XSSHelpers.stripAllTags(this.focusedFormRecord.categoryName)},formDescription:function(){return XSSHelpers.stripAllTags(this.focusedFormRecord.categoryDescription)},currentStapleIDs:function(){var e;return(null===(e=this.focusedFormRecord)||void 0===e?void 0:e.stapledFormIDs)||[]}},methods:{onSave:function(){var e=this;if(0===this.currentStapleIDs.length){var t=this.focusedFormRecord.categoryID,n=this.focusedFormRecord.parentID;$.ajax({type:"DELETE",url:"".concat(this.APIroot,"formStack/_").concat(t,"?")+$.param({CSRFToken:this.CSRFToken}),success:function(o){1==+o?(e.selectNewCategory(n,null,!0),e.removeCategory(t),e.closeFormDialog()):alert(o)},error:function(e){return console.log("an error has occurred",e)}})}else alert("Please remove all stapled forms before deleting.")}},template:'<div>\n        <div>Are you sure you want to delete this form?</div>\n        <div style="margin: 1em 0;"><b>{{formName}}</b></div>\n        <div style="min-width:300px; max-width: 500px; min-height: 50px; margin-bottom: 1rem;">{{formDescription}}</div>\n        <div v-if="currentStapleIDs.length > 0">⚠️ This form still has stapled forms attached</div>\n    </div>'};function y(e){return y="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},y(e)}function b(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function D(e,t,n){return(t=function(e){var t=function(e,t){if("object"!==y(e)||null===e)return e;var n=e[Symbol.toPrimitive];if(void 0!==n){var o=n.call(e,"string");if("object"!==y(o))return o;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(e);return"symbol"===y(t)?t:String(t)}(t))in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function w(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,o=new Array(t);n<t;n++)o[n]=e[n];return o}const S={name:"conditions-editor-dialog",data:function(){return{formID:this.focusedFormRecord.categoryID,childIndID:parseInt(this.currIndicatorID),indicators:[],appIsLoadingIndicators:!0,parentIndID:0,selectedOperator:"",selectedParentValue:"",selectedOutcome:"",selectedChildValue:"",showRemoveModal:!1,showConditionEditor:!1,selectedConditionJSON:"",enabledParentFormats:["dropdown","multiselect","radio","checkboxes"],multiOptionFormats:["multiselect","checkboxes"],orgchartFormats:["orgchart_employee","orgchart_group","orgchart_position"],orgchartSelectData:{},crosswalkFile:"",crosswalkHasHeader:!1,level2IndID:null,noPrefillFormats:["","fileupload","image"]}},inject:["APIroot","CSRFToken","setDialogSaveFunction","currIndicatorID","focusedFormRecord","selectedNodeIndicatorID","selectNewCategory","closeFormDialog","truncateText","decodeAndStripHTML","fileManagerTextFiles","initializeOrgSelector"],created:function(){this.setDialogSaveFunction(this.onSave),this.getFormIndicators()},mounted:function(){var e=document.querySelector("#leaf-vue-dialog-cancel-save #button_save");null!==e&&(e.style.display="none")},methods:{getFormIndicators:function(){var e=this;$.ajax({type:"GET",url:"".concat(this.APIroot,"form/indicator/list/unabridged"),success:function(t){var n=t.filter((function(t){return parseInt(t.indicatorID)>0&&0===parseInt(t.isDisabled)&&t.categoryID===e.formID}));e.indicators=n,e.indicators.forEach((function(t){null!==t.parentIndicatorID?e.addHeaderIDs(parseInt(t.parentIndicatorID),t):t.headerIndicatorID=parseInt(t.indicatorID)})),e.appIsLoadingIndicators=!1},error:function(e){return console.log(e)}})},updateSelectedParentIndicator:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:0;this.parentIndID=e,this.selectedParentValueOptions.includes(this.selectedParentValue)||(this.selectedParentValue=""),this.updateChoicesJS()},updateSelectedOutcome:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"";this.selectedOutcome=e.toLowerCase(),this.selectedChildValue="",this.crosswalkFile="",this.crosswalkHasHeader=!1,this.level2IndID=null,"pre-fill"===this.selectedOutcome&&(this.updateChoicesJS(),this.addOrgSelector())},updateSelectedOptionValue:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"parent",n="parent"===(t=t.toLowerCase())?this.parentFormat:this.childFormat,o="";this.multiOptionFormats.includes(n)?(Array.from(e.selectedOptions).forEach((function(e){o+=e.label.trim()+"\n"})),o=o.trim()):o=e.value,"parent"===t?this.selectedParentValue=XSSHelpers.stripAllTags(o):"child"===t&&(this.selectedChildValue=XSSHelpers.stripAllTags(o))},addHeaderIDs:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:0,t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},n=this.indicators.find((function(t){return parseInt(t.indicatorID)===e}));void 0!==n&&(null===(null==n?void 0:n.parentIndicatorID)?t.headerIndicatorID=e:this.addHeaderIDs(parseInt(n.parentIndicatorID),t))},newCondition:function(){this.selectedConditionJSON="",this.showConditionEditor=!0,this.selectedOperator="",this.parentIndID=0,this.selectedParentValue="",this.selectedOutcome="",this.selectedChildValue=""},postConditions:function(){var e,t=this,n=!(arguments.length>0&&void 0!==arguments[0])||arguments[0];if(this.conditionComplete||!1===n){var o=(e=this.savedConditions,function(e){if(Array.isArray(e))return w(e)}(e)||function(e){if("undefined"!=typeof Symbol&&null!=e[Symbol.iterator]||null!=e["@@iterator"])return Array.from(e)}(e)||function(e,t){if(e){if("string"==typeof e)return w(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);return"Object"===n&&e.constructor&&(n=e.constructor.name),"Map"===n||"Set"===n?Array.from(e):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?w(e,t):void 0}}(e)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()).filter((function(e){return JSON.stringify(e)!==t.selectedConditionJSON}));o.forEach((function(e){e.childIndID=parseInt(e.childIndID),e.parentIndID=parseInt(e.parentIndID),e.selectedChildValue=XSSHelpers.stripAllTags(e.selectedChildValue),e.selectedParentValue=XSSHelpers.stripAllTags(e.selectedParentValue)}));var i=JSON.stringify(this.conditions),r=o.every((function(e){return JSON.stringify(e)!==i}));!0===n&&r&&o.push(this.conditions),$.ajax({type:"POST",url:"".concat(this.APIroot,"formEditor/").concat(this.childIndID,"/conditions"),data:{conditions:o.length>0?JSON.stringify(o):"",CSRFToken:this.CSRFToken},success:function(e){"Invalid Token."!==e?(t.selectNewCategory(t.formID,t.selectedNodeIndicatorID),t.closeFormDialog()):console.log("error adding condition",e)},error:function(e){return console.log(e)}})}},removeCondition:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t=e.confirmDelete,n=void 0!==t&&t,o=e.condition,i=void 0===o?{}:o;!0===n?this.postConditions(!1):(this.selectConditionFromList(i),this.showRemoveModal=!0)},selectConditionFromList:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};this.selectedConditionJSON=JSON.stringify(e),this.parentIndID=parseInt((null==e?void 0:e.parentIndID)||0),this.selectedOperator=(null==e?void 0:e.selectedOp)||"",this.selectedOutcome=((null==e?void 0:e.selectedOutcome)||"").toLowerCase(),this.selectedParentValue=(null==e?void 0:e.selectedParentValue)||"",this.selectedChildValue=(null==e?void 0:e.selectedChildValue)||"",this.crosswalkFile=(null==e?void 0:e.crosswalkFile)||"",this.crosswalkHasHeader=(null==e?void 0:e.crosswalkHasHeader)||!1,this.level2IndID=(null==e?void 0:e.level2IndID)||null,this.showConditionEditor=!0,this.updateChoicesJS(),this.addOrgSelector()},getIndicatorName:function(){var e,t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:0,n=(null===(e=this.indicators.find((function(e){return parseInt(e.indicatorID)===t})))||void 0===e?void 0:e.name)||"";return n=this.decodeAndStripHTML(n),this.truncateText(n)},getOperatorText:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t=e.parentFormat.toLowerCase(),n=e.selectedOp;switch(n){case"==":n=this.multiOptionFormats.includes(t)?"includes":"is";break;case"!=":n=this.multiOptionFormats.includes(t)?"does not include":"is not"}return n},isOrphan:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t=parseInt((null==e?void 0:e.parentIndID)||0);return"crosswalk"!==e.selectedOutcome.toLowerCase()&&!this.selectableParents.some((function(e){return parseInt(e.indicatorID)===t}))},listHeaderText:function(){var e="";switch((arguments.length>0&&void 0!==arguments[0]?arguments[0]:"").toLowerCase()){case"show":e="This field will be hidden except:";break;case"hide":e="This field will be shown except:";break;case"prefill":e="This field will be pre-filled:";break;case"crosswalk":e="This field has loaded dropdown(s)"}return e},childFormatChangedSinceSave:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t=((null==e?void 0:e.childFormat)||"").toLowerCase().trim(),n=((null==e?void 0:e.parentFormat)||"").toLowerCase().trim(),o=parseInt((null==e?void 0:e.parentIndID)||0),i=this.selectableParents.find((function(e){return parseInt(e.indicatorID)===o})),r=((null==i?void 0:i.format)||"").toLowerCase().split("\n")[0].trim();return t!==this.childFormat||n!==r},updateChoicesJS:function(){var e=this;setTimeout((function(){var t,n=document.querySelector("#child_choices_wrapper > div.choices"),o=document.getElementById("parent_compValue_entry_multi"),i=document.getElementById("child_prefill_entry_multi"),r=e.conditions.selectedOutcome;if(e.multiOptionFormats.includes(e.parentFormat)&&null!==o&&!0!==(null==o||null===(t=o.choicesjs)||void 0===t?void 0:t.initialised)){var a=e.conditions.selectedParentValue.split("\n")||[];a=a.map((function(t){return e.decodeAndStripHTML(t).trim()}));var l=e.selectedParentValueOptions;l=l.map((function(e){return{value:e.trim(),label:e.trim(),selected:a.includes(e.trim())}}));var s=new Choices(o,{allowHTML:!1,removeItemButton:!0,editItems:!0,choices:l.filter((function(e){return""!==e.value}))});o.choicesjs=s}if("pre-fill"===r&&e.multiOptionFormats.includes(e.childFormat)&&null!==i&&null===n){var c=e.conditions.selectedChildValue.split("\n")||[];c=c.map((function(t){return e.decodeAndStripHTML(t).trim()}));var d=e.selectedChildValueOptions;d=d.map((function(e){return{value:e.trim(),label:e.trim(),selected:c.includes(e.trim())}}));var u=new Choices(i,{allowHTML:!1,removeItemButton:!0,editItems:!0,choices:d.filter((function(e){return""!==e.value}))});i.choicesjs=u}}))},addOrgSelector:function(){var e=this;if("pre-fill"===this.selectedOutcome&&this.orgchartFormats.includes(this.childFormat)){var t=this.childFormat.slice(this.childFormat.indexOf("_")+1);setTimeout((function(){e.initializeOrgSelector(t,e.childIndID,"ifthen_child_",e.selectedChildValue,e.setOrgSelChildValue)}))}},setOrgSelChildValue:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};void 0!==e.selection&&(this.orgchartSelectData=e.selectionData[e.selection],this.selectedChildValue=e.selection.toString())},onSave:function(){this.postConditions(!0)}},computed:{showSetup:function(){return this.showConditionEditor&&this.selectedOutcome&&("crosswalk"===this.selectedOutcome||this.selectableParents.length>0)},noOptions:function(){return!["","crosswalk"].includes(this.selectedOutcome)&&this.selectableParents.length<1},childIndicator:function(){var e=this;return this.indicators.find((function(t){return parseInt(t.indicatorID)===e.childIndID}))},selectedParentIndicator:function(){var e=this,t=this.selectableParents.find((function(t){return parseInt(t.indicatorID)===parseInt(e.parentIndID)}));return void 0===t?{}:function(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?b(Object(n),!0).forEach((function(t){D(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):b(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}({},t)},parentFormat:function(){var e;return((null===(e=this.selectedParentIndicator)||void 0===e?void 0:e.format)||"").toLowerCase().split("\n")[0].trim()},childFormat:function(){var e;return((null===(e=this.childIndicator)||void 0===e?void 0:e.format)||"").toLowerCase().split("\n")[0].trim()},selectableParents:function(){var e,t=this,n=(null===(e=this.childIndicator)||void 0===e?void 0:e.headerIndicatorID)||0;return this.indicators.filter((function(e){var o,i=null===(o=e.format)||void 0===o?void 0:o.split("\n")[0].trim().toLowerCase();return e.headerIndicatorID===n&&parseInt(e.indicatorID)!==parseInt(t.childIndicator.indicatorID)&&t.enabledParentFormats.includes(i)}))},selectedParentOperators:function(){var e=[];switch(this.parentFormat){case"multiselect":case"checkboxes":e=[{val:"==",text:"includes"},{val:"!=",text:"does not include"}];break;default:e=[{val:"==",text:"is"},{val:"!=",text:"is not"}]}return e},crosswalkLevelTwo:function(){var e=this,t=this.childIndicator.headerIndicatorID;return this.indicators.filter((function(n){var o,i=null===(o=n.format)||void 0===o?void 0:o.split("\n")[0].trim().toLowerCase();return n.headerIndicatorID===t&&parseInt(n.indicatorID)!==parseInt(e.childIndicator.indicatorID)&&["dropdown","multiselect"].includes(i)}))},selectedParentValueOptions:function(){var e,t=((null===(e=this.selectedParentIndicator)||void 0===e?void 0:e.format)||"").split("\n"),n=t.length>1?t.slice(1):[];return(n=n.map((function(e){return e.trim()}))).filter((function(e){return""!==e}))},selectedChildValueOptions:function(){var e=this.childIndicator.format.split("\n"),t=e.length>1?e.slice(1):[];return(t=t.map((function(e){return e.trim()}))).filter((function(e){return""!==e}))},canAddCrosswalk:function(){return"dropdown"===this.childFormat||"multiselect"===this.childFormat},childPrefillDisplay:function(){var e,t,n,o,i="";switch(this.childFormat){case"orgchart_employee":i=" '".concat((null===(e=this.orgchartSelectData)||void 0===e?void 0:e.firstName)||""," ").concat((null===(t=this.orgchartSelectData)||void 0===t?void 0:t.lastName)||"","'");break;case"orgchart_group":i=" '".concat((null===(n=this.orgchartSelectData)||void 0===n?void 0:n.groupTitle)||"","'");break;case"orgchart_position":i=" '".concat((null===(o=this.orgchartSelectData)||void 0===o?void 0:o.positionTitle)||"","'");break;case"multiselect":case"checkboxes":var r=this.selectedChildValue.split("\n").length>1?"s":"";i="".concat(r," '").concat(this.decodeAndStripHTML(this.selectedChildValue),"'");break;default:i=" '".concat(this.decodeAndStripHTML(this.selectedChildValue),"'")}return i},conditions:function(){var e,t;return{childIndID:parseInt((null===(e=this.childIndicator)||void 0===e?void 0:e.indicatorID)||0),parentIndID:parseInt((null===(t=this.selectedParentIndicator)||void 0===t?void 0:t.indicatorID)||0),selectedOp:this.selectedOperator,selectedParentValue:XSSHelpers.stripAllTags(this.selectedParentValue),selectedChildValue:XSSHelpers.stripAllTags(this.selectedChildValue),selectedOutcome:this.selectedOutcome.toLowerCase(),crosswalkFile:this.crosswalkFile,crosswalkHasHeader:this.crosswalkHasHeader,level2IndID:this.level2IndID,childFormat:this.childFormat,parentFormat:this.parentFormat}},conditionComplete:function(){var e=this.conditions,t=e.parentIndID,n=e.selectedOp,o=e.selectedParentValue,i=e.selectedChildValue,r=e.selectedOutcome,a=e.crosswalkFile,l=!1;if(!this.showRemoveModal)switch(r){case"pre-fill":l=0!==t&&""!==n&&""!==o&&""!==i;break;case"hide":case"show":l=0!==t&&""!==n&&""!==o;break;case"crosswalk":l=""!==a}var s=document.getElementById("button_save");return null!==s&&(s.style.display=!0===l?"block":"none"),l},savedConditions:function(){return"string"==typeof this.childIndicator.conditions&&"["===this.childIndicator.conditions[0]?JSON.parse(this.childIndicator.conditions):[]},conditionTypes:function(){return{show:this.savedConditions.filter((function(e){return"show"===e.selectedOutcome.toLowerCase()})),hide:this.savedConditions.filter((function(e){return"hide"===e.selectedOutcome.toLowerCase()})),prefill:this.savedConditions.filter((function(e){return"pre-fill"===e.selectedOutcome.toLowerCase()})),crosswalk:this.savedConditions.filter((function(e){return"crosswalk"===e.selectedOutcome.toLowerCase()}))}}},watch:{showRemoveModal:function(e){var t=document.getElementById("leaf-vue-dialog-cancel-save");null!==t&&(t.style.display=!0===e?"none":"flex")}},template:'<div id="condition_editor_center_panel">\n            \x3c!-- LOADING SPINNER --\x3e\n            <div v-if="appIsLoadingIndicators" id="loader_spinner">\n                Loading... <img src="../images/largespinner.gif" alt="loading..." />\n            </div>\n            <div v-else id="condition_editor_inputs">\n                \x3c!-- NOTE: DELETION DIALOG --\x3e\n                <div v-if="showRemoveModal" style="margin-bottom: -0.75rem;">\n                    <div>Choose <b>Delete</b> to confirm removal, or <b>cancel</b> to return</div>\n                    <div style="display: flex; justify-content: space-between; margin-top: 2rem">\n                        <button type="button" class="btn_remove_condition" style="width: 120px;"\n                            @click="removeCondition({confirmDelete: true, condition: {}})">\n                            Delete\n                        </button>\n                        <button type="button" class="btn-general" style="width: 120px;" @click="showRemoveModal=false">\n                            Cancel\n                        </button>\n                    </div>\n                </div>\n                <template v-else>\n                    \x3c!-- NOTE: LISTS BY CONDITION TYPE --\x3e\n                    <div v-if="savedConditions.length > 0" id="savedConditionsLists">\n                        <template v-for="typeVal, typeKey in conditionTypes" :key="typeVal">\n                            <template v-if="typeVal.length > 0">\n                                <p><b>{{ listHeaderText(typeKey) }}</b></p>\n                                <ul style="margin-bottom: 1rem;">\n                                    <li v-for="c in typeVal" :key="c" class="savedConditionsCard">\n                                        <button type="button" @click="selectConditionFromList(c)" class="btnSavedConditions" \n                                            :class="{selectedConditionEdit: JSON.stringify(c) === selectedConditionJSON, isOrphan: isOrphan(c)}">\n                                            <template v-if="!isOrphan(c)">\n                                                <div v-if="c.selectedOutcome.toLowerCase() !== \'crosswalk\'">\n                                                    If \'{{getIndicatorName(parseInt(c.parentIndID))}}\' \n                                                    {{getOperatorText(c)}} <strong>{{ decodeAndStripHTML(c.selectedParentValue) }}</strong> \n                                                    then {{c.selectedOutcome}} this question.\n                                                </div>\n                                                <div v-else>Options for this question will be loaded from <b>{{ c.crosswalkFile }}</b></div>\n                                                <div v-if="childFormatChangedSinceSave(c)" class="changesDetected">\n                                                    Format changes detected.  Please review and save to update this condition.\n                                                </div>\n                                            </template>\n                                            <div v-else>This condition is inactive because indicator {{ c.parentIndID }} has been archived, deleted or is on another page.</div>\n                                        </button>\n                                        <button type="button" style="width: 1.75em;" class="btn_remove_condition"\n                                            @click="removeCondition({confirmDelete: false, condition: c})">X\n                                        </button>\n                                    </li>\n                                </ul>\n                            </template>\n                        </template>\n                    </div>\n                    <button type="button" @click="newCondition" class="btn-confirm new">+ New Condition</button>\n                    \x3c!-- NOTE: OUTCOME SELECTION and PREFILL AREAS --\x3e\n                    <div v-if="showConditionEditor" id="outcome-editor">\n                        <span class="input-info">Select an outcome</span>\n                        <select title="select outcome" @change="updateSelectedOutcome($event.target.value)">\n                            <option v-if="conditions.selectedOutcome === \'\'" value="" selected>Select an outcome</option> \n                            <option value="show" :selected="conditions.selectedOutcome === \'show\'">Hide this question except ...</option>\n                            <option value="hide" :selected="conditions.selectedOutcome === \'hide\'">Show this question except ...</option>\n                            <option v-if="!noPrefillFormats.includes(childFormat)" \n                                value="pre-fill" :selected="conditions.selectedOutcome === \'pre-fill\'">Pre-fill this Question\n                            </option>\n                            <option v-if="canAddCrosswalk"\n                                value="crosswalk" :selected="conditions.selectedOutcome === \'crosswalk\'">Load Dropdown or Crosswalk\n                            </option>\n                        </select>\n                        <template v-if="!noOptions && conditions.selectedOutcome === \'pre-fill\'">\n                            <span class="input-info">Enter a pre-fill value</span>\n                            <select v-if="childFormat===\'dropdown\' || childFormat===\'radio\'"\n                                id="child_prefill_entry_single"\n                                @change="updateSelectedOptionValue($event.target, \'child\')">\n                                <option v-if="conditions.selectedChildValue === \'\'" value="" selected>Select a value</option>\n                                <option v-for="val in selectedChildValueOptions" \n                                    :value="val"\n                                    :key="\'child_prefill_\' + val"\n                                    :selected="decodeAndStripHTML(conditions.selectedChildValue) === val">\n                                    {{ val }} \n                                </option>\n                            </select>\n                            <div v-else-if="multiOptionFormats.includes(childFormat)"\n                                id="child_choices_wrapper" :key="\'prefill_\' + selectedConditionJSON">\n                                <select v-if="childFormat === \'multiselect\' || childFormat === \'checkboxes\'"\n                                    placeholder="select some options"\n                                    multiple="true"\n                                    id="child_prefill_entry_multi"\n                                    style="display: none;"\n                                    @change="updateSelectedOptionValue($event.target, \'child\')">\n                                </select>\n                            </div>\n                            <input v-if="childFormat===\'text\' || childFormat===\'textarea\'" \n                                id="child_prefill_entry_text"\n                                @change="updateSelectedOptionValue($event.target, \'child\')"\n                                :value="decodeAndStripHTML(conditions.selectedChildValue)" />\n                            <div v-if="orgchartFormats.includes(childFormat)" :id="\'ifthen_child_orgSel_\' + conditions.childIndID"\n                                style="min-height:30px" aria-labelledby="prefill_value_entry">\n                            </div>\n                        </template>\n                    </div>\n                    <div v-if="showSetup" id="if-then-setup">\n                        <template v-if="conditions.selectedOutcome !== \'crosswalk\'">\n                            <h3 style="margin: 0;">IF</h3>\n                            \x3c!-- NOTE: PARENT CONTROLLER SELECTION --\x3e\n                            <select title="select an indicator" @change="updateSelectedParentIndicator(parseInt($event.target.value))">\n                                <option v-if="!conditions.parentIndID" :value="0" selected>Select an Indicator</option>\n                                <option v-for="i in selectableParents" :key="\'parent_\' + i.indicatorID"\n                                :title="i.name"\n                                :value="i.indicatorID">\n                                {{getIndicatorName(parseInt(i.indicatorID)) }} (indicator {{i.indicatorID}})\n                                </option>\n                            </select>\n                            \x3c!-- NOTE: OPERATOR SELECTION --\x3e\n                            <select v-model="selectedOperator">\n                                <option v-if="conditions.selectedOp === \'\'" value="" selected>Select a condition</option>\n                                <option v-for="o in selectedParentOperators" :key="o.val" :value="o.val" >\n                                {{ o.text }}\n                                </option>\n                            </select>\n                            \x3c!-- NOTE: COMPARED VALUE SELECTIONS --\x3e\n                            <select v-if="parentFormat === \'dropdown\' || parentFormat===\'radio\'"\n                                id="parent_compValue_entry_single"\n                                @change="updateSelectedOptionValue($event.target, \'parent\')">\n                                <option v-if="conditions.selectedParentValue === \'\'" value="" selected>Select a value</option>\n                                <option v-for="val in selectedParentValueOptions"\n                                    :key="\'parent_val_\' + val"\n                                    :selected="decodeAndStripHTML(conditions.selectedParentValue) === val"> {{ val }}\n                                </option>\n                            </select>\n                            <div v-else-if="parentFormat===\'multiselect\' || parentFormat===\'checkboxes\'"\n                                id="parent_choices_wrapper" class="comparison"\n                                :key="\'comp_\' + selectedConditionJSON">\n                                <select id="parent_compValue_entry_multi"\n                                    placeholder="select some options" multiple="true"\n                                    style="display: none;"\n                                    @change="updateSelectedOptionValue($event.target, \'parent\')">\n                                </select>\n                            </div>\n                        </template>\n                        \x3c!-- NOTE: LOADED DROPDOWNS AND CROSSWALKS --\x3e\n                        <div v-else class="crosswalks">\n                            <label for="select-crosswalk-file">File&nbsp;\n                                <select v-model="crosswalkFile" id="select-crosswalk-file" style="width: 200px;">\n                                    <option value="">Select a file</option>\n                                    <option v-for="f in fileManagerTextFiles" :key="f" :value="f">{{f}}</option>\n                                </select>\n                            </label>\n                            <label for="select-crosswalk-header">Does file contain headers?&nbsp;\n                                <select v-model="crosswalkHasHeader" style="width:60px;" id="select-crosswalk-header">\n                                    <option :value="false">No</option>\n                                    <option :value="true">Yes</option>\n                                </select>\n                            </label>\n                            <label for="select-level-two">Controlled Dropdown&nbsp;\n                                <select v-model.number="level2IndID" id="select-level-two" style="width: 200px;">\n                                    <option :value="null">none (single dropdown)</option>\n                                    <option v-for="indicator in crosswalkLevelTwo"\n                                        :key="\'level2_\' + indicator.indicatorID"\n                                        :value="parseInt(indicator.indicatorID)">\n                                        {{indicator.indicatorID}}: {{getIndicatorName(parseInt(indicator.indicatorID))}}\n                                    </option>\n                                </select>\n                            </label>\n                        </div>\n                    </div>\n                    <div v-if="conditionComplete">\n                        <template v-if="conditions.selectedOutcome !== \'crosswalk\'">\n                            <h3 style="margin: 0; display:inline-block">THEN</h3> \'{{getIndicatorName(childIndID)}}\'\n                            <span v-if="conditions.selectedOutcome === \'pre-fill\'">will \n                            <span style="color: #008010; font-weight: bold;"> have the value{{childPrefillDisplay}}</span>\n                            </span>\n                            <span v-else>will \n                                <span style="color: #008010; font-weight: bold;">\n                                be {{conditions.selectedOutcome === "show" ? \'shown\' : \'hidden\'}}\n                                </span>\n                            </span>\n                        </template>\n                        <template v-else>\n                            <p>Selection options will be loaded from <b>{{ conditions.crosswalkFile }}</b></p>\n                        </template>\n                    </div>\n                    <div v-if="noOptions">No options are currently available for this selection</div>\n                </template>\n            </div>\n        </div>'};var x=n(337);const k={name:"FormEditingDisplay",props:{depth:Number,formNode:Object,index:Number},components:{FormatPreview:{props:{indicator:Object},inject:["libsPath","initializeOrgSelector","orgchartFormats","decodeAndStripHTML"],computed:{truncatedOptions:function(){var e;return(null===(e=this.indicator.options)||void 0===e?void 0:e.slice(0,6))||[]},baseFormat:function(){var e;return(null===(e=this.indicator.format)||void 0===e||null===(e=e.toLowerCase())||void 0===e?void 0:e.trim())||""},defaultValue:function(){var e;return(null===(e=this.indicator)||void 0===e?void 0:e.default)||""},strippedDefault:function(){return this.decodeAndStripHTML(this.defaultValue||"")},inputElID:function(){return"input_preview_".concat(this.indicator.indicatorID)},selType:function(){return this.baseFormat.slice(this.baseFormat.indexOf("_")+1)},labelSelector:function(){return this.indicator.indicatorID+"_format_label"},printResponseID:function(){return"xhrIndicator_".concat(this.indicator.indicatorID,"_").concat(this.indicator.series)},gridOptions:function(){var e,t=JSON.parse((null===(e=this.indicator)||void 0===e?void 0:e.options)||"[]");return t.map((function(e){e.name=XSSHelpers.stripAllTags(e.name),null!=e&&e.options&&e.options.map((function(e){return XSSHelpers.stripAllTags(e)}))})),t}},mounted:function(){var e,t,n,o,i,r=this;switch(this.baseFormat.toLowerCase()){case"raw_data":break;case"date":$("#".concat(this.inputElID)).datepicker({autoHide:!0,showAnim:"slideDown",onSelect:function(){$("#"+r.indicator.indicatorID+"_focusfix").focus()}}),null===(e=document.getElementById(this.inputElID))||void 0===e||e.setAttribute("aria-labelledby",this.labelSelector);break;case"dropdown":$("#".concat(this.inputElID)).chosen({disable_search_threshold:5,allow_single_deselect:!0,width:"50%"}),$("#".concat(this.inputElID,"_chosen input.chosen-search-input")).attr("aria-labelledby",this.labelSelector);break;case"multiselect":var a=document.getElementById(this.inputElID);if(null!==a&&!0===a.multiple&&"active"!==(null==a?void 0:a.getAttribute("data-choice"))){var l=this.indicator.options||[];l=l.map((function(e){return{value:e,label:e,selected:""!==r.strippedDefault&&r.strippedDefault===e}}));var s=new Choices(a,{allowHTML:!1,removeItemButton:!0,editItems:!0,choices:l.filter((function(e){return""!==e.value}))});a.choicesjs=s}$("#".concat(this.inputElID," ~ input.choices__input")).attr("aria-labelledby",this.labelSelector);break;case"orgchart_group":case"orgchart_position":case"orgchart_employee":this.initializeOrgSelector(this.selType,this.indicator.indicatorID,"",(null===(t=this.indicator)||void 0===t?void 0:t.default)||"");break;case"checkbox":null===(n=document.getElementById(this.inputElID+"_check0"))||void 0===n||n.setAttribute("aria-labelledby",this.labelSelector);break;case"checkboxes":case"radio":null===(o=document.querySelector("#".concat(this.printResponseID," .format-preview")))||void 0===o||o.setAttribute("aria-labelledby",this.labelSelector);break;default:null===(i=document.getElementById(this.inputElID))||void 0===i||i.setAttribute("aria-labelledby",this.labelSelector)}},methods:{useAdvancedEditor:function(){$("#"+this.inputElID).trumbowyg({btns:["bold","italic","underline","|","unorderedList","orderedList","|","justifyLeft","justifyCenter","justifyRight","fullscreen"]}),$("#textarea_format_button_".concat(this.indicator.indicatorID)).css("display","none")}},template:'<div class="format-preview">\n        <input v-if="baseFormat === \'text\'" :id="inputElID" type="text" :value="strippedDefault" class="text_input_preview"/>\n        <input v-if="baseFormat === \'number\'" :id="inputElID" type="number" :value="strippedDefault" class="text_input_preview"/>\n\n        <template v-if="baseFormat === \'currency\'">\n            $&nbsp;<input :id="inputElID" type="number" :value="strippedDefault"\n            min="0.00" step="0.01" class="text_input_preview"/>\n        </template>\n\n        <template v-if="baseFormat === \'raw_data\'">\n            Custom Widget\n        </template>\n\n        <template v-if="baseFormat === \'textarea\'">\n            <textarea :id="inputElID" rows="6" class="textarea_input_preview" :value="strippedDefault"></textarea>\n            <div :id="\'textarea_format_button_\' + indicator.indicatorID"\n                @click="useAdvancedEditor" \n                style="text-align: right; font-size: 12px"><span class="link">formatting options</span>\n            </div>\n        </template>\n\n        <template v-if="baseFormat === \'radio\'">\n            <template v-for="o, i in truncatedOptions" :key="\'radio_prev_\' + indicator.indicatorID + \'_\' + i">\n                <label class="checkable leaf_check" :for="inputElID + \'_radio\' + i">\n                    <input type="radio" :id="inputElID + \'_radio\' + i" \n                    :name="indicator.indicatorID" class="icheck leaf_check"\n                    :checked="strippedDefault !== \'\' && strippedDefault === o" />\n                    <span class="leaf_check"></span>{{ o }}\n                </label>\n            </template>\n            <div v-if="indicator?.options?.length > 5" style="padding-left: 0.4em"><b> ...</b></div>\n        </template>\n\n        <template v-if="baseFormat === \'checkboxes\' || baseFormat === \'checkbox\'">\n            <template v-for="o, i in truncatedOptions" :key="\'check_prev_\' + indicator.indicatorID + \'_\' + i">\n                <label class="checkable leaf_check" :for="inputElID + \'_check\' + i">\n                    <input type="checkbox" :id="inputElID + \'_check\' + i" :name="indicator.indicatorID" class="icheck leaf_check"  :checked="strippedDefault !== \'\' && strippedDefault === o" />\n                    <span class="leaf_check"></span>{{ o }}\n                </label>\n            </template>\n            <div v-if="indicator?.options?.length > 5" style="padding-left: 0.4em"><b> ...</b></div>\n        </template>\n        \n        <fieldset v-if="baseFormat === \'fileupload\' || baseFormat === \'image\'" \n            style="padding: 0.5em;"><legend>File Attachment(s)</legend>\n            <p style="margin-bottom: 0.5em;">Select File to attach:</p>\n            <input :id="inputElID" name="formPacket" type="file" />\n        </fieldset>\n\n        <template v-if="baseFormat === \'date\'">\n            <input type="text" :id="inputElID"\n            :style="\'background: white url(\' + libsPath + \'dynicons/svg/office-calendar.svg) no-repeat 4px center; background-size: 16px;\'"\n            style="padding-left: 24px; font-size: 1.3em; font-family: monospace;" :value="indicator.default" />\n        </template>\n\n        <select v-if="baseFormat === \'dropdown\'" :id="inputElID" style="width: 50%" :value="strippedDefault">\n            <option v-for="o, i in truncatedOptions" :key="\'drop_prev_\' + indicator.indicatorID + \'_\' + i">\n            {{o}}\n            </option>\n            <option v-if="indicator?.options?.length > 5" style="padding-left: 0.4em" disabled>(preview showing first 5)</option>\n        </select>\n        \n        <select v-if="baseFormat === \'multiselect\'" multiple \n            :id="inputElID">\n            :name="\'multi_prev_\' + indicator.indicatorID + \'_multiselect[]\'"\n            style="display:none">\n        </select>\n        \n        <template v-if="orgchartFormats.includes(baseFormat)">\n            <div :id="\'orgSel_\' + indicator.indicatorID" style="min-height:30px"></div>\n        </template>\n\n        <template v-if="baseFormat === \'grid\'">\n            <div class="tableinput">\n                <table class="table" :id="\'grid_\' + indicator.indicatorID + \'_\' + indicator.series + \'_input\'"\n                    style="word-wrap: break-word; table-layout: fixed; height: 100%; display: table">\n\n                    <thead :id="\'gridTableHead_\' + indicator.indicatorID">\n                        <tr>\n                            <td v-for="o in gridOptions" :key="\'grid_head_\' + o.name">{{ o.name }}</td>\n                        </tr>\n                    </thead>\n                    <tbody :id="\'gridTableBody_\' + indicator.indicatorID">\n                        <tr>\n                            <td v-for="o in gridOptions" style="min-width: 150px;" :key="\'grid_body_\' + o.name">\n                                <input v-if="o.type === \'text\'" style="width: 100%;" :aria-label="o.name" />\n                                <textarea v-if="o.type === \'textarea\'" rows="3" style="resize:none; width: 100%;" :aria-label="o.name"></textarea>\n                                <input type="date" v-if="o.type === \'date\'" style="width: 100%;" :aria-label="o.name" />\n                                <select v-if="o.type === \'dropdown\'" style="width: 100%;" :aria-label="o.name">\n                                    <option v-for="option in o.options" :key="\'grid_drop_\' + option">{{option}}</option>\n                                </select>\n                            </td>\n                        </tr>\n                    </tbody>\n                </table>\n            </div>\n        </template>\n\n    </div>'}},inject:["libsPath","newQuestion","editQuestion","openAdvancedOptionsDialog","openIfThenDialog","listTracker","allowedConditionChildFormats","showToolbars","toggleToolbars","makePreviewKey"],computed:{isHeaderLocation:function(){var e=parseInt(this.formNode.indicatorID),t=this.listTracker[e];return null===(null==t?void 0:t.parentID)||null===(null==t?void 0:t.newParentID)},sensitiveImg:function(){return this.sensitive?'<img src="'.concat(this.libsPath,'dynicons/svg/eye_invisible.svg"\n                    style="width: 16px; margin-left: 4px;" alt="" class="sensitive-icon"\n                    title="This field is sensitive" />'):""},conditionalQuestion:function(){return!this.isHeaderLocation&&null!==this.formNode.conditions&&""!==this.formNode.conditions&"null"!==this.formNode.conditions},conditionsAllowed:function(){var e;return!this.isHeaderLocation&&this.allowedConditionChildFormats.includes(null===(e=this.formNode.format)||void 0===e?void 0:e.toLowerCase())},indicatorName:function(){var e,t=this.required?'<span class="input-required-sensitive">*&nbsp;Required</span>':"",n=this.sensitive?'<span class="input-required-sensitive">*&nbsp;Sensitive</span>':"",o=""!==((null===(e=this.formNode)||void 0===e?void 0:e.description)||"")?" (".concat(this.formNode.description,")"):"",i=""!==this.formNode.name.trim()?this.formNode.name.trim():"[ blank ]";return"".concat(i).concat(o).concat(t).concat(n,"  &nbsp;").concat(this.sensitiveImg)},printResponseID:function(){return"xhrIndicator_".concat(this.formNode.indicatorID,"_").concat(this.formNode.series)},required:function(){return 1===parseInt(this.formNode.required)},sensitive:function(){return 1===parseInt(this.formNode.is_sensitive)}},template:'<div class="printResponse" \n            :class="{\'form-header\': isHeaderLocation}"\n            style="margin-bottom: 1rem;"\n            :id="printResponseID">\n\n            \x3c!-- EDITING AREA FOR INDICATOR --\x3e\n            <div class="form_editing_area" style="display:flex"\n                :class="{\'conditional\': conditionalQuestion, \'form-header\': isHeaderLocation}">\n\n                <div style="width: 100%;">\n                    \x3c!-- NAME --\x3e\n                    <div style="display:flex;">\n                        <div v-html="indicatorName" @click="toggleToolbars($event, parseInt(formNode.indicatorID))"\n                        class="indicator-name-preview" :id="formNode.indicatorID + \'_format_label\'"></div>\n                    </div>\n                    \x3c!-- FORMAT PREVIEW --\x3e\n                    <div v-if="formNode.format !== \'\'" class="form_data_entry_preview">\n                        <format-preview :indicator="formNode" :key="\'FP_\' + formNode.indicatorID"></format-preview>\n                    </div>\n                </div>\n                \x3c!-- TOOLBAR --\x3e\n                <div v-show="showToolbars"\n                    :style="{backgroundColor: required ? \'#eec8c8\' : \'#f2f2f5\'}"\n                    :id="\'form_editing_toolbar_\' + formNode.indicatorID"\n                    :class="{\'conditional\': conditionalQuestion}">\n\n                    <div style="width:100%;">\n                        <button v-show="showToolbars" type="button"\n                            class="btn-general"\n                            @click="editQuestion(parseInt(formNode.indicatorID))"\n                            :title="\'edit indicator \' + formNode.indicatorID">\n                            Edit\n                        </button>\n                        <button v-if="conditionsAllowed" type="button" :id="\'edit_conditions_\' + formNode.indicatorID"\n                            class="btn-general"\n                            @click="openIfThenDialog(parseInt(formNode.indicatorID), formNode.name.trim())" \n                            :title="\'Edit conditions for \' + formNode.indicatorID">\n                            Modify Logic\n                        </button>\n                        <button type="button"\n                            @click="openAdvancedOptionsDialog(parseInt(formNode.indicatorID))"\n                            :title="\'Open Advanced Options.\' + formNode.has_code ? \'Advanced options are present\' : \'\'"\n                            :class="{\'btn-confirm\': formNode.has_code, \'btn-general\': !formNode.has_code}">\n                            Programmer\n                        </button>\n                    </div>\n                    <button type="button" class="btn-general"\n                        :title="isHeaderLocation ? \'Add question to section\' : \'Add sub-question\'"\n                        @click="newQuestion(formNode.indicatorID)">\n                        + {{isHeaderLocation ? \'Add question to section\' : \'Add sub-question\'}}\n                    </button>\n                </div>\n            </div>\n\n            \x3c!-- NOTE: RECURSIVE SUBQUESTIONS --\x3e\n            <template v-if="formNode.child">\n                <form-editing-display v-for="child in formNode.child"\n                    :depth="depth + 1"\n                    :formNode="child"\n                    :key="\'FED_\' + child.indicatorID + makePreviewKey(child)">\n                </form-editing-display>\n            </template>\n        </div>'},T={name:"FormIndexListing",data:function(){return{subMenuOpen:!1}},props:{depth:Number,formNode:Object,index:Number,parentID:Number},inject:["truncateText","clearListItem","addToListTracker","selectNewFormNode","selectedNodeIndicatorID","startDrag","onDragEnter","onDragLeave","onDrop","moveListing"],mounted:function(){if(this.addToListTracker(this.formNode,this.parentID,this.index),null!==this.selectedNodeIndicatorID&&this.selectedNodeIndicatorID===this.formNode.indicatorID){var e=document.getElementById("index_listing_".concat(this.selectedNodeIndicatorID));if(null!==e){var t=e.closest("li.section_heading");Array.from((null==t?void 0:t.querySelectorAll("li .sub-menu-chevron.closed"))||[]).forEach((function(e){return e.click()})),e.classList.add("index-selected")}}},beforeUnmount:function(){this.clearListItem(this.formNode.indicatorID)},methods:{indexHover:function(){var e,t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};null==t||null===(e=t.currentTarget)||void 0===e||e.classList.add("index-selected")},indexHoverOff:function(){var e,t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};null==t||null===(e=t.currentTarget)||void 0===e||e.classList.remove("index-selected")},toggleSubMenu:function(){var e,t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};32===(null==t?void 0:t.keyCode)&&t.preventDefault(),this.subMenuOpen=!this.subMenuOpen,null===(e=t.currentTarget.closest("li"))||void 0===e||e.focus()}},computed:{headingNumber:function(){return 0===this.depth?this.index+1+".":""},hasConditions:function(){return 0!==this.depth&&null!==this.formNode.conditions&&""!==this.formNode.conditions&&"null"!==this.formNode.conditions},indexDisplay:function(){var e=this.formNode.description?XSSHelpers.stripAllTags(this.formNode.description):XSSHelpers.stripAllTags(this.formNode.name);return XSSHelpers.decodeHTMLEntities(this.truncateText(e))||"[ blank ]"},suffix:function(){return"".concat(this.formNode.indicatorID,"_").concat(this.formNode.series)},required:function(){return 1===parseInt(this.formNode.required)},isEmpty:function(){return!0===this.formNode.isEmpty}},template:'\n        <li tabindex=0 :title="\'index item \'+ formNode.indicatorID"\n            :class="depth === 0 ? \'section_heading\' : \'subindicator_heading\'"\n            @mouseover.stop="indexHover" @mouseout.stop="indexHoverOff"\n            @click.stop="selectNewFormNode($event, formNode)"\n            @keypress.enter.stop="selectNewFormNode($event, formNode)">\n            <div>\n                <span v-if="hasConditions" title="question is conditionally shown">→</span>\n                {{headingNumber}}&nbsp;{{indexDisplay}}\n                <div class="icon_move_container">\n                    <div v-show="formNode.indicatorID === selectedNodeIndicatorID" \n                        tabindex="0" class="icon_move up" role="button" title="move item up"\n                        @click.stop="moveListing($event, selectedNodeIndicatorID, true)"\n                        @keydown.stop.enter.space="moveListing($event, selectedNodeIndicatorID, true)">\n                    </div>\n                    <div v-show="formNode.indicatorID === selectedNodeIndicatorID"\n                        tabindex="0" class="icon_move down" role="button" title="move item down"\n                        @click.stop="moveListing($event, selectedNodeIndicatorID, false)"\n                        @keydown.stop.enter.space="moveListing($event, selectedNodeIndicatorID, false)">\n                    </div>\n                </div>\n                <div v-if="formNode.child" tabindex="0" class="sub-menu-chevron" :class="{closed: !subMenuOpen}"\n                    @click.stop="toggleSubMenu($event)"\n                    @keydown.stop.enter.space="toggleSubMenu($event)">\n                    <span v-show="subMenuOpen" role="img" aria="">▾</span>\n                    <span v-show="!subMenuOpen" role="img" aria="">▸</span>\n                </div>\n            </div>\n            \n            \x3c!-- NOTE: RECURSIVE SUBQUESTIONS. ul for each for drop zones --\x3e\n            <ul class="form-index-listing-ul" :id="\'drop_area_parent_\'+ formNode.indicatorID"\n                data-effect-allowed="move"\n                @drop.stop="onDrop"\n                @dragover.prevent\n                @dragenter.prevent="onDragEnter"\n                @dragleave="onDragLeave">\n\n                <template v-if="formNode.child">\n                    <form-index-listing v-show="subMenuOpen" v-for="(child, k, i) in formNode.child"\n                        :id="\'index_listing_\' + child.indicatorID"\n                        :depth="depth + 1"\n                        :parentID="formNode.indicatorID"\n                        :formNode="child"\n                        :index="i"\n                        :key="\'index_list_item_\' + child.indicatorID"\n                        draggable="true"\n                        @dragstart.stop="startDrag"> \n                    </form-index-listing>\n                </template>\n            </ul>\n        </li>'},F={data:function(){var e,t,n,o,i,r,a,l,s;return{categoryName:this.decodeAndStripHTML((null===(e=this.focusedFormRecord)||void 0===e?void 0:e.categoryName)||"Untitled"),categoryDescription:this.decodeAndStripHTML((null===(t=this.focusedFormRecord)||void 0===t?void 0:t.categoryDescription)||""),workflowID:parseInt(null===(n=this.focusedFormRecord)||void 0===n?void 0:n.workflowID)||0,needToKnow:parseInt(null===(o=this.focusedFormRecord)||void 0===o?void 0:o.needToKnow)||0,visible:parseInt(null===(i=this.focusedFormRecord)||void 0===i?void 0:i.visible)||0,type:(null===(r=this.focusedFormRecord)||void 0===r?void 0:r.type)||"",formID:(null===(a=this.focusedFormRecord)||void 0===a?void 0:a.categoryID)||"",formParentID:(null===(l=this.focusedFormRecord)||void 0===l?void 0:l.parentID)||"",destructionAge:(null===(s=this.focusedFormRecord)||void 0===s?void 0:s.destructionAge)||null,lastUpdated:""}},inject:["APIroot","CSRFToken","workflowRecords","allStapledFormCatIDs","focusedFormRecord","focusedFormIsSensitive","updateCategoriesProperty","openEditCollaboratorsDialog","openFormHistoryDialog","showLastUpdate","truncateText","decodeAndStripHTML"],computed:{workflowDescription:function(){var e=this,t="";if(0!==this.workflowID){var n=this.workflowRecords.find((function(t){return parseInt(t.workflowID)===e.workflowID}));t=(null==n?void 0:n.description)||""}return t},isSubForm:function(){return""!==this.focusedFormRecord.parentID},isStaple:function(){return this.allStapledFormCatIDs.includes(this.formID)},isNeedToKnow:function(){return 1===parseInt(this.focusedFormRecord.needToKnow)},formNameCharsRemaining:function(){return 50-this.categoryName.length},formDescrCharsRemaining:function(){return 255-this.categoryDescription.length}},methods:{updateName:function(){var e=this;$.ajax({type:"POST",url:"".concat(this.APIroot,"formEditor/formName"),data:{name:this.categoryName,categoryID:this.formID,CSRFToken:this.CSRFToken},success:function(){e.updateCategoriesProperty(e.formID,"categoryName",e.categoryName),e.lastUpdated=(new Date).toLocaleString(),e.showLastUpdate("form_properties_last_update","last modified: ".concat(e.lastUpdated))},error:function(e){return console.log("name post err",e)}})},updateDescription:function(){var e=this;$.ajax({type:"POST",url:"".concat(this.APIroot,"formEditor/formDescription"),data:{description:this.categoryDescription,categoryID:this.formID,CSRFToken:this.CSRFToken},success:function(){e.updateCategoriesProperty(e.formID,"categoryDescription",e.categoryDescription),e.lastUpdated=(new Date).toLocaleString(),e.showLastUpdate("form_properties_last_update","last modified: ".concat(e.lastUpdated))},error:function(e){return console.log("form description post err",e)}})},updateWorkflow:function(){var e=this;$.ajax({type:"POST",url:"".concat(this.APIroot,"formEditor/formWorkflow"),data:{workflowID:this.workflowID,categoryID:this.formID,CSRFToken:this.CSRFToken},success:function(t){!1===t?alert("The workflow could not be set because this form is stapled to another form"):(e.updateCategoriesProperty(e.formID,"workflowID",e.workflowID),e.updateCategoriesProperty(e.formID,"workflowDescription",e.workflowDescription),e.lastUpdated=(new Date).toLocaleString(),e.showLastUpdate("form_properties_last_update","last modified: ".concat(e.lastUpdated)))},error:function(e){return console.log("workflow post err",e)}})},updateAvailability:function(){var e=this;$.ajax({type:"POST",url:"".concat(this.APIroot,"formEditor/formVisible"),data:{visible:this.visible,categoryID:this.formID,CSRFToken:this.CSRFToken},success:function(){e.updateCategoriesProperty(e.formID,"visible",e.visible),e.lastUpdated=(new Date).toLocaleString(),e.showLastUpdate("form_properties_last_update","last modified: ".concat(e.lastUpdated))},error:function(e){return console.log("visibility post err",e)}})},updateNeedToKnow:function(){var e=this;$.ajax({type:"POST",url:"".concat(this.APIroot,"formEditor/formNeedToKnow"),data:{needToKnow:this.needToKnow,categoryID:this.formID,CSRFToken:this.CSRFToken},success:function(){e.updateCategoriesProperty(e.formID,"needToKnow",e.needToKnow),e.lastUpdated=(new Date).toLocaleString(),e.showLastUpdate("form_properties_last_update","last modified: ".concat(e.lastUpdated))},error:function(e){return console.log("ntk post err",e)}})},updateType:function(){var e=this;$.ajax({type:"POST",url:"".concat(this.APIroot,"formEditor/formType"),data:{type:this.type,categoryID:this.formID,CSRFToken:this.CSRFToken},success:function(){e.updateCategoriesProperty(e.formID,"type",e.type),e.lastUpdated=(new Date).toLocaleString(),e.showLastUpdate("form_properties_last_update","last modified: ".concat(e.lastUpdated))},error:function(e){return console.log("type post err",e)}})},updateDestructionAge:function(){var e=this;(null===this.destructionAge||this.destructionAge>=1&&this.destructionAge<=30)&&$.ajax({type:"POST",url:"".concat(this.APIroot,"formEditor/destructionAge"),data:{destructionAge:this.destructionAge,categoryID:this.formID,CSRFToken:this.CSRFToken},success:function(t){t===e.destructionAge&&(e.updateCategoriesProperty(e.formID,"destructionAge",e.destructionAge),e.lastUpdated=(new Date).toLocaleString(),e.showLastUpdate("form_properties_last_update","last modified: ".concat(e.lastUpdated)))},error:function(e){return console.log("destruction age post err",e)}})}},template:'<div id="edit-properties-panel">\n        <span class="form-id">{{formID}}\n            <span v-if="formParentID">(internal for {{formParentID}})</span>\n        </span>\n        <div id="edit-properties-description">\n            <label for="categoryName">Form name\n                <span style="margin-left:auto; font-size:80%; align-self:flex-end;">({{formNameCharsRemaining}})</span>\n            </label>\n            <input id="categoryName" type="text" maxlength="50" v-model="categoryName" style="margin-bottom: 1rem;" @change="updateName"/>\n            \n            <label for="categoryDescription">Form description\n                <span style="margin-left:auto; font-size:80%; align-self:flex-end;">({{formDescrCharsRemaining}})</span>\n            </label>\n            <textarea id="categoryDescription" maxlength="255" v-model="categoryDescription" rows="3" @change="updateDescription"></textarea>\n        </div>\n        <div id="edit-properties-other-properties">\n            <div style="display:flex; justify-content: space-between;">\n                <button type="button" id="editFormPermissions" class="btn-general"\n                    style="width: fit-content;"\n                    @click="openEditCollaboratorsDialog">\n                    Edit Special Write Access\n                </button>\n                <button type="button" id="form_properties_last_update" @click.prevent="openFormHistoryDialog"\n                    :style="{display: lastUpdated===\'\' ? \'none\' : \'flex\'}">\n                </button>\n            </div>\n            <template v-if="!isSubForm">\n                <div class="panel-properties">\n                    <template v-if="!isStaple && workflowRecords.length > 0">\n                        <label for="workflowID">Workflow\n                        <select id="workflowID" name="select-workflow" @change="updateWorkflow"\n                            title="select workflow"\n                            v-model.number="workflowID"\n                            style="width:280px;"\n                            :style="{color: workflowID === 0 ? \'#a00\' : \'black\'}"\n                            :disabled="isStaple">\n                            <option value="0" :selected="workflowID === 0">\n                                No Workflow.  Users cannot submit requests\n                            </option>\n                            <template v-for="r in workflowRecords" :key="\'workflow_\' + r.workflowID">\n                                <option v-if="parseInt(r.workflowID) > 0"\n                                    :value="r.workflowID"\n                                    :selected="workflowID === parseInt(r.workflowID)">\n                                    ID#{{r.workflowID}}: {{truncateText(r.description,32)}}\n                                </option>\n                            </template>\n                        </select></label>\n                    </template>\n                    <div v-if="workflowRecords.length === 0" style="color: #a00; width: 100%; margin-bottom: 0.5rem;">A workflow must be set up first</div>\n\n                    <label for="availability" title="When hidden, users will not be able to select this form">Availability\n                        <select id="availability" title="Select Availability" v-model.number="visible" @change="updateAvailability">\n                            <option value="1" :selected="visible === 1">Available</option>\n                            <option value="0" :selected="visible === 0">Hidden</option>\n                        </select>\n                    </label>\n                    <label for="formType">Form Type\n                        <select id="formType" title="Change type of form" v-model="type" @change="updateType">\n                            <option value="" :selected="type === \'\'">Standard</option>\n                            <option value="parallel_processing" :selected="type === \'parallel_processing\'">Parallel Processing</option>\n                        </select>\n                    </label>\n                    <div style="display:flex; align-items: center; column-gap: 1rem;">\n                        <label for="destructionAgeYears" title="Resolved requests that have reached this expiration date will be destroyed" >Record Destruction Age (Years)\n                            <select id="destructionAgeYears" v-model="destructionAge"\n                                title="resolved request destruction age in years" \n                                @change="updateDestructionAge">\n                                <option :value="null" :selected="destructionAge===null">never</option>\n                                <option v-for="i in 30" :value="i">{{i}}</option>\n                            </select>\n                        </label>\n                    </div>\n                    <div v-if="focusedFormIsSensitive" style="display:flex; color: #a00;">\n                        <div style="display:flex; align-items: center;"><b>Need to know: {{isNeedToKnow ? \'on\' : \'off\'}}</b></div> &nbsp;\n                        <div style="display:flex; align-items: center; font-size:90%;">(forced on because sensitive fields are present)</div>\n                    </div>\n                    <label v-else for="needToKnow"\n                        title="When turned on, the people associated with the workflow are the only ones who have access to view the form. \nForced on if the form contains sensitive information.">Need to know\n                        <select id="needToKnow" v-model.number="needToKnow" :style="{color: isNeedToKnow ? \'#a00\' : \'black\'}" @change="updateNeedToKnow">\n                            <option value="0" :selected="!isNeedToKnow">Off</option>\n                            <option value="1" style="color: #a00;" :selected="isNeedToKnow">On</option>\n                        </select>\n                    </label>\n                </div>\n            </template>\n            <div v-else style="margin-top: auto;">This is an Internal Form</div>\n        </div>\n    </div>'};function _(e){return _="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},_(e)}function O(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function C(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?O(Object(n),!0).forEach((function(t){P(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):O(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function P(e,t,n){return(t=function(e){var t=function(e,t){if("object"!==_(e)||null===e)return e;var n=e[Symbol.toPrimitive];if(void 0!==n){var o=n.call(e,"string");if("object"!==_(o))return o;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(e);return"symbol"===_(t)?t:String(t)}(t))in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}const N={name:"form-editor-view",data:function(){return{dragLI_Prefix:"index_listing_",dragUL_Prefix:"drop_area_parent_",listTracker:{},allowedConditionChildFormats:["dropdown","text","multiselect","radio","checkboxes","","fileupload","image","textarea","orgchart_employee","orgchart_group","orgchart_position"],showToolbars:!0,sortOffset:128,sortLastUpdated:"",updateKey:0}},components:{LeafFormDialog:i.Z,IndicatorEditingDialog:c,AdvancedOptionsDialog:d,NewFormDialog:u.Z,ImportFormDialog:p.Z,HistoryDialog:s,StapleFormDialog:v,EditCollaboratorsDialog:g,ConfirmDeleteDialog:I,ConditionsEditorDialog:S,FormEditingDisplay:k,FormIndexListing:T,EditPropertiesPanel:F,FormBrowser:x.Z},inject:["APIroot","CSRFToken","libsPath","setDefaultAjaxResponseMessage","appIsLoadingCategoryList","appIsLoadingForm","categories","internalFormRecords","selectedNodeIndicatorID","selectedFormNode","getFormByCategoryID","showLastUpdate","openFormHistoryDialog","newQuestion","editQuestion","focusedFormRecord","focusedFormTree","openNewFormDialog","currentFormCollection","decodeAndStripHTML","truncateText","showFormDialog","dialogFormContent"],mounted:function(){},beforeRouteEnter:function(e,t,n){window.scrollTo(0,0),n((function(e){e.setDefaultAjaxResponseMessage()}))},provide:function(){var e=this;return{listTracker:(0,o.Fl)((function(){return e.listTracker})),showToolbars:(0,o.Fl)((function(){return e.showToolbars})),clearListItem:this.clearListItem,addToListTracker:this.addToListTracker,allowedConditionChildFormats:this.allowedConditionChildFormats,startDrag:this.startDrag,onDragEnter:this.onDragEnter,onDragLeave:this.onDragLeave,onDrop:this.onDrop,moveListing:this.moveListing,toggleToolbars:this.toggleToolbars,makePreviewKey:this.makePreviewKey}},computed:{focusedFormID:function(){var e;return(null===(e=this.focusedFormRecord)||void 0===e?void 0:e.categoryID)||""},mainFormID:function(){var e,t;return""===(null===(e=this.focusedFormRecord)||void 0===e?void 0:e.parentID)?this.focusedFormRecord.categoryID:(null===(t=this.focusedFormRecord)||void 0===t?void 0:t.parentID)||""},subformID:function(){var e;return null!==(e=this.focusedFormRecord)&&void 0!==e&&e.parentID?this.focusedFormRecord.categoryID:""},currentSectionNumber:function(){var e,t=parseInt(null===(e=this.selectedFormNode)||void 0===e?void 0:e.indicatorID),n=Array.from(document.querySelectorAll("#base_drop_area > li")),o=document.getElementById("index_listing_".concat(t)),i=n.indexOf(o);return-1===i?"":i+1},sortOrParentChanged:function(){return this.sortValuesToUpdate.length>0||this.parentIDsToUpdate.length>0},sortValuesToUpdate:function(){var e=[];for(var t in this.listTracker)this.listTracker[t].sort!==this.listTracker[t].listIndex-this.sortOffset&&e.push(C({indicatorID:parseInt(t)},this.listTracker[t]));return e},parentIDsToUpdate:function(){var e=[];for(var t in this.listTracker)""!==this.listTracker[t].newParentID&&this.listTracker[t].parentID!==this.listTracker[t].newParentID&&e.push(C({indicatorID:parseInt(t)},this.listTracker[t]));return e},indexHeaderText:function(){return""!==this.focusedFormRecord.parentID?"Internal Form":this.currentFormCollection.length>1?"Form Layout":"Primary Form"}},methods:{forceUpdate:function(){this.updateKey+=1},moveListing:function(){var e,t=this,n=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},o=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,i=arguments.length>2&&void 0!==arguments[2]&&arguments[2];32===(null==n?void 0:n.keyCode)&&n.preventDefault();var r,a,l=null==n||null===(e=n.currentTarget)||void 0===e?void 0:e.closest("ul"),s=document.getElementById("index_listing_".concat(o)),c=Array.from(document.querySelectorAll("#".concat(l.id," > li"))),d=c.filter((function(e){return e!==s})),u=this.listTracker[o];i?u.listIndex>0&&(d.splice(u.listIndex-1,0,s),c.forEach((function(e){return l.removeChild(e)})),d.forEach((function(e,n){var o=parseInt(e.id.replace("index_listing_",""));l.appendChild(e),t.listTracker[o].listIndex=n})),null==n||null===(r=n.currentTarget)||void 0===r||r.focus()):u.listIndex<c.length-1&&(d.splice(u.listIndex+1,0,s),c.forEach((function(e){return l.removeChild(e)})),d.forEach((function(e,n){var o=parseInt(e.id.replace("index_listing_",""));l.appendChild(e),t.listTracker[o].listIndex=n})),null==n||null===(a=n.currentTarget)||void 0===a||a.focus())},applySortAndParentID_Updates:function(){var e=this,t=[];if(this.sortValuesToUpdate.length>0){var n=[];this.sortValuesToUpdate.forEach((function(t){n.push({indicatorID:t.indicatorID,sort:t.listIndex-e.sortOffset})})),t.push($.ajax({type:"POST",url:"".concat(this.APIroot,"formEditor/sort/batch"),data:{sortData:n,CSRFToken:this.CSRFToken},success:function(){},error:function(e){return console.log("ind sort post err",e)}}))}var o=[];this.parentIDsToUpdate.forEach((function(t){o.push($.ajax({type:"POST",url:"".concat(e.APIroot,"formEditor/").concat(t.indicatorID,"/parentID"),data:{parentID:t.newParentID,CSRFToken:e.CSRFToken},success:function(){},error:function(e){return console.log("ind parentID post err",e)}}))}));var i=t.concat(o);Promise.all(i).then((function(t){t.length>0&&e.getFormByCategoryID(e.focusedFormID,e.selectedNodeIndicatorID).then((function(){e.sortLastUpdated=(new Date).toLocaleString(),e.showLastUpdate("form_index_last_update","last modified: ".concat(e.sortLastUpdated)),e.forceUpdate()})).catch((function(e){return console.log(e)}))})).catch((function(e){return console.log("an error has occurred",e)}))},clearListItem:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:0;this.listTracker[e]&&delete this.listTracker[e]},addToListTracker:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0,o=e.indicatorID,i={sort:e.sort,parentID:t,listIndex:n,newParentID:""};this.listTracker[o]=i},updateListTracker:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:0,t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0,o=C({},this.listTracker[e]);o.listIndex=n,o.newParentID=t,this.listTracker[e]=o},startDrag:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};null!=e&&e.dataTransfer&&(e.dataTransfer.dropEffect="move",e.dataTransfer.effectAllowed="move",e.dataTransfer.setData("text/plain",e.target.id))},onDrop:function(){var e=this,t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};if(null!=t&&t.dataTransfer&&"move"===t.dataTransfer.effectAllowed){t.preventDefault();var n=t.dataTransfer.getData("text"),o=t.currentTarget,i=parseInt(n.replace(this.dragLI_Prefix,"")),r="base_drop_area"===o.id?null:parseInt(o.id.replace(this.dragUL_Prefix,"")),a=Array.from(document.querySelectorAll("#".concat(o.id," > li")));if(0===a.length)try{o.append(document.getElementById(n)),this.updateListTracker(i,r,0)}catch(e){console.log(e)}else{var l=9999,s=null;a.forEach((function(e){var o=e.getBoundingClientRect().top-t.clientY;e.id!==n&&o>0&&o<l&&(l=o,s=e.id)}));try{null!==s?o.insertBefore(document.getElementById(n),document.getElementById(s)):o.append(document.getElementById(n)),Array.from(document.querySelectorAll("#".concat(o.id," > li"))).forEach((function(t,n){var o=parseInt(t.id.replace(e.dragLI_Prefix,""));e.updateListTracker(o,r,n)}))}catch(e){console.log(e)}}o.classList.contains("entered-drop-zone")&&t.target.classList.remove("entered-drop-zone")}},onDragLeave:function(){var e,t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};null!=t&&null!==(e=t.target)&&void 0!==e&&e.classList.contains("form-index-listing-ul")&&t.target.classList.remove("entered-drop-zone")},onDragEnter:function(){var e,t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};null!=t&&t.dataTransfer&&"move"===t.dataTransfer.effectAllowed&&null!=t&&null!==(e=t.target)&&void 0!==e&&e.classList.contains("form-index-listing-ul")&&t.target.classList.add("entered-drop-zone")},toggleToolbars:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null;if(null==e||e.stopPropagation(),32===(null==e?void 0:e.keyCode)&&e.preventDefault(),e.currentTarget.classList.contains("indicator-name-preview"))if(this.showToolbars)t&&this.editQuestion(t);else{var n=e.currentTarget.id,o=e.currentTarget.getBoundingClientRect().top;this.showToolbars=!0,setTimeout((function(){var e=document.getElementById(n).getBoundingClientRect().top;window.scrollBy(0,e-o)}))}else this.showToolbars=!this.showToolbars},shortFormNameStripped:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"",t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:21,n=this.categories[e]||"",o=this.decodeAndStripHTML((null==n?void 0:n.categoryName)||"Untitled");return this.truncateText(o,t).trim()},layoutBtnIsDisabled:function(e){return e.categoryID===this.focusedFormRecord.categoryID&&null===this.selectedFormNode},makePreviewKey:function(e){var t;return"".concat(e.format).concat((null==e||null===(t=e.options)||void 0===t?void 0:t.join())||"","_").concat((null==e?void 0:e.default)||"")}},watch:{sortOrParentChanged:function(e,t){!0===e&&this.applySortAndParentID_Updates()}},template:'<div id="formEditor_content">\n    <div v-if="appIsLoadingForm || appIsLoadingCategoryList" class="page_loading">\n        Loading... \n        <img src="../images/largespinner.gif" alt="loading..." />\n    </div>\n\n    <template v-else>\n        \x3c!-- FORM EDITING BREADCRUMBS --\x3e\n        <ul v-if="mainFormID !== \'\'" id="form-breadcrumb-menu">\n            <li>\n                <router-link :to="{ name: \'browser\'}" title="to Form Browser">\n                    <h2>Form Editor</h2>\n                </router-link>\n                <span v-if="mainFormID !== \'\'" class="header-arrow" role="img" aria="">❯</span>\n            </li>\n            <li>\n                <button type="button" v-if="mainFormID !== \'\'"\n                    @click="selectNewCategory(mainFormID)" :title="\'to parent form \' + mainFormID" :disabled="subformID === \'\'">\n                    <h2>{{shortFormNameStripped(mainFormID, 50)}}</h2>\n                </button>\n                <span v-if="subformID !== \'\'" class="header-arrow" role="img" aria="">❯</span>\n            </li>\n            <li v-if="subformID !== \'\'">\n                <button type="button" :id="\'header_\' + subformID"\n                    :title="\'viewing internal form \' + subformID" disabled>\n                    <h2>{{shortFormNameStripped(subformID, 50)}}</h2>\n                </button>\n            </li>\n        </ul>\n        \x3c!-- TOP INFO PANEL --\x3e\n        <edit-properties-panel :key="\'panel_\' + focusedFormID"></edit-properties-panel>\n\n        <div id="form_index_and_editing">\n            \x3c!-- FORM INDEX --\x3e\n            <div id="form_index_display">\n                <div style="display:flex; align-items: center; justify-content: space-between; height: 28px; margin-bottom: 0.5rem;">\n                    <h3 style="margin: 0; color: black;">{{ indexHeaderText }}</h3>\n                    <img v-if="currentFormCollection.length > 1"\n                        :src="libsPath + \'dynicons/svg/emblem-notice.svg\'"\n                        style="width: 16px; margin-left: 0.25rem; margin-right:auto;"\n                        title="Details for the selected form are shown below" alt="" />\n                    <button type="button" id="form_index_last_update" @click.prevent="openFormHistoryDialog"\n                        :style="{display: sortLastUpdated===\'\' ? \'none\' : \'flex\'}">\n                    </button>\n                </div>\n                \x3c!-- FORM LAYOUT OVERVIEW --\x3e\n                <div v-if="currentFormCollection.length > 1" :id="\'layoutFormRecords_\' + $route.query.formID">\n                    <ul>\n                        <li v-for="form in currentFormCollection" :key="\'form_layout_item_\' + form.categoryID" draggable="false">\n                            <button type="button" @click="getFormByCategoryID(form.categoryID)"\n                                class="layout-listitem" :disabled="layoutBtnIsDisabled(form)"\n                                :title="\'form \' + form.categoryID">\n                                <span :style="{textDecoration: layoutBtnIsDisabled(form) ? \'none\' : \'underline\'}">\n                                    {{shortFormNameStripped(form.categoryID, 38)}}&nbsp;\n                                </span>\n                                <span v-if="form.formContextType === \'staple\'" role="img" aria="">📌</span>\n                                <em v-show="form.categoryID === focusedFormID" style="font-weight: normal; text-decoration: none;">\n                                    (selected)\n                                </em>\n                                <em v-show="form.categoryID === focusedFormRecord.parentID" style="font-weight: normal; text-decoration: none;">\n                                    (parent)\n                                </em>\n                            </button>\n                            \x3c!-- focused drop zone for collection --\x3e\n                            <ul v-if="form.categoryID === focusedFormID && focusedFormTree.length > 0"\n                                id="base_drop_area" :key="\'drop_zone_collection_\' + form.categoryID + \'_\' + updateKey"\n                                class="form-index-listing-ul"\n                                data-effect-allowed="move"\n                                @drop.stop="onDrop"\n                                @dragover.prevent\n                                @dragenter.prevent="onDragEnter"\n                                @dragleave="onDragLeave">\n\n                                <form-index-listing v-for="(formSection, i) in focusedFormTree"\n                                    :id="\'index_listing_\'+formSection.indicatorID"\n                                    :depth=0\n                                    :formNode="formSection"\n                                    :index=i\n                                    :parentID=null\n                                    :key="\'index_list_item_\' + formSection.indicatorID"\n                                    draggable="true"\n                                    @dragstart.stop="startDrag">\n                                </form-index-listing>\n                            </ul>\n                        </li>\n                    </ul>\n                </div>\n                \x3c!-- focused drop zone for single form --\x3e\n                <template v-else>\n                    <ul v-if="focusedFormTree.length > 0"\n                        id="base_drop_area" :key="\'drop_zone_primary\' + updateKey"\n                        class="form-index-listing-ul"\n                        data-effect-allowed="move"\n                        @drop.stop="onDrop"\n                        @dragover.prevent\n                        @dragenter.prevent="onDragEnter"\n                        @dragleave="onDragLeave">\n\n                        <form-index-listing v-for="(formSection, i) in focusedFormTree"\n                            :id="\'index_listing_\'+formSection.indicatorID"\n                            :depth=0\n                            :formNode="formSection"\n                            :index=i\n                            :parentID=null\n                            :key="\'index_list_item_\' + formSection.indicatorID"\n                            draggable="true"\n                            @dragstart.stop="startDrag">\n                        </form-index-listing>\n                    </ul>\n                </template>\n\n                <div style="margin: 0.5rem 0 0 0">\n                    <button type="button" class="btn-general" style="width: 100%"\n                        @click="newQuestion(null)"\n                        id="add_new_form_section"\n                        title="Add new form section">\n                        + Add Section\n                    </button>\n                </div>\n                \x3c!-- INTERNAL FORMS SECTION --\x3e\n                <div v-if="focusedFormRecord?.parentID === \'\' && focusedFormTree.length > 0"\n                    :id="\'internalFormRecords_\' + focusedFormID"  style="margin-top: 0.5rem;">\n                    <ul>\n                        <li>\n                            <button type="button" id="addInternalUse" @click="openNewFormDialog($event, focusedFormRecord.categoryID)"\n                                title="New Internal-Use Form" style="color: black;">\n                                Add Internal-Use&nbsp;<span role="img" aria="">➕</span>\n                            </button>\n                        </li>\n                        <li v-for="i in internalFormRecords" :key="\'internal_\' + i.categoryID">\n                            <button @click="getFormByCategoryID(i.categoryID)">\n                                <span class="internal">\n                                    {{shortFormNameStripped(i.categoryID, 45)}}\n                                </span>\n                            </button>\n                        </li>\n                    </ul>\n                </div>\n            </div>\n\n            \x3c!-- NOTE: FORM EDITING AND ENTRY PREVIEW --\x3e\n            <template v-if="focusedFormTree.length > 0">\n                \x3c!-- ENTIRE FORM EDIT / PREVIEW --\x3e\n                <div v-if="selectedFormNode === null" id="form_entry_and_preview">\n                    <div class="form-section-header" style="display: flex;">\n                        <h3 style="margin: 0; color: black;">Form Editing and Preview</h3>\n                        <button type="button" id="indicator_toolbar_toggle" class="btn-general"\n                            @click.stop="toggleToolbars($event)">\n                            {{showToolbars ? \'Preview This Section\' : \'Edit This Section\'}}\n                        </button>\n                    </div>\n                    <template v-for="(formSection, i) in focusedFormTree" :key="\'editing_display_\' + formSection.indicatorID">\n                        <div class="printformblock">\n                            <form-editing-display\n                                :depth="0"\n                                :formNode="formSection"\n                                :index="i"\n                                :key="\'FED_\' + formSection.indicatorID + makePreviewKey(formSection)">\n                            </form-editing-display>\n                        </div>\n                    </template>\n                </div>\n                \x3c!-- SUBSECTION EDIT / PREVIEW --\x3e\n                <div v-else id="form_entry_and_preview">\n                    <div class="form-section-header" style="display: flex;">\n                        <h3 style="margin: 0; color: black;">Form {{currentSectionNumber !== \'\' ? \'Page \' + currentSectionNumber : \'Selection\'}}</h3>\n                        <button type="button" id="indicator_toolbar_toggle" class="btn-general"\n                            @click.stop="toggleToolbars($event)">\n                            {{showToolbars ? \'Preview This Section\' : \'Edit This Section\'}}\n                        </button>\n                    </div>\n                    <div class="printformblock">\n                        <form-editing-display\n                            :depth="0"\n                            :formNode="selectedFormNode"\n                            :index="-1"\n                            :key="\'FED_\' + selectedFormNode.indicatorID + makePreviewKey(selectedFormNode)">\n                        </form-editing-display>\n                    </div>\n                </div>\n            </template>\n        </div>\n    </template>\n\n    \x3c!-- DIALOGS --\x3e\n    <leaf-form-dialog v-if="showFormDialog">\n        <template #dialog-content-slot>\n            <component :is="dialogFormContent"></component>\n        </template>\n    </leaf-form-dialog>\n</div>'}}}]);