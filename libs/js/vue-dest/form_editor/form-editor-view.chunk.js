"use strict";(self.webpackChunkleaf_vue=self.webpackChunkleaf_vue||[]).push([[145],{719:(e,t,n)=>{n.r(t),n.d(t,{default:()=>c});var o=n(166);function i(e){return i="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},i(e)}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}const a={name:"category-item",props:{categoriesRecord:Object,availability:String},inject:["APIroot","CSRFToken","libsPath","categories","updateCategoriesProperty","decodeAndStripHTML","allStapledFormCatIDs"],computed:{workflowID:function(){return parseInt(this.categoriesRecord.workflowID)},cardLibraryClasses:function(){return"formPreview formLibraryID_".concat(this.categoriesRecord.formLibraryID)},catID:function(){return this.categoriesRecord.categoryID},stapledForms:function(){var e=this,t=[];return this.categoriesRecord.stapledFormIDs.forEach((function(n){return t.push(function(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){var o,r,a;o=e,r=t,a=n[t],(r=function(e){var t=function(e,t){if("object"!==i(e)||null===e)return e;var n=e[Symbol.toPrimitive];if(void 0!==n){var o=n.call(e,"string");if("object"!==i(o))return o;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(e);return"symbol"===i(t)?t:String(t)}(r))in o?Object.defineProperty(o,r,{value:a,enumerable:!0,configurable:!0,writable:!0}):o[r]=a})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}({},e.categories[n]))})),t=t.sort((function(e,t){return e.sort-t.sort}))},isStapledToOtherForm:function(){return this.allStapledFormCatIDs.includes(this.categoriesRecord.categoryID)},categoryName:function(){return""===this.categoriesRecord.categoryName?"Untitled":this.decodeAndStripHTML(this.categoriesRecord.categoryName)},formDescription:function(){return this.decodeAndStripHTML(this.categoriesRecord.categoryDescription)},workflowDescription:function(){return this.workflowID>0?"".concat(this.categoriesRecord.workflowDescription||"No Description"," (#").concat(this.categoriesRecord.workflowID,")"):"No Workflow"}},methods:{updateSort:function(){var e=this,t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"",o=parseInt(t.currentTarget.value);isNaN(o)||(o<-128&&(o=-128,t.currentTarget.value=-128),o>127&&(o=127,t.currentTarget.value=127),$.ajax({type:"POST",url:"".concat(this.APIroot,"formEditor/formSort"),data:{sort:o,categoryID:n,CSRFToken:this.CSRFToken},success:function(){e.updateCategoriesProperty(n,"sort",o)},error:function(e){return console.log("sort post err",e)}}))}},template:'<tr :id="catID" :title="catID + \': \' + categoryName">\n            <td height="40" class="form-name">\n                <router-link :to="{ name: \'category\', query: { formID: catID }}">\n                {{ categoryName }}\n                </router-link>\n            </td>\n            <td class="formPreviewDescription">{{ formDescription }}</td>\n            <td v-if="availability !== \'supplemental\'">{{ workflowDescription }}</td>\n            <td v-else>\n                <div v-if="allStapledFormCatIDs.includes(catID)" style="display: flex; justify-content: center;">\n                    <span role="img" aria="">ðŸ“‘</span>&nbsp;Stapled\n                </div>\n            </td>\n            <td>\n                <div v-if="parseInt(categoriesRecord.needToKnow) === 1" class="need-to-know-enabled">\n                    <img :src="libsPath + \'dynicons/svg/emblem-readonly.svg\'" alt="" style="width: 20px;margin-right:2px"/>\n                    &nbsp;<em>Need to Know enabled</em>\n                </div>\n            </td>\n            <td>\n                <input type="number" @change="updateSort($event, catID)"\n                    :aria-labelledby="availability + \'_sort\'"\n                    :value="categoriesRecord.sort" min="-128" max="127"\n                    style="width: 100%; min-width:50px;" />\n            </td>\n        </tr>\n        <template v-if="stapledForms.length > 0">\n            <tr v-for="form in stapledForms" :key="catID + \'_stapled_with_\' + form.categoryID" class="sub-row">\n                <td height="36" class="form-name">\n                    <router-link :to="{ name: \'category\', query: { formID: form.categoryID }}" class="router-link">\n                        <span role="img" aria="">ðŸ“Œ&nbsp;</span>\n                        <span style="text-decoration:underline;">{{ categories[form.categoryID].categoryName }}</span>\n                    </router-link>\n                </td>\n                <td>{{ categories[form.categoryID].categoryDescription }}</td>\n                <td></td>\n                <td>\n                    <div v-if="parseInt(categories[form.categoryID].needToKnow) === 1" class="need-to-know-enabled">\n                        <img :src="libsPath + \'dynicons/svg/emblem-readonly.svg\'" alt="" style="width: 20px;margin-right:2px"/>\n                        &nbsp;<em>Need to Know enabled</em>\n                    </div>\n                </td>\n                <td>\n                    <input type="number" @change="updateSort($event, form.categoryID)"\n                        :aria-labelledby="availability + \'_sort\'"\n                        :value="categories[form.categoryID].sort" min="-128" max="127"\n                        style="width: 100%; min-width:50px;" />\n                </td>\n            </tr>\n        </template>'};function s(e){return s="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},s(e)}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function d(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){var o,i,r;o=e,i=t,r=n[t],(i=function(e){var t=function(e,t){if("object"!==s(e)||null===e)return e;var n=e[Symbol.toPrimitive];if(void 0!==n){var o=n.call(e,"string");if("object"!==s(o))return o;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(e);return"symbol"===s(t)?t:String(t)}(i))in o?Object.defineProperty(o,i,{value:r,enumerable:!0,configurable:!0,writable:!0}):o[i]=r})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}const c={name:"form-editor-view",data:function(){return{dragLI_Prefix:"index_listing_",dragUL_Prefix:"drop_area_parent_",listTracker:{},allowedConditionChildFormats:["dropdown","text","multiselect","radio","checkboxes","","fileupload","image","textarea","orgchart_employee","orgchart_group","orgchart_position"],showToolbars:!0,sortOffset:128,sortLastUpdated:"",updateKey:0}},components:{FormEditingDisplay:{name:"FormEditingDisplay",props:{depth:Number,formNode:Object,index:Number},components:{FormatPreview:{props:{indicator:Object},inject:["libsPath","initializeOrgSelector","orgchartFormats","decodeAndStripHTML"],computed:{truncatedOptions:function(){var e;return(null===(e=this.indicator.options)||void 0===e?void 0:e.slice(0,6))||[]},baseFormat:function(){var e;return(null===(e=this.indicator.format)||void 0===e||null===(e=e.toLowerCase())||void 0===e?void 0:e.trim())||""},defaultValue:function(){var e;return(null===(e=this.indicator)||void 0===e?void 0:e.default)||""},strippedDefault:function(){return this.decodeAndStripHTML(this.defaultValue||"")},inputElID:function(){return"input_preview_".concat(this.indicator.indicatorID)},selType:function(){return this.baseFormat.slice(this.baseFormat.indexOf("_")+1)},labelSelector:function(){return this.indicator.indicatorID+"_format_label"},printResponseID:function(){return"xhrIndicator_".concat(this.indicator.indicatorID,"_").concat(this.indicator.series)},gridOptions:function(){var e,t=JSON.parse((null===(e=this.indicator)||void 0===e?void 0:e.options)||"[]");return t.map((function(e){e.name=XSSHelpers.stripAllTags(e.name),null!=e&&e.options&&e.options.map((function(e){return XSSHelpers.stripAllTags(e)}))})),t}},mounted:function(){var e,t,n,o,i,r=this;switch(this.baseFormat.toLowerCase()){case"raw_data":break;case"date":$("#".concat(this.inputElID)).datepicker({autoHide:!0,showAnim:"slideDown",onSelect:function(){$("#"+r.indicator.indicatorID+"_focusfix").focus()}}),null===(e=document.getElementById(this.inputElID))||void 0===e||e.setAttribute("aria-labelledby",this.labelSelector);break;case"dropdown":$("#".concat(this.inputElID)).chosen({disable_search_threshold:5,allow_single_deselect:!0,width:"50%"}),$("#".concat(this.inputElID,"_chosen input.chosen-search-input")).attr("aria-labelledby",this.labelSelector);break;case"multiselect":var a=document.getElementById(this.inputElID);if(null!==a&&!0===a.multiple&&"active"!==(null==a?void 0:a.getAttribute("data-choice"))){var s=this.indicator.options||[];s=s.map((function(e){return{value:e,label:e,selected:""!==r.strippedDefault&&r.strippedDefault===e}}));var l=new Choices(a,{allowHTML:!1,removeItemButton:!0,editItems:!0,choices:s.filter((function(e){return""!==e.value}))});a.choicesjs=l}$("#".concat(this.inputElID," ~ input.choices__input")).attr("aria-labelledby",this.labelSelector);break;case"orgchart_group":case"orgchart_position":case"orgchart_employee":this.initializeOrgSelector(this.selType,this.indicator.indicatorID,"",(null===(t=this.indicator)||void 0===t?void 0:t.default)||"");break;case"checkbox":null===(n=document.getElementById(this.inputElID+"_check0"))||void 0===n||n.setAttribute("aria-labelledby",this.labelSelector);break;case"checkboxes":case"radio":null===(o=document.querySelector("#".concat(this.printResponseID," .format-preview")))||void 0===o||o.setAttribute("aria-labelledby",this.labelSelector);break;default:null===(i=document.getElementById(this.inputElID))||void 0===i||i.setAttribute("aria-labelledby",this.labelSelector)}},methods:{useAdvancedEditor:function(){$("#"+this.inputElID).trumbowyg({btns:["bold","italic","underline","|","unorderedList","orderedList","|","justifyLeft","justifyCenter","justifyRight","fullscreen"]}),$("#textarea_format_button_".concat(this.indicator.indicatorID)).css("display","none")}},template:'<div class="format-preview">\n        <input v-if="baseFormat === \'text\'" :id="inputElID" type="text" :value="strippedDefault" class="text_input_preview"/>\n        <input v-if="baseFormat === \'number\'" :id="inputElID" type="number" :value="strippedDefault" class="text_input_preview"/>\n\n        <template v-if="baseFormat === \'currency\'">\n            $&nbsp;<input :id="inputElID" type="number" :value="strippedDefault"\n            min="0.00" step="0.01" class="text_input_preview"/>\n        </template>\n\n        <template v-if="baseFormat === \'textarea\'">\n            <textarea :id="inputElID" rows="6" class="textarea_input_preview" :value="strippedDefault"></textarea>\n            <div :id="\'textarea_format_button_\' + indicator.indicatorID"\n                @click="useAdvancedEditor" \n                style="text-align: right; font-size: 12px"><span class="link">formatting options</span>\n            </div>\n        </template>\n\n        <template v-if="baseFormat === \'radio\'">\n            <template v-for="o, i in truncatedOptions" :key="\'radio_prev_\' + indicator.indicatorID + \'_\' + i">\n                <label class="checkable leaf_check" :for="inputElID + \'_radio\' + i">\n                    <input type="radio" :id="inputElID + \'_radio\' + i" \n                    :name="indicator.indicatorID" class="icheck leaf_check"\n                    :checked="strippedDefault !== \'\' && strippedDefault === o" />\n                    <span class="leaf_check"></span>{{ o }}\n                </label>\n            </template>\n            <div v-if="indicator?.options?.length > 5" style="padding-left: 0.4em"><b> ...</b></div>\n        </template>\n\n        <template v-if="baseFormat === \'checkboxes\' || baseFormat === \'checkbox\'">\n            <template v-for="o, i in truncatedOptions" :key="\'check_prev_\' + indicator.indicatorID + \'_\' + i">\n                <label class="checkable leaf_check" :for="inputElID + \'_check\' + i">\n                    <input type="checkbox" :id="inputElID + \'_check\' + i" :name="indicator.indicatorID" class="icheck leaf_check"  :checked="strippedDefault !== \'\' && strippedDefault === o" />\n                    <span class="leaf_check"></span>{{ o }}\n                </label>\n            </template>\n            <div v-if="indicator?.options?.length > 5" style="padding-left: 0.4em"><b> ...</b></div>\n        </template>\n        \n        <fieldset v-if="baseFormat === \'fileupload\' || baseFormat === \'image\'" \n            style="padding: 0.5em;"><legend>File Attachment(s)</legend>\n            <p style="margin-bottom: 0.5em;">Select File to attach:</p>\n            <input :id="inputElID" name="formPacket" type="file" />\n        </fieldset>\n\n        <template v-if="baseFormat === \'date\'">\n            <input type="text" :id="inputElID"\n            :style="\'background: white url(\' + libsPath + \'dynicons/svg/office-calendar.svg) no-repeat 4px center; background-size: 16px;\'"\n            style="padding-left: 24px; font-size: 1.3em; font-family: monospace;" :value="indicator.default" />\n        </template>\n\n        <select v-if="baseFormat === \'dropdown\'" :id="inputElID" style="width: 50%" :value="strippedDefault">\n            <option v-for="o, i in truncatedOptions" :key="\'drop_prev_\' + indicator.indicatorID + \'_\' + i">\n            {{o}}\n            </option>\n            <option v-if="indicator?.options?.length > 5" style="padding-left: 0.4em" disabled>(preview showing first 5)</option>\n        </select>\n        \n        <select v-if="baseFormat === \'multiselect\'" multiple \n            :id="inputElID">\n            :name="\'multi_prev_\' + indicator.indicatorID + \'_multiselect[]\'"\n            style="display:none">\n        </select>\n        \n        <template v-if="orgchartFormats.includes(baseFormat)">\n            <div :id="\'orgSel_\' + indicator.indicatorID" style="min-height:30px"></div>\n        </template>\n\n        <template v-if="baseFormat === \'grid\'">\n            <div class="tableinput">\n                <table class="table" :id="\'grid_\' + indicator.indicatorID + \'_\' + indicator.series + \'_input\'"\n                    style="word-wrap: break-word; table-layout: fixed; height: 100%; display: table">\n\n                    <thead :id="\'gridTableHead_\' + indicator.indicatorID">\n                        <tr>\n                            <td v-for="o in gridOptions" :key="\'grid_head_\' + o.name">{{ o.name }}</td>\n                        </tr>\n                    </thead>\n                    <tbody :id="\'gridTableBody_\' + indicator.indicatorID">\n                        <tr>\n                            <td v-for="o in gridOptions" style="min-width: 150px;" :key="\'grid_body_\' + o.name">\n                                <input v-if="o.type === \'text\'" style="width: 100%;" :aria-label="o.name" />\n                                <textarea v-if="o.type === \'textarea\'" rows="3" style="resize:none; width: 100%;" :aria-label="o.name"></textarea>\n                                <input type="date" v-if="o.type === \'date\'" style="width: 100%;" :aria-label="o.name" />\n                                <select v-if="o.type === \'dropdown\'" style="width: 100%;" :aria-label="o.name">\n                                    <option v-for="option in o.options" :key="\'grid_drop_\' + option">{{option}}</option>\n                                </select>\n                            </td>\n                        </tr>\n                    </tbody>\n                </table>\n            </div>\n        </template>\n\n    </div>'}},inject:["libsPath","newQuestion","editQuestion","openAdvancedOptionsDialog","openIfThenDialog","listTracker","allowedConditionChildFormats","showToolbars","toggleToolbars","makePreviewKey"],computed:{isHeaderLocation:function(){var e=parseInt(this.formNode.indicatorID),t=this.listTracker[e];return null===(null==t?void 0:t.parentID)||null===(null==t?void 0:t.newParentID)},sensitiveImg:function(){return this.sensitive?'<img src="'.concat(this.libsPath,'dynicons/svg/eye_invisible.svg"\n                    style="width: 16px; margin-left: 4px;" alt="" class="sensitive-icon"\n                    title="This field is sensitive" />'):""},conditionalQuestion:function(){return!this.isHeaderLocation&&null!==this.formNode.conditions&&""!==this.formNode.conditions&"null"!==this.formNode.conditions},conditionsAllowed:function(){var e;return!this.isHeaderLocation&&this.allowedConditionChildFormats.includes(null===(e=this.formNode.format)||void 0===e?void 0:e.toLowerCase())},indicatorName:function(){var e=this.required?'<span class="input-required-sensitive">*&nbsp;Required</span>':"",t=this.sensitive?'<span class="input-required-sensitive">*&nbsp;Sensitive</span>':"",n=""!==this.formNode.name.trim()?this.formNode.name.trim():"[ blank ]";return"".concat(n).concat(e).concat(t,"  &nbsp;").concat(this.sensitiveImg)},indicatorFormat:function(){var e;return'<span style="font-weight: normal; font-size: 90%; color:#404046;">'.concat(null===(e=this.formNode)||void 0===e?void 0:e.format,"</span> ").concat(this.sensitiveImg)},printResponseID:function(){return"xhrIndicator_".concat(this.formNode.indicatorID,"_").concat(this.formNode.series)},required:function(){return 1===parseInt(this.formNode.required)},sensitive:function(){return 1===parseInt(this.formNode.is_sensitive)}},template:'<div class="printResponse" \n            :class="{\'form-header\': isHeaderLocation}"\n            style="margin-bottom: 1rem;"\n            :id="printResponseID">\n\n            \x3c!-- EDITING AREA FOR INDICATOR --\x3e\n            <div class="form_editing_area" style="display:flex"\n                :class="{\'conditional\': conditionalQuestion, \'form-header\': isHeaderLocation}">\n\n                <div style="width: 100%;">\n                    \x3c!-- NAME --\x3e\n                    <div style="display:flex;">\n                        <button v-show="showToolbars" type="button" @click="editQuestion(parseInt(formNode.indicatorID))"\n                            class="icon" :title="\'edit indicator \' + formNode.indicatorID" style="margin-top: 2px;">\n                            <img :src="libsPath + \'dynicons/svg/accessories-text-editor.svg\'" style="width: 20px" alt="" />\n                        </button>\n                        <div v-html="indicatorName" @click="toggleToolbars($event, parseInt(formNode.indicatorID))"\n                        class="indicator-name-preview" :id="formNode.indicatorID + \'_format_label\'"></div>\n                    </div>\n                    \x3c!-- FORMAT PREVIEW --\x3e\n                    <div v-if="formNode.format !== \'\'" class="form_data_entry_preview">\n                        <format-preview :indicator="formNode" :key="\'FP_\' + formNode.indicatorID"></format-preview>\n                    </div>\n                </div>\n                \x3c!-- TOOLBAR --\x3e\n                <div v-show="showToolbars"\n                    :style="{backgroundColor: required ? \'#eec8c8\' : \'#f2f2f5\'}"\n                    :id="\'form_editing_toolbar_\' + formNode.indicatorID"\n                    :class="{\'conditional\': conditionalQuestion}">\n\n                    <div v-html="indicatorFormat" style="white-space:nowrap;"></div>\n\n                    <div style="width:100%;">\n                        <div style="display:flex; align-items:center; margin-right: auto;">\n                            <img v-if="formNode.has_code" tabindex="0" title="advanced options are present"\n                            style="cursor:pointer; width: 20px;" :src="libsPath + \'dynicons/svg/document-properties.svg\'" alt="advanced options are present" />\n                        </div>\n                        <button v-if="conditionsAllowed" type="button" :id="\'edit_conditions_\' + formNode.indicatorID" \n                            @click="openIfThenDialog(parseInt(formNode.indicatorID), formNode.name.trim())" \n                            :title="\'Edit conditions for \' + formNode.indicatorID" class="icon">\n                            <img :src="libsPath + \'dynicons/svg/preferences-system.svg\'" style="width: 20px" alt="" />\n                        </button>\n                        <button type="button" @click="openAdvancedOptionsDialog(parseInt(formNode.indicatorID))"\n                            title="Open Advanced Options" class="icon">\n                            <img :src="libsPath + \'dynicons/svg/emblem-system.svg\'" style="width: 20px" alt="" />\n                        </button>\n                    </div>\n                    <button type="button" class="btn-general add-subquestion" \n                        :title="isHeaderLocation ? \'Add question to section\' : \'Add sub-question\'"\n                        @click="newQuestion(formNode.indicatorID)">\n                        + {{isHeaderLocation ? \'Add question to section\' : \'Add sub-question\'}}\n                    </button>\n                </div>\n            </div>\n\n            \x3c!-- NOTE: RECURSIVE SUBQUESTIONS --\x3e\n            <template v-if="formNode.child">\n                <form-editing-display v-for="child in formNode.child"\n                    :depth="depth + 1"\n                    :formNode="child"\n                    :key="\'FED_\' + child.indicatorID + makePreviewKey(child)">\n                </form-editing-display>\n            </template>\n        </div>'},FormIndexListing:{name:"FormIndexListing",data:function(){return{subMenuOpen:!1}},props:{depth:Number,formNode:Object,index:Number,parentID:Number},inject:["truncateText","clearListItem","addToListTracker","selectNewFormNode","selectedNodeIndicatorID","startDrag","onDragEnter","onDragLeave","onDrop","moveListing"],mounted:function(){if(this.addToListTracker(this.formNode,this.parentID,this.index),null!==this.selectedNodeIndicatorID&&this.selectedNodeIndicatorID===this.formNode.indicatorID){var e=document.getElementById("index_listing_".concat(this.selectedNodeIndicatorID));if(null!==e){var t=e.closest("li.section_heading");Array.from((null==t?void 0:t.querySelectorAll("li .sub-menu-chevron.closed"))||[]).forEach((function(e){return e.click()})),e.classList.add("index-selected")}}},beforeUnmount:function(){this.clearListItem(this.formNode.indicatorID)},methods:{indexHover:function(){var e,t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};null==t||null===(e=t.currentTarget)||void 0===e||e.classList.add("index-selected")},indexHoverOff:function(){var e,t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};null==t||null===(e=t.currentTarget)||void 0===e||e.classList.remove("index-selected")},toggleSubMenu:function(){var e,t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};32===(null==t?void 0:t.keyCode)&&t.preventDefault(),this.subMenuOpen=!this.subMenuOpen,null===(e=t.currentTarget.closest("li"))||void 0===e||e.focus()}},computed:{headingNumber:function(){return 0===this.depth?this.index+1+".":""},hasConditions:function(){return 0!==this.depth&&null!==this.formNode.conditions&&""!==this.formNode.conditions&&"null"!==this.formNode.conditions},indexDisplay:function(){var e=this.formNode.description?XSSHelpers.stripAllTags(this.formNode.description):XSSHelpers.stripAllTags(this.formNode.name);return XSSHelpers.decodeHTMLEntities(this.truncateText(e))||"[ blank ]"},suffix:function(){return"".concat(this.formNode.indicatorID,"_").concat(this.formNode.series)},required:function(){return 1===parseInt(this.formNode.required)},isEmpty:function(){return!0===this.formNode.isEmpty}},template:'\n        <li tabindex=0 :title="\'index item \'+ formNode.indicatorID"\n            :class="depth === 0 ? \'section_heading\' : \'subindicator_heading\'"\n            @mouseover.stop="indexHover" @mouseout.stop="indexHoverOff"\n            @click.stop="selectNewFormNode($event, formNode)"\n            @keypress.enter.stop="selectNewFormNode($event, formNode)">\n            <div>\n                <span v-if="hasConditions" title="question is conditionally shown">â†’</span>\n                {{headingNumber}}&nbsp;{{indexDisplay}}\n                <div class="icon_move_container">\n                    <div v-show="formNode.indicatorID === selectedNodeIndicatorID" \n                        tabindex="0" class="icon_move up" role="button" title="move item up"\n                        @click.stop="moveListing($event, selectedNodeIndicatorID, true)"\n                        @keydown.stop.enter.space="moveListing($event, selectedNodeIndicatorID, true)">\n                    </div>\n                    <div v-show="formNode.indicatorID === selectedNodeIndicatorID"\n                        tabindex="0" class="icon_move down" role="button" title="move item down"\n                        @click.stop="moveListing($event, selectedNodeIndicatorID, false)"\n                        @keydown.stop.enter.space="moveListing($event, selectedNodeIndicatorID, false)">\n                    </div>\n                </div>\n                <div v-if="formNode.child" tabindex="0" class="sub-menu-chevron" :class="{closed: !subMenuOpen}"\n                    @click.stop="toggleSubMenu($event)"\n                    @keydown.stop.enter.space="toggleSubMenu($event)">\n                    <span v-show="subMenuOpen" role="img" aria="">â–¾</span>\n                    <span v-show="!subMenuOpen" role="img" aria="">â–¸</span>\n                </div>\n            </div>\n            \n            \x3c!-- NOTE: RECURSIVE SUBQUESTIONS. ul for each for drop zones --\x3e\n            <ul class="form-index-listing-ul" :id="\'drop_area_parent_\'+ formNode.indicatorID"\n                data-effect-allowed="move"\n                @drop.stop="onDrop"\n                @dragover.prevent\n                @dragenter.prevent="onDragEnter"\n                @dragleave="onDragLeave">\n\n                <template v-if="formNode.child">\n                    <form-index-listing v-show="subMenuOpen" v-for="(child, k, i) in formNode.child"\n                        :id="\'index_listing_\' + child.indicatorID"\n                        :depth="depth + 1"\n                        :parentID="formNode.indicatorID"\n                        :formNode="child"\n                        :index="i"\n                        :key="\'index_list_item_\' + child.indicatorID"\n                        draggable="true"\n                        @dragstart.stop="startDrag"> \n                    </form-index-listing>\n                </template>\n            </ul>\n        </li>'},EditPropertiesPanel:{data:function(){var e,t,n,o,i,r,a,s,l;return{categoryName:this.decodeAndStripHTML((null===(e=this.focusedFormRecord)||void 0===e?void 0:e.categoryName)||"Untitled"),categoryDescription:this.decodeAndStripHTML((null===(t=this.focusedFormRecord)||void 0===t?void 0:t.categoryDescription)||""),workflowID:parseInt(null===(n=this.focusedFormRecord)||void 0===n?void 0:n.workflowID)||0,needToKnow:parseInt(null===(o=this.focusedFormRecord)||void 0===o?void 0:o.needToKnow)||0,visible:parseInt(null===(i=this.focusedFormRecord)||void 0===i?void 0:i.visible)||0,type:(null===(r=this.focusedFormRecord)||void 0===r?void 0:r.type)||"",formID:(null===(a=this.focusedFormRecord)||void 0===a?void 0:a.categoryID)||"",formParentID:(null===(s=this.focusedFormRecord)||void 0===s?void 0:s.parentID)||"",destructionAge:(null===(l=this.focusedFormRecord)||void 0===l?void 0:l.destructionAge)||null,lastUpdated:""}},inject:["APIroot","CSRFToken","workflowRecords","allStapledFormCatIDs","focusedFormRecord","focusedFormIsSensitive","updateCategoriesProperty","openEditCollaboratorsDialog","openFormHistoryDialog","showLastUpdate","truncateText","decodeAndStripHTML"],computed:{workflowDescription:function(){var e=this,t="";if(0!==this.workflowID){var n=this.workflowRecords.find((function(t){return parseInt(t.workflowID)===e.workflowID}));t=(null==n?void 0:n.description)||""}return t},isSubForm:function(){return""!==this.focusedFormRecord.parentID},isStaple:function(){return this.allStapledFormCatIDs.includes(this.formID)},isNeedToKnow:function(){return 1===parseInt(this.focusedFormRecord.needToKnow)},formNameCharsRemaining:function(){return 50-this.categoryName.length},formDescrCharsRemaining:function(){return 255-this.categoryDescription.length}},methods:{updateName:function(){var e=this;$.ajax({type:"POST",url:"".concat(this.APIroot,"formEditor/formName"),data:{name:this.categoryName,categoryID:this.formID,CSRFToken:this.CSRFToken},success:function(){e.updateCategoriesProperty(e.formID,"categoryName",e.categoryName),e.lastUpdated=(new Date).toLocaleString(),e.showLastUpdate("form_properties_last_update","last modified: ".concat(e.lastUpdated))},error:function(e){return console.log("name post err",e)}})},updateDescription:function(){var e=this;$.ajax({type:"POST",url:"".concat(this.APIroot,"formEditor/formDescription"),data:{description:this.categoryDescription,categoryID:this.formID,CSRFToken:this.CSRFToken},success:function(){e.updateCategoriesProperty(e.formID,"categoryDescription",e.categoryDescription),e.lastUpdated=(new Date).toLocaleString(),e.showLastUpdate("form_properties_last_update","last modified: ".concat(e.lastUpdated))},error:function(e){return console.log("form description post err",e)}})},updateWorkflow:function(){var e=this;$.ajax({type:"POST",url:"".concat(this.APIroot,"formEditor/formWorkflow"),data:{workflowID:this.workflowID,categoryID:this.formID,CSRFToken:this.CSRFToken},success:function(t){!1===t?alert("The workflow could not be set because this form is stapled to another form"):(e.updateCategoriesProperty(e.formID,"workflowID",e.workflowID),e.updateCategoriesProperty(e.formID,"workflowDescription",e.workflowDescription),e.lastUpdated=(new Date).toLocaleString(),e.showLastUpdate("form_properties_last_update","last modified: ".concat(e.lastUpdated)))},error:function(e){return console.log("workflow post err",e)}})},updateAvailability:function(){var e=this;$.ajax({type:"POST",url:"".concat(this.APIroot,"formEditor/formVisible"),data:{visible:this.visible,categoryID:this.formID,CSRFToken:this.CSRFToken},success:function(){e.updateCategoriesProperty(e.formID,"visible",e.visible),e.lastUpdated=(new Date).toLocaleString(),e.showLastUpdate("form_properties_last_update","last modified: ".concat(e.lastUpdated))},error:function(e){return console.log("visibility post err",e)}})},updateNeedToKnow:function(){var e=this;$.ajax({type:"POST",url:"".concat(this.APIroot,"formEditor/formNeedToKnow"),data:{needToKnow:this.needToKnow,categoryID:this.formID,CSRFToken:this.CSRFToken},success:function(){e.updateCategoriesProperty(e.formID,"needToKnow",e.needToKnow),e.lastUpdated=(new Date).toLocaleString(),e.showLastUpdate("form_properties_last_update","last modified: ".concat(e.lastUpdated))},error:function(e){return console.log("ntk post err",e)}})},updateType:function(){var e=this;$.ajax({type:"POST",url:"".concat(this.APIroot,"formEditor/formType"),data:{type:this.type,categoryID:this.formID,CSRFToken:this.CSRFToken},success:function(){e.updateCategoriesProperty(e.formID,"type",e.type),e.lastUpdated=(new Date).toLocaleString(),e.showLastUpdate("form_properties_last_update","last modified: ".concat(e.lastUpdated))},error:function(e){return console.log("type post err",e)}})},updateDestructionAge:function(){var e=this;(null===this.destructionAge||this.destructionAge>=1&&this.destructionAge<=30)&&$.ajax({type:"POST",url:"".concat(this.APIroot,"formEditor/destructionAge"),data:{destructionAge:this.destructionAge,categoryID:this.formID,CSRFToken:this.CSRFToken},success:function(t){t===e.destructionAge&&(e.updateCategoriesProperty(e.formID,"destructionAge",e.destructionAge),e.lastUpdated=(new Date).toLocaleString(),e.showLastUpdate("form_properties_last_update","last modified: ".concat(e.lastUpdated)))},error:function(e){return console.log("destruction age post err",e)}})}},template:'<div id="edit-properties-panel">\n        <span class="form-id">{{formID}}\n            <span v-if="formParentID">(internal for {{formParentID}})</span>\n        </span>\n        <div id="edit-properties-description">\n            <label for="categoryName">Form name\n                <span style="margin-left:auto; font-size:80%; align-self:flex-end;">({{formNameCharsRemaining}})</span>\n            </label>\n            <input id="categoryName" type="text" maxlength="50" v-model="categoryName" style="margin-bottom: 1rem;" @change="updateName"/>\n            \n            <label for="categoryDescription">Form description\n                <span style="margin-left:auto; font-size:80%; align-self:flex-end;">({{formDescrCharsRemaining}})</span>\n            </label>\n            <textarea id="categoryDescription" maxlength="255" v-model="categoryDescription" rows="3" @change="updateDescription"></textarea>\n        </div>\n        <div id="edit-properties-other-properties">\n            <div style="display:flex; justify-content: space-between;">\n                <button type="button" id="editFormPermissions" class="btn-general"\n                    style="width: fit-content;"\n                    @click="openEditCollaboratorsDialog">\n                    Edit Special Write Access\n                </button>\n                <button type="button" id="form_properties_last_update" @click.prevent="openFormHistoryDialog"\n                    :style="{display: lastUpdated===\'\' ? \'none\' : \'flex\'}">\n                </button>\n            </div>\n            <template v-if="!isSubForm">\n                <div class="panel-properties">\n                    <template v-if="!isStaple && workflowRecords.length > 0">\n                        <label for="workflowID">Workflow\n                        <select id="workflowID" name="select-workflow" @change="updateWorkflow"\n                            title="select workflow"\n                            v-model.number="workflowID"\n                            style="width:280px;"\n                            :style="{color: workflowID === 0 ? \'#a00\' : \'black\'}"\n                            :disabled="isStaple">\n                            <option value="0" :selected="workflowID === 0">\n                                No Workflow.  Users cannot submit requests\n                            </option>\n                            <template v-for="r in workflowRecords" :key="\'workflow_\' + r.workflowID">\n                                <option v-if="parseInt(r.workflowID) > 0"\n                                    :value="r.workflowID"\n                                    :selected="workflowID === parseInt(r.workflowID)">\n                                    ID#{{r.workflowID}}: {{truncateText(r.description,32)}}\n                                </option>\n                            </template>\n                        </select></label>\n                    </template>\n                    <div v-if="workflowRecords.length === 0" style="color: #a00; width: 100%; margin-bottom: 0.5rem;">A workflow must be set up first</div>\n\n                    <label for="availability" title="When hidden, users will not be able to select this form">Availability\n                        <select id="availability" title="Select Availability" v-model.number="visible" @change="updateAvailability">\n                            <option value="1" :selected="visible === 1">Available</option>\n                            <option value="0" :selected="visible === 0">Hidden</option>\n                        </select>\n                    </label>\n                    <label for="formType">Form Type\n                        <select id="formType" title="Change type of form" v-model="type" @change="updateType">\n                            <option value="" :selected="type === \'\'">Standard</option>\n                            <option value="parallel_processing" :selected="type === \'parallel_processing\'">Parallel Processing</option>\n                        </select>\n                    </label>\n                    <div style="display:flex; align-items: center; column-gap: 1rem;">\n                        <label for="destructionAgeYears" title="Resolved requests that have reached this expiration date will be destroyed" >Record Destruction Age (Years)\n                            <select id="destructionAgeYears" v-model="destructionAge"\n                                title="resolved request destruction age in years" \n                                @change="updateDestructionAge">\n                                <option :value="null" :selected="destructionAge===null">never</option>\n                                <option v-for="i in 30" :value="i">{{i}}</option>\n                            </select>\n                        </label>\n                    </div>\n                    <div v-if="focusedFormIsSensitive" style="display:flex; color: #a00;">\n                        <div style="display:flex; align-items: center;"><b>Need to know: {{isNeedToKnow ? \'on\' : \'off\'}}</b></div> &nbsp;\n                        <div style="display:flex; align-items: center; font-size:90%;">(forced on because sensitive fields are present)</div>\n                    </div>\n                    <label v-else for="needToKnow"\n                        title="When turned on, the people associated with the workflow are the only ones who have access to view the form. \nForced on if the form contains sensitive information.">Need to know\n                        <select id="needToKnow" v-model.number="needToKnow" :style="{color: isNeedToKnow ? \'#a00\' : \'black\'}" @change="updateNeedToKnow">\n                            <option value="0" :selected="!isNeedToKnow">Off</option>\n                            <option value="1" style="color: #a00;" :selected="isNeedToKnow">On</option>\n                        </select>\n                    </label>\n                </div>\n            </template>\n            <div v-else style="margin-top: auto;">This is an Internal Form</div>\n        </div>\n    </div>'},FormBrowser:{data:function(){return{test:"test"}},inject:["appIsLoadingCategoryList","showCertificationStatus","secureStatusText","secureBtnText","secureBtnLink","activeForms","inactiveForms","supplementalForms"],components:{CategoryItem:a},template:'<template v-if="appIsLoadingCategoryList === false">\n        \x3c!-- secure form section --\x3e\n        <div v-if="showCertificationStatus" id="secure_forms_info" style="padding: 8px; background-color: #a00; margin-bottom:1em;">\n            <span id="secureStatus" style="font-size: 120%; padding: 4px; color: white; font-weight: bold;">{{secureStatusText}}</span>\n            <a id="secureBtn" :href="secureBtnLink" target="_blank" class="buttonNorm">{{secureBtnText}}</a>\n        </div>\n\n        \x3c!-- form browser tables --\x3e\n        <div id="form_browser_tables">\n            <h3>Active Forms:</h3>\n            <table v-if="activeForms.length > 0" id="active_forms">\n                <tr class="header-row">\n                    <th id="active_name" style="width:250px">Form Name</th>\n                    <th style="width:400px">Description</th>\n                    <th style="width:250px">Workflow</th>\n                    <th style="width:125px">Need to Know</th>\n                    <th id="active_sort" style="width:80px">Priority</th>\n                </tr>\n                <category-item v-for="c in activeForms" \n                    :categories-record="c" \n                    availability="active" \n                    :key="\'active_\' + c.categoryID">\n                </category-item>\n            </table>\n            <p v-else style="margin-bottom: 2rem;">No Active Forms</p>\n\n            <h3>Inactive Forms:</h3>\n            <table v-if="inactiveForms.length > 0" id="inactive_forms">\n                <tr class="header-row">\n                    <th id="inactive_name" style="width:250px">Form Name</th>\n                    <th style="width:400px">Description</th>\n                    <th style="width:250px">Workflow</th>\n                    <th style="width:125px">Need to Know</th>\n                    <th id="inactive_sort" style="width:80px">Priority</th>\n                </tr>\n                <category-item v-for="c in inactiveForms" \n                    :categories-record="c" \n                    availability="inactive" \n                    :key="\'inactive_\' + c.categoryID">\n                </category-item>\n            </table>\n            <p v-else style="margin-bottom: 2rem;">No Inctive Forms</p>\n\n            <h3>Supplemental Forms:</h3>\n            <table v-if="supplementalForms.length > 0" id="supplemental_forms">\n                <tr class="header-row">\n                    <th id="supplemental_name" style="width:250px">Form Name</th>\n                    <th style="width:400px">Description</th>\n                    <th style="width:250px">Staple Status</th>\n                    <th style="width:125px">Need to Know</th>\n                    <th id="supplemental_sort" style="width:80px">Priority</th>\n                </tr>\n                <category-item v-for="c in supplementalForms" \n                    :categories-record="c" \n                    availability="supplemental" \n                    :key="\'supplement_\' + c.categoryID">\n                </category-item>\n            </table>\n            <p v-else style="margin-bottom: 2rem;">No Supplemental Forms</p>\n        </div>\n    </template>'}},inject:["APIroot","CSRFToken","libsPath","setDefaultAjaxResponseMessage","appIsLoadingCategoryList","appIsLoadingForm","categories","internalFormRecords","selectedNodeIndicatorID","selectedFormNode","getFormByCategoryID","showLastUpdate","openFormHistoryDialog","newQuestion","editQuestion","focusedFormRecord","focusedFormTree","openNewFormDialog","currentFormCollection","decodeAndStripHTML","truncateText"],mounted:function(){},beforeRouteEnter:function(e,t,n){n((function(e){e.setDefaultAjaxResponseMessage()}))},provide:function(){var e=this;return{listTracker:(0,o.Fl)((function(){return e.listTracker})),showToolbars:(0,o.Fl)((function(){return e.showToolbars})),clearListItem:this.clearListItem,addToListTracker:this.addToListTracker,allowedConditionChildFormats:this.allowedConditionChildFormats,startDrag:this.startDrag,onDragEnter:this.onDragEnter,onDragLeave:this.onDragLeave,onDrop:this.onDrop,moveListing:this.moveListing,toggleToolbars:this.toggleToolbars,makePreviewKey:this.makePreviewKey}},computed:{focusedFormID:function(){var e;return(null===(e=this.focusedFormRecord)||void 0===e?void 0:e.categoryID)||""},currentSectionNumber:function(){var e,t=parseInt(null===(e=this.selectedFormNode)||void 0===e?void 0:e.indicatorID),n=Array.from(document.querySelectorAll("#base_drop_area > li")),o=document.getElementById("index_listing_".concat(t)),i=n.indexOf(o);return-1===i?"":i+1},sortOrParentChanged:function(){return this.sortValuesToUpdate.length>0||this.parentIDsToUpdate.length>0},sortValuesToUpdate:function(){var e=[];for(var t in this.listTracker)this.listTracker[t].sort!==this.listTracker[t].listIndex-this.sortOffset&&e.push(d({indicatorID:parseInt(t)},this.listTracker[t]));return e},parentIDsToUpdate:function(){var e=[];for(var t in this.listTracker)""!==this.listTracker[t].newParentID&&this.listTracker[t].parentID!==this.listTracker[t].newParentID&&e.push(d({indicatorID:parseInt(t)},this.listTracker[t]));return e},indexHeaderText:function(){return""!==this.focusedFormRecord.parentID?"Internal Form":this.currentFormCollection.length>1?"Form Layout":"Primary Form"}},methods:{forceUpdate:function(){this.updateKey+=1},moveListing:function(){var e,t=this,n=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},o=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,i=arguments.length>2&&void 0!==arguments[2]&&arguments[2];32===(null==n?void 0:n.keyCode)&&n.preventDefault();var r,a,s=null==n||null===(e=n.currentTarget)||void 0===e?void 0:e.closest("ul"),l=document.getElementById("index_listing_".concat(o)),d=Array.from(document.querySelectorAll("#".concat(s.id," > li"))),c=d.filter((function(e){return e!==l})),p=this.listTracker[o];i?p.listIndex>0&&(c.splice(p.listIndex-1,0,l),d.forEach((function(e){return s.removeChild(e)})),c.forEach((function(e,n){var o=parseInt(e.id.replace("index_listing_",""));s.appendChild(e),t.listTracker[o].listIndex=n})),null==n||null===(r=n.currentTarget)||void 0===r||r.focus()):p.listIndex<d.length-1&&(c.splice(p.listIndex+1,0,l),d.forEach((function(e){return s.removeChild(e)})),c.forEach((function(e,n){var o=parseInt(e.id.replace("index_listing_",""));s.appendChild(e),t.listTracker[o].listIndex=n})),null==n||null===(a=n.currentTarget)||void 0===a||a.focus())},applySortAndParentID_Updates:function(){var e=this,t=[];if(this.sortValuesToUpdate.length>0){var n=[];this.sortValuesToUpdate.forEach((function(t){n.push({indicatorID:t.indicatorID,sort:t.listIndex-e.sortOffset})})),t.push($.ajax({type:"POST",url:"".concat(this.APIroot,"formEditor/sort/batch"),data:{sortData:n,CSRFToken:this.CSRFToken},success:function(){},error:function(e){return console.log("ind sort post err",e)}}))}var o=[];this.parentIDsToUpdate.forEach((function(t){o.push($.ajax({type:"POST",url:"".concat(e.APIroot,"formEditor/").concat(t.indicatorID,"/parentID"),data:{parentID:t.newParentID,CSRFToken:e.CSRFToken},success:function(){},error:function(e){return console.log("ind parentID post err",e)}}))}));var i=t.concat(o);Promise.all(i).then((function(t){t.length>0&&e.getFormByCategoryID(e.focusedFormID,e.selectedNodeIndicatorID).then((function(){e.sortLastUpdated=(new Date).toLocaleString(),e.showLastUpdate("form_index_last_update","last modified: ".concat(e.sortLastUpdated)),e.forceUpdate()})).catch((function(e){return console.log(e)}))})).catch((function(e){return console.log("an error has occurred",e)}))},clearListItem:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:0;this.listTracker[e]&&delete this.listTracker[e]},addToListTracker:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0,o=e.indicatorID,i={sort:e.sort,parentID:t,listIndex:n,newParentID:""};this.listTracker[o]=i},updateListTracker:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:0,t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0,o=d({},this.listTracker[e]);o.listIndex=n,o.newParentID=t,this.listTracker[e]=o},startDrag:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};null!=e&&e.dataTransfer&&(e.dataTransfer.dropEffect="move",e.dataTransfer.effectAllowed="move",e.dataTransfer.setData("text/plain",e.target.id))},onDrop:function(){var e=this,t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};if(null!=t&&t.dataTransfer&&"move"===t.dataTransfer.effectAllowed){t.preventDefault();var n=t.dataTransfer.getData("text"),o=t.currentTarget,i=parseInt(n.replace(this.dragLI_Prefix,"")),r="base_drop_area"===o.id?null:parseInt(o.id.replace(this.dragUL_Prefix,"")),a=Array.from(document.querySelectorAll("#".concat(o.id," > li")));if(0===a.length)try{o.append(document.getElementById(n)),this.updateListTracker(i,r,0)}catch(e){console.log(e)}else{var s=9999,l=null;a.forEach((function(e){var o=e.getBoundingClientRect().top-t.clientY;e.id!==n&&o>0&&o<s&&(s=o,l=e.id)}));try{null!==l?o.insertBefore(document.getElementById(n),document.getElementById(l)):o.append(document.getElementById(n)),Array.from(document.querySelectorAll("#".concat(o.id," > li"))).forEach((function(t,n){var o=parseInt(t.id.replace(e.dragLI_Prefix,""));e.updateListTracker(o,r,n)}))}catch(e){console.log(e)}}o.classList.contains("entered-drop-zone")&&t.target.classList.remove("entered-drop-zone")}},onDragLeave:function(){var e,t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};null!=t&&null!==(e=t.target)&&void 0!==e&&e.classList.contains("form-index-listing-ul")&&t.target.classList.remove("entered-drop-zone")},onDragEnter:function(){var e,t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};null!=t&&t.dataTransfer&&"move"===t.dataTransfer.effectAllowed&&null!=t&&null!==(e=t.target)&&void 0!==e&&e.classList.contains("form-index-listing-ul")&&t.target.classList.add("entered-drop-zone")},toggleToolbars:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null;if(null==e||e.stopPropagation(),32===(null==e?void 0:e.keyCode)&&e.preventDefault(),e.currentTarget.classList.contains("indicator-name-preview"))if(this.showToolbars)t&&this.editQuestion(t);else{var n=e.currentTarget.id,o=e.currentTarget.getBoundingClientRect().top;this.showToolbars=!0,setTimeout((function(){var e=document.getElementById(n).getBoundingClientRect().top;window.scrollBy(0,e-o)}))}else this.showToolbars=!this.showToolbars},shortFormNameStripped:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"",t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:21,n=this.categories[e]||"",o=this.decodeAndStripHTML((null==n?void 0:n.categoryName)||"Untitled");return this.truncateText(o,t).trim()},layoutBtnIsDisabled:function(e){return e.categoryID===this.focusedFormRecord.categoryID&&null===this.selectedFormNode},makePreviewKey:function(e){var t;return"".concat(e.format).concat((null==e||null===(t=e.options)||void 0===t?void 0:t.join())||"","_").concat((null==e?void 0:e.default)||"")}},watch:{sortOrParentChanged:function(e,t){!0===e&&this.applySortAndParentID_Updates()}},template:'<div id="formEditor_content">\n    <div v-if="appIsLoadingForm || appIsLoadingCategoryList" style="border: 2px solid black; text-align: center; \n        font-size: 24px; font-weight: bold; padding: 16px;">\n        Loading... \n        <img src="../images/largespinner.gif" alt="loading..." />\n    </div>\n\n    <template v-else>\n        <FormBrowser v-if="focusedFormID===\'\'"></FormBrowser>\n\n        <template v-else>\n            \x3c!-- TOP INFO PANEL --\x3e\n            <edit-properties-panel :key="\'panel_\' + focusedFormID"></edit-properties-panel>\n\n            <div id="form_index_and_editing">\n                \x3c!-- FORM INDEX --\x3e\n                <div id="form_index_display">\n                    <div style="display:flex; align-items: center; justify-content: space-between; height: 28px; margin-bottom: 0.5rem;">\n                        <h3 style="margin: 0; color: black;">{{ indexHeaderText }}</h3>\n                        <img v-if="currentFormCollection.length > 1" \n                            :src="libsPath + \'dynicons/svg/emblem-notice.svg\'"\n                            style="width: 16px; margin-left: 0.25rem; margin-right:auto;" \n                            title="Details for the selected form are shown below" alt="" />\n                        <button type="button" id="form_index_last_update" @click.prevent="openFormHistoryDialog"\n                            :style="{display: sortLastUpdated===\'\' ? \'none\' : \'flex\'}">\n                        </button>\n                    </div>\n                    \x3c!-- FORM LAYOUT OVERVIEW --\x3e\n                    <div v-if="currentFormCollection.length > 1" :id="\'layoutFormRecords_\' + $route.query.formID">\n                        <ul>\n                            <li v-for="form in currentFormCollection" :key="\'form_layout_item_\' + form.categoryID" draggable="false">\n                                <button type="button" @click="getFormByCategoryID(form.categoryID)"\n                                    class="layout-listitem" :disabled="layoutBtnIsDisabled(form)"\n                                    :title="\'form \' + form.categoryID">\n                                    <span :style="{textDecoration: layoutBtnIsDisabled(form) ? \'none\' : \'underline\'}">\n                                        {{shortFormNameStripped(form.categoryID, 38)}}&nbsp;\n                                    </span>\n                                    <span v-if="form.formContextType === \'staple\'" role="img" aria="">ðŸ“Œ</span>\n                                    <em v-show="form.categoryID === focusedFormID" style="font-weight: normal; text-decoration: none;">\n                                        (selected)\n                                    </em>\n                                    <em v-show="form.categoryID === focusedFormRecord.parentID" style="font-weight: normal; text-decoration: none;">\n                                        (parent)\n                                    </em>\n                                </button>\n                                \x3c!-- focused drop zone for collection --\x3e\n                                <ul v-if="form.categoryID === focusedFormID && focusedFormTree.length > 0"\n                                    id="base_drop_area" :key="\'drop_zone_collection_\' + form.categoryID + \'_\' + updateKey"\n                                    class="form-index-listing-ul"\n                                    data-effect-allowed="move"\n                                    @drop.stop="onDrop"\n                                    @dragover.prevent\n                                    @dragenter.prevent="onDragEnter"\n                                    @dragleave="onDragLeave">\n\n                                    <form-index-listing v-for="(formSection, i) in focusedFormTree"\n                                        :id="\'index_listing_\'+formSection.indicatorID"\n                                        :depth=0\n                                        :formNode="formSection"\n                                        :index=i\n                                        :parentID=null\n                                        :key="\'index_list_item_\' + formSection.indicatorID"\n                                        draggable="true"\n                                        @dragstart.stop="startDrag">\n                                    </form-index-listing>\n                                </ul>\n                            </li>\n                        </ul>\n                    </div>\n                    \x3c!-- focused drop zone for single form --\x3e\n                    <template v-else>\n                        <ul v-if="focusedFormTree.length > 0"\n                            id="base_drop_area" :key="\'drop_zone_primary\' + updateKey"\n                            class="form-index-listing-ul"\n                            data-effect-allowed="move"\n                            @drop.stop="onDrop"\n                            @dragover.prevent\n                            @dragenter.prevent="onDragEnter"\n                            @dragleave="onDragLeave">\n\n                            <form-index-listing v-for="(formSection, i) in focusedFormTree"\n                                :id="\'index_listing_\'+formSection.indicatorID"\n                                :depth=0\n                                :formNode="formSection"\n                                :index=i\n                                :parentID=null\n                                :key="\'index_list_item_\' + formSection.indicatorID"\n                                draggable="true"\n                                @dragstart.stop="startDrag">\n                            </form-index-listing>\n                        </ul>\n                    </template>\n\n                    <div style="margin: 0.5rem 0 0 0">\n                        <button type="button" class="btn-general" style="width: 100%" \n                            @click="newQuestion(null)"\n                            id="add_new_form_section"\n                            title="Add new form section">\n                            + Add Section\n                        </button>\n                    </div>\n                    \x3c!-- INTERNAL FORMS SECTION --\x3e\n                    <div v-if="focusedFormRecord?.parentID === \'\' && focusedFormTree.length > 0"\n                        :id="\'internalFormRecords_\' + focusedFormID"  style="margin-top: 0.5rem;">\n                        <ul>\n                            <li>\n                                <button type="button" id="addInternalUse" @click="openNewFormDialog($event, focusedFormRecord.categoryID)"\n                                    title="New Internal-Use Form" style="color: black;">\n                                    Add Internal-Use&nbsp;<span role="img" aria="">âž•</span>\n                                </button>\n                            </li>\n                            <li v-for="i in internalFormRecords" :key="\'internal_\' + i.categoryID">\n                                <button @click="getFormByCategoryID(i.categoryID)">\n                                    <span class="internal">\n                                        {{shortFormNameStripped(i.categoryID, 45)}}\n                                    </span>\n                                </button>\n                            </li>\n                        </ul>\n                    </div>\n                </div>\n\n                \x3c!-- NOTE: FORM EDITING AND ENTRY PREVIEW --\x3e\n                <template v-if="focusedFormTree.length > 0">\n                    \x3c!-- ENTIRE FORM EDIT / PREVIEW --\x3e\n                    <div v-if="selectedFormNode === null" id="form_entry_and_preview">\n                        <div class="form-section-header" style="display: flex;">\n                            <h3 style="margin: 0; color: black;">Form Editing and Preview</h3>\n                            <button type="button" id="indicator_toolbar_toggle" class="btn-general"\n                                @click.stop="toggleToolbars($event)">\n                                {{showToolbars ? \'Preview This Section\' : \'Edit This Section\'}}\n                            </button>\n                        </div>\n                        <template v-for="(formSection, i) in focusedFormTree" :key="\'editing_display_\' + formSection.indicatorID">\n                            <div class="printformblock">\n                                <form-editing-display \n                                    :depth="0"\n                                    :formNode="formSection"\n                                    :index="i"\n                                    :key="\'FED_\' + formSection.indicatorID + makePreviewKey(formSection)">\n                                </form-editing-display>\n                            </div>\n                        </template>\n                    </div>\n                    \x3c!-- SUBSECTION EDIT / PREVIEW --\x3e\n                    <div v-else id="form_entry_and_preview">\n                        <div class="form-section-header" style="display: flex;">\n                            <h3 style="margin: 0; color: black;">Form {{currentSectionNumber !== \'\' ? \'Page \' + currentSectionNumber : \'Selection\'}}</h3>\n                            <button type="button" id="indicator_toolbar_toggle" class="btn-general"\n                                @click.stop="toggleToolbars($event)">\n                                {{showToolbars ? \'Preview This Section\' : \'Edit This Section\'}}\n                            </button>\n                        </div>\n                        <div class="printformblock">\n                            <form-editing-display \n                                :depth="0"\n                                :formNode="selectedFormNode"\n                                :index="-1"\n                                :key="\'FED_\' + selectedFormNode.indicatorID + makePreviewKey(selectedFormNode)">\n                            </form-editing-display>\n                        </div>\n                    </div>\n                </template>\n            </div>\n        </template>\n    </template>\n</div>'}}}]);
