/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./libs/js/LEAF/dialog_vue/LEAF_FormEditor_App_vue.js":
/*!************************************************************!*\
  !*** ./libs/js/LEAF/dialog_vue/LEAF_FormEditor_App_vue.js ***!
  \************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _components_LeafFormDialog_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./components/LeafFormDialog.js */ \"./libs/js/LEAF/dialog_vue/components/LeafFormDialog.js\");\n/* harmony import */ var _components_dialog_content_IndicatorEditing_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./components/dialog_content/IndicatorEditing.js */ \"./libs/js/LEAF/dialog_vue/components/dialog_content/IndicatorEditing.js\");\n/* harmony import */ var _components_dialog_content_EditPropertiesDialog_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./components/dialog_content/EditPropertiesDialog.js */ \"./libs/js/LEAF/dialog_vue/components/dialog_content/EditPropertiesDialog.js\");\n/* harmony import */ var _components_dialog_content_NewFormDialog_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./components/dialog_content/NewFormDialog.js */ \"./libs/js/LEAF/dialog_vue/components/dialog_content/NewFormDialog.js\");\n/* harmony import */ var _components_dialog_content_ImportFormDialog_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./components/dialog_content/ImportFormDialog.js */ \"./libs/js/LEAF/dialog_vue/components/dialog_content/ImportFormDialog.js\");\n/* harmony import */ var _components_dialog_content_FormHistoryDialog_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./components/dialog_content/FormHistoryDialog.js */ \"./libs/js/LEAF/dialog_vue/components/dialog_content/FormHistoryDialog.js\");\n/* harmony import */ var _components_dialog_content_StapleFormDialog_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./components/dialog_content/StapleFormDialog.js */ \"./libs/js/LEAF/dialog_vue/components/dialog_content/StapleFormDialog.js\");\n/* harmony import */ var _components_ModFormMenu_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./components/ModFormMenu.js */ \"./libs/js/LEAF/dialog_vue/components/ModFormMenu.js\");\n/* harmony import */ var _components_CategoryCard_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./components/CategoryCard.js */ \"./libs/js/LEAF/dialog_vue/components/CategoryCard.js\");\n/* harmony import */ var _components_FormContent_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./components/FormContent.js */ \"./libs/js/LEAF/dialog_vue/components/FormContent.js\");\n/* harmony import */ var _components_RestoreFields_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./components/RestoreFields.js */ \"./libs/js/LEAF/dialog_vue/components/RestoreFields.js\");\n/* harmony import */ var _LEAF_FormEditor_scss__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./LEAF_FormEditor.scss */ \"./libs/js/LEAF/dialog_vue/LEAF_FormEditor.scss\");\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n\n\n\n\n\n\n\n\n\n\n\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({\n  data: function data() {\n    var _this = this;\n\n    return {\n      APIroot: '../api/',\n      CSRFToken: CSRFToken,\n      dialogTitle: '',\n      dialogFormContent: '',\n      dialogContentIsComponent: false,\n      showFormDialog: false,\n      //this sets the method associated with the save btn to the onSave method of the modal's current component\n      formSaveFunction: function formSaveFunction() {\n        if (_this.$refs[_this.dialogFormContent]) {\n          _this.$refs[_this.dialogFormContent].onSave();\n        } else {\n          console.log('got something unexpected');\n        }\n      },\n      isEditingModal: false,\n      appIsLoadingCategoryList: true,\n      appIsLoadingCategoryInfo: false,\n      currCategoryID: null,\n      //null or string\n      currSubformID: null,\n      //null or string\n      currIndicatorID: null,\n      //null or number\n      newIndicatorParentID: null,\n      //null or number\n      categories: {},\n      //obj with keys for each catID, values an object with 'categories' and 'workflow' tables fields\n      currentCategorySelection: {},\n      //current record from categories object\n      ajaxFormByCategoryID: [],\n      //form tree with information about indicators for each node\n      currentCategoryIsSensitive: false,\n      ajaxSelectedCategoryStapled: [],\n      ajaxWorkflowRecords: [],\n      //array of all 'workflows' table records\n      ajaxIndicatorByID: {},\n      //'indicators' table record for a specific indicatorID\n      restoringFields: false,\n      //TODO:?? there are a few pages that could be view here, page_views: [restoringFields: false, leafLibrary: false etc]\n      gridInput: gridInput //global LEAF class for grid format questions.\n\n    };\n  },\n  provide: function provide() {\n    var _this2 = this;\n\n    return {\n      CSRFToken: Vue.computed(function () {\n        return _this2.CSRFToken;\n      }),\n      currCategoryID: Vue.computed(function () {\n        return _this2.currCategoryID;\n      }),\n      currSubformID: Vue.computed(function () {\n        return _this2.currSubformID;\n      }),\n      currIndicatorID: Vue.computed(function () {\n        return _this2.currIndicatorID;\n      }),\n      newIndicatorParentID: Vue.computed(function () {\n        return _this2.newIndicatorParentID;\n      }),\n      isEditingModal: Vue.computed(function () {\n        return _this2.isEditingModal;\n      }),\n      ajaxIndicatorByID: Vue.computed(function () {\n        return _this2.ajaxIndicatorByID;\n      }),\n      categories: Vue.computed(function () {\n        return _this2.categories;\n      }),\n      currentCategorySelection: Vue.computed(function () {\n        return _this2.currentCategorySelection;\n      }),\n      currentCategoryIsSensitive: Vue.computed(function () {\n        return _this2.currentCategoryIsSensitive;\n      }),\n      ajaxFormByCategoryID: Vue.computed(function () {\n        return _this2.ajaxFormByCategoryID;\n      }),\n      appIsLoadingCategoryInfo: Vue.computed(function () {\n        return _this2.appIsLoadingCategoryInfo;\n      }),\n      ajaxSelectedCategoryStapled: Vue.computed(function () {\n        return _this2.ajaxSelectedCategoryStapled;\n      }),\n      ajaxWorkflowRecords: Vue.computed(function () {\n        return _this2.ajaxWorkflowRecords;\n      }),\n      showFormDialog: Vue.computed(function () {\n        return _this2.showFormDialog;\n      }),\n      dialogTitle: Vue.computed(function () {\n        return _this2.dialogTitle;\n      }),\n      dialogFormContent: Vue.computed(function () {\n        return _this2.dialogFormContent;\n      }),\n      formSaveFunction: Vue.computed(function () {\n        return _this2.formSaveFunction;\n      }),\n      restoringFields: Vue.computed(function () {\n        return _this2.restoringFields;\n      }),\n      //static values\n      APIroot: this.APIroot,\n      hasDevConsoleAccess: this.hasDevConsoleAccess,\n      editPropertiesClicked: this.editPropertiesClicked,\n      editPermissionsClicked: this.editPermissionsClicked,\n      newQuestion: this.newQuestion,\n      getForm: this.getForm,\n      getStapledFormsByCurrentCategory: this.getStapledFormsByCurrentCategory,\n      editIndicatorPrivileges: this.editIndicatorPrivileges,\n      selectIndicator: this.selectIndicator,\n      selectNewCategory: this.selectNewCategory,\n      updateCategoriesProperty: this.updateCategoriesProperty,\n      addNewCategory: this.addNewCategory,\n      closeFormDialog: this.closeFormDialog,\n      openNewFormDialog: this.openNewFormDialog,\n      openImportFormDialog: this.openImportFormDialog,\n      openFormHistoryDialog: this.openFormHistoryDialog,\n      openStapleFormsDialog: this.openStapleFormsDialog,\n      truncateText: this.truncateText,\n      showRestoreFields: this.showRestoreFields,\n      gridInput: this.gridInput //global leaf class for grid formats\n\n    };\n  },\n  beforeMount: function beforeMount() {\n    var _this3 = this;\n\n    this.getCategoryListAll().then(function (res) {\n      _this3.setCategories(res);\n\n      _this3.appIsLoadingCategoryList = false;\n    })[\"catch\"](function (err) {\n      return console.log('error getting category list', err);\n    });\n    this.getWorkflowRecords().then(function (res) {\n      _this3.ajaxWorkflowRecords = res;\n    })[\"catch\"](function (err) {\n      return console.log('error getting workflow records', err);\n    });\n  },\n  computed: {\n    activeCategories: function activeCategories() {\n      var active = [];\n\n      for (var c in this.categories) {\n        if (this.categories[c].parentID === '' && parseInt(this.categories[c].workflowID) !== 0) {\n          active.push(_objectSpread({}, this.categories[c]));\n        }\n      }\n\n      return active;\n    },\n    inactiveCategories: function inactiveCategories() {\n      var inactive = [];\n\n      for (var c in this.categories) {\n        if (this.categories[c].parentID === '' && parseInt(this.categories[c].workflowID) === 0) {\n          inactive.push(_objectSpread({}, this.categories[c]));\n        }\n      }\n\n      return inactive;\n    }\n  },\n  methods: {\n    //general use methods\n    truncateText: function truncateText(str) {\n      var maxlength = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 40;\n      var overflow = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : '...';\n      return str.length <= maxlength ? str : str.slice(0, maxlength) + overflow;\n    },\n    //DB GET\n    getCategoryListAll: function getCategoryListAll() {\n      var _this4 = this;\n\n      this.appIsLoadingCategoryList = true;\n      return new Promise(function (resolve, reject) {\n        $.ajax({\n          type: 'GET',\n          url: \"\".concat(_this4.APIroot, \"formStack/categoryList/all\"),\n          success: function success(res) {\n            return resolve(res);\n          },\n          error: function error(err) {\n            return reject(err);\n          }\n        });\n      });\n    },\n    getWorkflowRecords: function getWorkflowRecords() {\n      var _this5 = this;\n\n      return new Promise(function (resolve, reject) {\n        $.ajax({\n          type: 'GET',\n          url: \"\".concat(_this5.APIroot, \"workflow\"),\n          success: function success(res) {\n            return resolve(res);\n          },\n          error: function error(err) {\n            return reject(err);\n          }\n        });\n      });\n    },\n    getFormByCategoryID: function getFormByCategoryID() {\n      var _this6 = this;\n\n      var catID = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.currCategoryID;\n      this.appIsLoadingCategoryInfo = true;\n      return new Promise(function (resolve, reject) {\n        $.ajax({\n          type: 'GET',\n          url: \"\".concat(_this6.APIroot, \"form/_\").concat(catID),\n          success: function success(res) {\n            _this6.appIsLoadingCategoryInfo = false;\n            resolve(res);\n          },\n          error: function error(err) {\n            return reject(err);\n          }\n        });\n      });\n    },\n    getStapledFormsByCurrentCategory: function getStapledFormsByCurrentCategory() {\n      var _this7 = this;\n\n      var formID = this.currSubformID || this.currCategoryID;\n      $.ajax({\n        type: 'GET',\n        url: \"\".concat(this.APIroot, \"formEditor/_\").concat(formID, \"/stapled\"),\n        success: function success(res) {\n          console.log('setting stapled forms', res);\n          _this7.ajaxSelectedCategoryStapled = res;\n        },\n        error: function error(err) {\n          return console.log(err);\n        }\n      });\n    },\n    getIndicatorByID: function getIndicatorByID(indID) {\n      var _this8 = this;\n\n      //get specific indicator info\n      return new Promise(function (resolve, reject) {\n        $.ajax({\n          type: 'GET',\n          url: \"\".concat(_this8.APIroot, \"formEditor/indicator/\").concat(indID),\n          success: function success(res) {\n            return resolve(res);\n          },\n          error: function error(err) {\n            return reject(err);\n          }\n        });\n      });\n    },\n    //local data\n    setCategories: function setCategories(obj) {\n      //build categories object from getCatListAll res on success\n      for (var i in obj) {\n        this.categories[obj[i].categoryID] = obj[i];\n      }\n    },\n    updateCategoriesProperty: function updateCategoriesProperty(catID, keyName, keyValue) {\n      this.categories[catID][keyName] = keyValue;\n      this.currentCategorySelection = this.categories[catID];\n      console.log('updated curr cat selection', keyName, this.currentCategorySelection);\n    },\n    addNewCategory: function addNewCategory(catID) {\n      var record = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      this.categories[catID] = record;\n    },\n    selectNewCategory: function selectNewCategory(catID) {\n      var _this9 = this;\n\n      var isSubform = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n      console.log('selecting new form');\n      this.restoringFields = false; //on nav from Restore Fields\n\n      if (!isSubform) {\n        //also true on nav to View All, where catID will be null and the main form will reset\n        console.log('setting new currCatID', catID);\n        this.currCategoryID = catID;\n        this.currSubformID = null; //clear the subform ID whenever the main ID changes\n      } else {\n        console.log('setting new subCatID', catID);\n        this.currSubformID = catID; //if it's an internal form, update the subformID, but keep the main form ID\n      }\n\n      this.currentCategorySelection = {};\n      this.ajaxFormByCategoryID = [];\n      this.ajaxSelectedCategoryStapled = [];\n      vueData.formID = catID || ''; //NOTE: update of other vue app TODO: mv?\n\n      document.getElementById('btn-vue-update-trigger').dispatchEvent(new Event(\"click\")); //if user clicks a form card or internal, switch to specified record and get info about the form\n\n      if (catID !== null) {\n        this.currentCategorySelection = _objectSpread({}, this.categories[catID]);\n        this.getFormByCategoryID(catID).then(function (res) {\n          _this9.ajaxFormByCategoryID = res;\n          document.getElementById(catID).focus();\n        })[\"catch\"](function (err) {\n          return console.log('error getting form info: ', err);\n        });\n        this.getStapledFormsByCurrentCategory();\n      } else {\n        //on nav to view all forms.\n        this.appIsLoadingCategoryList = true;\n        this.categories = {};\n        this.getCategoryListAll().then(function (res) {\n          _this9.setCategories(res);\n\n          _this9.appIsLoadingCategoryList = false;\n        })[\"catch\"](function (err) {\n          return console.log('error getting category list', err);\n        });\n        this.getWorkflowRecords().then(function (res) {\n          _this9.ajaxWorkflowRecords = res;\n        })[\"catch\"](function (err) {\n          return console.log('error getting workflow records', err);\n        });\n      }\n    },\n    editPermissionsClicked: function editPermissionsClicked() {\n      console.log('clicked edit Permissions');\n    },\n    editPropertiesClicked: function editPropertiesClicked() {\n      var _this10 = this;\n\n      this.getFormByCategoryID(this.currSubformID || this.currCategoryID).then(function (res) {\n        _this10.ajaxFormByCategoryID = res;\n        _this10.currentCategoryIsSensitive = false;\n        res.forEach(function (formSection) {\n          if (_this10.currentCategoryIsSensitive === false) {\n            _this10.currentCategoryIsSensitive = _this10.checkSensitive(formSection);\n          }\n        });\n\n        _this10.openEditProperties();\n      })[\"catch\"](function (err) {\n        return console.log('error updating category information', err);\n      });\n    },\n    editIndicatorPrivileges: function editIndicatorPrivileges() {\n      console.log('clicked edit privileges');\n    },\n    setCustomDialogTitle: function setCustomDialogTitle(htmlContent) {\n      this.dialogTitle = htmlContent;\n    },\n    //takes comp name as string, eg 'edit-properties-dialog'\n    //components must be registered to this app\n    setFormDialogComponent: function setFormDialogComponent(component) {\n      this.dialogContentIsComponent = true;\n      this.dialogFormContent = component;\n    },\n    setFormDialogHTML: function setFormDialogHTML(htmlContent) {\n      this.dialogContentIsComponent = false;\n      this.dialogFormContent = htmlContent;\n    },\n    clearCustomDialog: function clearCustomDialog() {\n      this.setCustomDialogTitle('');\n      this.setFormDialogComponent('');\n      this.setFormDialogHTML('');\n    },\n    closeFormDialog: function closeFormDialog() {\n      this.showFormDialog = false;\n      this.clearCustomDialog();\n    },\n    openStapleFormsDialog: function openStapleFormsDialog() {\n      this.setCustomDialogTitle('<h2>Staple Other Form</h2>');\n      this.setFormDialogComponent('staple-form-dialog');\n      this.showFormDialog = true;\n    },\n    openIndicatorEditing: function openIndicatorEditing(indicatorID) {\n      //currentID for editing, parentID for new questions\n      var title = '';\n\n      if (this.currIndicatorID === null && indicatorID === null) {\n        title = \"<h2>Adding new question</h2>\";\n      } else {\n        title = this.currIndicatorID === parseInt(indicatorID) ? \"<h2>Editing indicator \".concat(indicatorID, \"</h2>\") : \"<h2>Adding question to \".concat(indicatorID, \"</h2>\");\n      }\n\n      this.setCustomDialogTitle(title);\n      this.setFormDialogComponent('indicator-editing');\n      this.showFormDialog = true;\n    },\n    openEditProperties: function openEditProperties() {\n      this.setCustomDialogTitle('<h2>Edit Properties</h2>');\n      this.setFormDialogComponent('edit-properties-dialog');\n      this.showFormDialog = true;\n    },\n    openNewFormDialog: function openNewFormDialog() {\n      var titleHTML = this.currCategoryID === null ? '<h2>New Form</h2>' : '<h2>New Internal Use Form</h2>';\n      this.setCustomDialogTitle(titleHTML);\n      this.setFormDialogComponent('new-form-dialog');\n      this.showFormDialog = true;\n    },\n    openImportFormDialog: function openImportFormDialog() {\n      this.setCustomDialogTitle('<h2>Import Form</h2>');\n      this.setFormDialogComponent('import-form-dialog');\n      this.showFormDialog = true;\n    },\n    openFormHistoryDialog: function openFormHistoryDialog() {\n      this.setCustomDialogTitle(\"<h2>Form History</h2>\");\n      this.setFormDialogComponent('form-history-dialog');\n      this.showFormDialog = true;\n    },\n    newQuestion: function newQuestion(parentIndID) {\n      this.currIndicatorID = null;\n      this.newIndicatorParentID = parentIndID !== null ? parseInt(parentIndID) : null;\n      this.isEditingModal = false;\n      console.log('Adding new indicator.', 'currID should be null:', this.currIndicatorID, 'parentID (null for new sections):', this.newIndicatorParentID, 'FORM:', this.currCategoryID);\n      this.openIndicatorEditing(parentIndID);\n    },\n    getForm: function getForm(indicatorID, series) {\n      var _this11 = this;\n\n      //TODO: rename? this gets info for a specific existing question\n      this.currIndicatorID = parseInt(indicatorID);\n      this.newIndicatorParentID = null;\n      this.getIndicatorByID(indicatorID).then(function (res) {\n        _this11.isEditingModal = true;\n        _this11.ajaxIndicatorByID = res;\n\n        _this11.openIndicatorEditing(indicatorID);\n\n        console.log('app called getForm with:', indicatorID, series);\n      })[\"catch\"](function (err) {\n        return console.log('error getting indicator information', err);\n      });\n    },\n    checkSensitive: function checkSensitive(node) {\n      var isSensitive = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n      if (parseInt(node.is_sensitive) === 1) {\n        isSensitive = true;\n      }\n\n      if (isSensitive === false && node.child) {\n        for (var c in node.child) {\n          isSensitive = this.checkSensitive(node.child[c], isSensitive);\n          if (isSensitive === true) break;\n        }\n      }\n\n      return isSensitive;\n    },\n    showRestoreFields: function showRestoreFields() {\n      this.restoringFields = true;\n    }\n  },\n  components: {\n    LeafFormDialog: _components_LeafFormDialog_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"],\n    IndicatorEditing: _components_dialog_content_IndicatorEditing_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"],\n    NewFormDialog: _components_dialog_content_NewFormDialog_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"],\n    ImportFormDialog: _components_dialog_content_ImportFormDialog_js__WEBPACK_IMPORTED_MODULE_4__[\"default\"],\n    FormHistoryDialog: _components_dialog_content_FormHistoryDialog_js__WEBPACK_IMPORTED_MODULE_5__[\"default\"],\n    StapleFormDialog: _components_dialog_content_StapleFormDialog_js__WEBPACK_IMPORTED_MODULE_6__[\"default\"],\n    ModFormMenu: _components_ModFormMenu_js__WEBPACK_IMPORTED_MODULE_7__[\"default\"],\n    CategoryCard: _components_CategoryCard_js__WEBPACK_IMPORTED_MODULE_8__[\"default\"],\n    FormContent: _components_FormContent_js__WEBPACK_IMPORTED_MODULE_9__[\"default\"],\n    EditPropertiesDialog: _components_dialog_content_EditPropertiesDialog_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"],\n    RestoreFields: _components_RestoreFields_js__WEBPACK_IMPORTED_MODULE_10__[\"default\"]\n  }\n});\n\n//# sourceURL=webpack://leaf/./libs/js/LEAF/dialog_vue/LEAF_FormEditor_App_vue.js?");

/***/ }),

/***/ "./libs/js/LEAF/dialog_vue/LEAF_FormEditor_main.js":
/*!*********************************************************!*\
  !*** ./libs/js/LEAF/dialog_vue/LEAF_FormEditor_main.js ***!
  \*********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _LEAF_FormEditor_App_vue_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./LEAF_FormEditor_App_vue.js */ \"./libs/js/LEAF/dialog_vue/LEAF_FormEditor_App_vue.js\");\n//import Vue from \"../../vue3/vue.global.prod.js\";\n\nvar app = Vue.createApp(_LEAF_FormEditor_App_vue_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"]); //opt-in to allow computed injections to be used without the value property.\n//per Vue dev, will not be needed after next minor update\n\napp.config.unwrapInjectedRef = true;\napp.mount('#vue-formeditor-app');\n\n//# sourceURL=webpack://leaf/./libs/js/LEAF/dialog_vue/LEAF_FormEditor_main.js?");

/***/ }),

/***/ "./libs/js/LEAF/dialog_vue/components/CategoryCard.js":
/*!************************************************************!*\
  !*** ./libs/js/LEAF/dialog_vue/components/CategoryCard.js ***!
  \************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({\n  props: {\n    category: Object\n  },\n  inject: ['selectNewCategory'],\n  computed: {\n    workflowID: function workflowID() {\n      return parseInt(this.category.workflowID);\n    },\n    cardLibraryClasses: function cardLibraryClasses() {\n      //NOTE:? often null (LIVE).  called when smarty referFormLibraryID != ''\n      return \"formPreview formLibraryID_\".concat(this.category.formLibraryID);\n    },\n    categoryName: function categoryName() {\n      //NOTE: XSSHelpers global\n      return this.category.categoryName === '' ? 'Untitled' : XSSHelpers.stripAllTags(this.category.categoryName);\n    },\n    formDescription: function formDescription() {\n      return XSSHelpers.stripAllTags(this.category.categoryDescription);\n    },\n    availability: function availability() {\n      return parseInt(this.category.visible) === 1 && this.workflowID > 0 ? 'This form is available' : 'Hidden. Users cannot submit new requests.';\n    },\n    workflow: function workflow() {\n      var msg = '';\n\n      if (this.workflowID === 0) {\n        msg = 'No Workflow';\n      } else {\n        msg = this.category.description !== null ? 'Workflow: ' + this.category.description : '';\n      }\n\n      return msg;\n    }\n  },\n  template: \"<div tabindex=\\\"0\\\" \\n        @click=\\\"selectNewCategory(category.categoryID)\\\"\\n        @keyup.enter=\\\"selectNewCategory(category.categoryID)\\\"\\n        :class=\\\"cardLibraryClasses\\\" class=\\\"browser-category-card\\\"\\n        :id=\\\"category.categoryID\\\" \\n        :title=\\\"category.categoryID\\\">\\n            <div class=\\\"formPreviewTitle\\\" style=\\\"position: relative\\\"><div v-html=\\\"categoryName\\\"></div>\\n                <img v-if=\\\"parseInt(category.needToKnow) === 1\\\" src=\\\"../../libs/dynicons/?img=emblem-readonly.svg&w=16\\\" alt=\\\"\\\" \\n                title=\\\"Need to know mode enabled\\\" style=\\\"position: absolute; top: 4px; right: 4px; z-index:10;\\\"/>\\n            </div>\\n            <div class=\\\"formPreviewDescription\\\" v-html=\\\"formDescription\\\"></div>\\n            <div class=\\\"formPreviewStatus\\\">{{ availability }}</div>\\n            <div class=\\\"formPreviewWorkflow\\\">{{ workflow }}</div>\\n        </div>\"\n});\n\n//# sourceURL=webpack://leaf/./libs/js/LEAF/dialog_vue/components/CategoryCard.js?");

/***/ }),

/***/ "./libs/js/LEAF/dialog_vue/components/FormContent.js":
/*!***********************************************************!*\
  !*** ./libs/js/LEAF/dialog_vue/components/FormContent.js ***!
  \***********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _PrintFormAjax_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./PrintFormAjax.js */ \"./libs/js/LEAF/dialog_vue/components/PrintFormAjax.js\");\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({\n  data: function data() {\n    return {\n      gridInstances: {}\n    };\n  },\n  provide: function provide() {\n    var _this = this;\n\n    return {\n      gridInstances: Vue.computed(function () {\n        return _this.gridInstances;\n      }),\n      updateGridInstances: this.updateGridInstances\n    };\n  },\n  components: {\n    PrintFormAjax: _PrintFormAjax_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"]\n  },\n  inject: ['currCategoryID', 'currSubformID', 'currentCategorySelection', 'appIsLoadingCategoryInfo', 'editPropertiesClicked', 'editPermissionsClicked', 'gridInput'],\n  computed: {\n    formName: function formName() {\n      return XSSHelpers.stripAllTags(this.currentCategorySelection.categoryName) || 'Untitled';\n    },\n    formCatID: function formCatID() {\n      return this.currentCategorySelection.categoryID;\n    },\n    categoryDescription: function categoryDescription() {\n      return XSSHelpers.stripAllTags(this.currentCategorySelection.categoryDescription);\n    },\n    workflow: function workflow() {\n      return parseInt(this.currentCategorySelection.workflowID) === 0 ? \"<span style=\\\"color: red\\\">No workflow. Users will not be able to select this form.</span>\" : \"\".concat(this.currentCategorySelection.description, \" (ID #\").concat(this.currentCategorySelection.workflowID, \")\");\n    },\n    isSubForm: function isSubForm() {\n      return !this.currentCategorySelection.parentID === '';\n    },\n    isNeedToKnow: function isNeedToKnow() {\n      return parseInt(this.currentCategorySelection.needToKnow) === 1;\n    }\n  },\n  methods: {\n    updateGridInstances: function updateGridInstances(options, indicatorID, series) {\n      var gridInput = new this.gridInput(options, indicatorID, series, '');\n      this.gridInstances[indicatorID] = gridInput;\n    }\n  },\n  template: \"\\n        <!-- NOTE: TOP INFO PANEL -->\\n        <div id=\\\"edit-properties-panel\\\">\\n            <div>\\n                <div :aria-label=\\\"currCategoryID\\\" :title=\\\"'CategoryID: ' + currCategoryID\\\"><b>{{formName}}</b></div>\\n                <div style=\\\"padding: 0.5em 0\\\">{{categoryDescription}}</div>\\n                <span v-if=\\\"!isSubForm\\\">Workflow: <b v-html=\\\"workflow\\\"></b></span><br />\\n                <span v-if=\\\"!isSubForm\\\">Need to Know mode: <b :style=\\\"{color: isNeedToKnow ? '#e00' : 'black'}\\\">{{ isNeedToKnow ? 'On' : 'Off' }}</b></span>\\n            </div>\\n\\n            <div style=\\\"flex: 0 0 140px;\\\">\\n                <div tabindex=\\\"0\\\" id=\\\"editFormData\\\" class=\\\"buttonNorm\\\"  \\n                    @click=\\\"editPropertiesClicked\\\" @keyup.enter=\\\"editPropertiesClicked\\\"\\n                    style=\\\"margin-bottom:0.5em;\\\">Edit Properties</div>\\n\\n                <div tabindex=\\\"0\\\" id=\\\"editFormPermissions\\\" class=\\\"buttonNorm\\\"\\n                    @click=\\\"editPermissionsClicked\\\" @keyup.enter=\\\"editPermissionsClicked\\\">Edit Collaborators</div>\\n            </div>\\n            <div style=\\\"position: absolute; right: 4px; bottom: 4px\\\" class=\\\"form-id-label\\\">ID: {{currCategoryID}}\\n            <span v-if=\\\"currSubformID!==null\\\">(subform {{currSubformID}})</span>\\n            </div>\\n        </div>\\n\\n        <!-- NOTE: FORM AREA -->\\n        <div v-if=\\\"appIsLoadingCategoryInfo\\\" style=\\\"border: 2px solid black; text-align: center; \\n            font-size: 24px; font-weight: bold; padding: 16px;\\\">\\n            Loading... \\n            <img src=\\\"../images/largespinner.gif\\\" alt=\\\"loading...\\\" />\\n        </div>\\n        <template v-else>\\n        <print-form-ajax></print-form-ajax>\\n        </template>\"\n});\n\n//# sourceURL=webpack://leaf/./libs/js/LEAF/dialog_vue/components/FormContent.js?");

/***/ }),

/***/ "./libs/js/LEAF/dialog_vue/components/FormEntryDisplay.js":
/*!****************************************************************!*\
  !*** ./libs/js/LEAF/dialog_vue/components/FormEntryDisplay.js ***!
  \****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({\n  name: 'FormEntryDisplay',\n  //NOTE: this will replace PrintSubindicators\n  props: {\n    depth: Number,\n    formNode: Object,\n    sectionNumber: Number\n  },\n  inject: ['newQuestion', 'getForm', 'editIndicatorPrivileges', 'gridInstances', 'updateGridInstances'],\n  methods: {\n    ifthenUpdateIndicatorID: function ifthenUpdateIndicatorID(indicatorID) {\n      vueData.indicatorID = parseInt(indicatorID); //NOTE: TODO: possible better way\n\n      document.getElementById('btn-vue-update-trigger').dispatchEvent(new Event(\"click\"));\n    }\n  },\n  computed: {\n    hasChildNode: function hasChildNode() {\n      var child = this.formNode.child;\n      return child !== null && Object.keys(child).length > 0;\n    },\n    bgColor: function bgColor() {\n      //TODO: not sure if I will use\n      return \"rgb(\".concat(255 - 2 * this.depth, \",\").concat(255 - 2 * this.depth, \",\").concat(255 - 2 * this.depth, \")\");\n    },\n    suffix: function suffix() {\n      return \"\".concat(this.formNode.indicatorID, \"_\").concat(this.formNode.series);\n    },\n    colspan: function colspan() {\n      return this.formNode.format === null || this.formNode.format.toLowerCase() === 'textarea' ? 2 : 1;\n    },\n    required: function required() {\n      return parseInt(this.formNode.required) === 1;\n    },\n    isEmpty: function isEmpty() {\n      return this.formNode.isEmpty === true;\n    },\n    blockID: function blockID() {\n      //NOTE: not sure about empty id attr\n      return parseInt(this.depth) === 0 ? '' : \"subIndicator_\".concat(this.suffix);\n    },\n    labelID: function labelID() {\n      return parseInt(this.depth) === 0 ? \"PHindicator_\".concat(this.suffix) : '';\n    },\n    labelClass: function labelClass() {\n      if (parseInt(this.depth) === 0) {\n        return this.required && this.isEmpty ? \"printheading_missing\" : \"printheading\";\n      } else {\n        return this.required && this.isEmpty ? \"printsubheading_missing\" : \"printsubheading\";\n      }\n    },\n    truncatedOptions: function truncatedOptions() {\n      var _this$formNode$option;\n\n      return ((_this$formNode$option = this.formNode.options) === null || _this$formNode$option === void 0 ? void 0 : _this$formNode$option.slice(0, 6)) || [];\n    }\n  },\n  mounted: function mounted() {\n    if (this.formNode.format === 'grid') {\n      var options = JSON.parse(this.formNode.options[0]);\n      this.updateGridInstances(options, this.formNode.indicatorID, this.formNode.series);\n      this.gridInstances[this.formNode.indicatorID].preview();\n    }\n  },\n  template: \"<div :class=\\\"depth===0 ? 'printmainblock' : 'printsubblock'\\\" :id=\\\"blockID\\\" \\n             :style=\\\"{margin: depth!==0 ? '0.4em 0.1em' : 0}\\\">\\n            <div :class=\\\"depth===0 ? 'printmainlabel' : 'printsublabel'\\\">\\n                <div :style=\\\"{display: depth===0 ? 'flex': 'inline-block'}\\\">\\n                    <div v-if=\\\"depth===0\\\" class=\\\"printcounter\\\">\\n                        <span tabindex=\\\"0\\\" aria-label=\\\"formNode.indicatorID\\\" style=\\\"margin:0; height: 100%\\\">{{sectionNumber}}</span>\\n                    </div>\\n                    <div :id=\\\"labelID\\\" :class=\\\"labelClass\\\" \\n                        :style=\\\"{display: depth===0 ? 'flex' : 'block'}\\\" \\n                        style=\\\"align-items:center; width: 100%;\\\">\\n                        <img v-if=\\\"parseInt(formNode.is_sensitive)===1\\\" \\n                            src=\\\"../../libs/dynicons/?img=eye_invisible.svg&amp;w=16\\\" alt=\\\"\\\" \\n                            title=\\\"This field is sensitive\\\" />\\n                        <span class=\\\"printsubheading\\\"  \\n                            style=\\\"padding: 0 0.2em; font-size: 16px; cursor: pointer\\\"\\n                            :style=\\\"{fontWeight: depth===0 ? 'bold' : 'normal'}\\\" \\n                            :title=\\\"'indicatorID: ' + formNode.indicatorID\\\"\\n                            v-html=\\\"formNode.name || '[ blank ]'\\\">\\n                        </span>\\n                        <div style=\\\"display:inline-block; float:right;\\\">\\n                            <img src=\\\"../../libs/dynicons/?img=accessories-text-editor.svg&amp;w=16\\\" tabindex=\\\"0\\\" \\n                                @keypress.enter=\\\"getForm(formNode.indicatorID, formNode.series)\\\" @click=\\\"getForm(formNode.indicatorID, formNode.series)\\\" alt=\\\"\\\" \\n                                title=\\\"Edit this field\\\" style=\\\"cursor: pointer; margin-right: 0.2em;\\\" />\\n                            <img src=\\\"../../libs/dynicons/?img=emblem-readonly.svg&amp;w=16\\\" tabindex=\\\"0\\\" \\n                                @keypress.enter=\\\"editIndicatorPrivileges(formNode.indicatorID)\\\" @click=\\\"editIndicatorPrivileges(formNode.indicatorID)\\\" alt=\\\"\\\" \\n                                title=\\\"Edit indicator privileges\\\" style=\\\"cursor: pointer; margin-right: 0.2em;\\\" />\\n                            <img v-if=\\\"depth>0 && (formNode.format==='dropdown' || formNode.format==='text')\\\" :id=\\\"'edit_conditions_' + formNode.indicatorID\\\" \\n                                src=\\\"../../libs/dynicons/?img=preferences-system.svg&amp;w=16\\\" tabindex=\\\"0\\\" @keypress.enter=\\\"ifthenUpdateIndicatorID(formNode.indicatorID)\\\" \\n                                @click=\\\"ifthenUpdateIndicatorID(formNode.indicatorID)\\\" alt=\\\"\\\" title=\\\"Edit conditions\\\" style=\\\"cursor: pointer\\\" />\\n                            <img v-if=\\\"formNode.has_code\\\" src=\\\"../../libs/dynicons/?img=document-properties.svg&amp;w=16\\\" alt=\\\"\\\" \\n                                title=\\\"Advanced Options present\\\" style=\\\"cursor: pointer\\\" />\\n                        </div>\\n                        <br v-if=\\\"depth>0\\\" v-for=\\\"n in 3\\\" />\\n                        <span class=\\\"buttonNorm\\\" tabindex=\\\"0\\\" title=\\\"Add Sub-question\\\"\\n                            style=\\\"margin-left:auto;\\\"\\n                            :class=\\\"{subquestionAddNew: depth > 0}\\\"\\n                            @keypress.enter=\\\"newQuestion(formNode.indicatorID)\\\"\\n                            @click=\\\"newQuestion(formNode.indicatorID)\\\">\\n                            <img src=\\\"../../libs/dynicons/?img=list-add.svg&amp;w=16\\\" alt=\\\"\\\" /> \\n                            Add Sub-question\\n                        </span>\\n                    </div>\\n                </div>\\n\\n                <div style=\\\"display: flex;\\\" :style=\\\"{minHeight: depth===0 ? '75px': 0}\\\">\\n                    <div tabindex=\\\"0\\\" class=\\\"printResponse\\\" :id=\\\"'xhrIndicator_' + suffix\\\">\\n\\n                    <!-- NOTE: FORMAT PREVIEWS -->\\n                    <template v-if=\\\"formNode.format==='grid'\\\">\\n                        {{formNode.format}}\\n                        <br /><br />\\n                        <div :id=\\\"'grid'+ suffix\\\" style=\\\"width: 100%; max-width: 100%;\\\"></div>\\n                    </template>\\n                    <template v-else>\\n                        {{formNode.format}}\\n                        <ul v-if=\\\"formNode.options && formNode.options !== ''\\\">\\n                            <li v-for=\\\"o in truncatedOptions\\\" :key=\\\"o\\\">{{o}}</li>\\n                            <li v-if=\\\"formNode.options !== '' && formNode.options.length > 6\\\">...</li>\\n                        </ul>\\n                    </template>\\n\\n                    <span class=\\\"printResponse\\\" :id=\\\"'data_' + suffix\\\"></span>\\n                    <!-- NOTE: RECURSIVE SUBQUESTIONS -->\\n                    <template v-if=\\\"hasChildNode\\\">\\n                        <div class=\\\"printformblock\\\" :style=\\\"{marginLeft: depth +'px'}\\\" style=\\\"display:flex; flex-wrap:wrap\\\">\\n                            <form-entry-display v-for=\\\"child in formNode.child\\\"\\n                                :depth=\\\"depth + 4\\\"\\n                                :formNode=\\\"child\\\"\\n                                :key=\\\"child.indicatorID\\\"> \\n                            </form-entry-display>\\n                        </div>\\n                    </template>\\n                    </div>\\n                </div>\\n            </div> <!-- END MAIN/SUB LABEL -->\\n        </div> <!-- END MAIN/SUB BLOCK -->\"\n});\n\n//# sourceURL=webpack://leaf/./libs/js/LEAF/dialog_vue/components/FormEntryDisplay.js?");

/***/ }),

/***/ "./libs/js/LEAF/dialog_vue/components/FormIndexListing.js":
/*!****************************************************************!*\
  !*** ./libs/js/LEAF/dialog_vue/components/FormIndexListing.js ***!
  \****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({\n  name: 'FormIndexListing',\n  props: {\n    depth: Number,\n    formNode: Object,\n    index: Number,\n    parentID: Number\n  },\n  inject: ['truncateText', 'addToListItemsArray', 'listItems', 'startDrag', 'onDragEnter', 'onDragLeave', 'onDrop'],\n  mounted: function mounted() {\n    //each list item is added to the listItems array on parent component, to track indicatorID, parentID, sort and current index values\n    this.addToListItemsArray(this.formNode, this.parentID, this.index);\n  },\n  methods: {\n    indexHover: function indexHover(evt) {\n      evt.currentTarget.classList.add('index-selected');\n    },\n    indexHoverOff: function indexHoverOff(evt) {\n      evt.currentTarget.classList.remove('index-selected');\n    }\n  },\n  computed: {\n    hasChildNode: function hasChildNode() {\n      var child = this.formNode.child;\n      return child !== null && Object.keys(child).length > 0;\n    },\n    children: function children() {\n      var eles = [];\n\n      if (this.hasChildNode) {\n        for (var c in this.formNode.child) {\n          eles.push(this.formNode.child[c]);\n        }\n\n        eles = eles.sort(function (a, b) {\n          return a.sort - b.sort;\n        });\n      }\n\n      return eles;\n    },\n    headingNumber: function headingNumber() {\n      return this.depth === 0 ? this.index + 1 + '.' : '';\n    },\n    conditionallyShown: function conditionallyShown() {\n      var isConditionalShow = false;\n\n      if (this.depth !== 0 && this.formNode.conditions !== null && this.formNode.conditions !== '') {\n        var conditions = JSON.parse(this.formNode.conditions) || [];\n\n        if (conditions.some(function (c) {\n          var _c$selectedOutcome;\n\n          return ((_c$selectedOutcome = c.selectedOutcome) === null || _c$selectedOutcome === void 0 ? void 0 : _c$selectedOutcome.toLowerCase()) === 'show';\n        })) {\n          isConditionalShow = true;\n        }\n      }\n\n      return isConditionalShow ? '→ ' : \"\";\n    },\n    //NOTE: Uses globally available XSSHelpers.js (LEAF class)\n    shortLabel: function shortLabel() {\n      //TODO:  currently getting from name - too many items didn't have label - prompt during entry\n      return XSSHelpers.decodeHTMLEntities(this.truncateText(XSSHelpers.stripAllTags(this.formNode.name))) || '[ blank ]';\n    },\n    suffix: function suffix() {\n      return \"\".concat(this.formNode.indicatorID, \"_\").concat(this.formNode.series);\n    },\n    required: function required() {\n      return parseInt(this.formNode.required) === 1;\n    },\n    isEmpty: function isEmpty() {\n      return this.formNode.isEmpty === true;\n    }\n  },\n  template: \"\\n        <li tabindex=0 :title=\\\"'index item '+ formNode.indicatorID\\\"\\n            :class=\\\"depth===0 ? 'section_heading' : 'subindicator_heading'\\\"\\n            @mouseover.stop=\\\"indexHover\\\" @mouseout.stop=\\\"indexHoverOff\\\">\\n            <span>{{conditionallyShown}}{{headingNumber}} {{shortLabel}}</span>\\n            \\n            <!-- NOTE: RECURSIVE SUBQUESTIONS. ul for each for drop zones -->\\n            \\n            <ul class=\\\"form-index-listing-ul\\\" :id=\\\"'drop_area_parent_'+ formNode.indicatorID\\\"\\n                data-effect-allowed=\\\"move\\\"\\n                @drop.stop=\\\"onDrop\\\"\\n                @dragover.prevent\\n                @dragenter.prevent=\\\"onDragEnter\\\"\\n                @dragleave=\\\"onDragLeave\\\">\\n\\n                <template v-if=\\\"hasChildNode\\\">\\n                    <form-index-listing v-for=\\\"(child, i) in children\\\"\\n                        :id=\\\"'index_listing_' + child.indicatorID\\\"\\n                        :depth=\\\"depth + 1\\\"\\n                        :parentID=\\\"formNode.indicatorID\\\"\\n                        :formNode=\\\"child\\\"\\n                        :index=\\\"i\\\"\\n                        :key=\\\"'index_list_item_' + child.indicatorID\\\"\\n                        draggable=\\\"true\\\"\\n                        @dragstart.stop=\\\"startDrag\\\"> \\n                    </form-index-listing>\\n                </template>\\n            </ul>\\n        </li>\"\n});\n\n//# sourceURL=webpack://leaf/./libs/js/LEAF/dialog_vue/components/FormIndexListing.js?");

/***/ }),

/***/ "./libs/js/LEAF/dialog_vue/components/LeafFormDialog.js":
/*!**************************************************************!*\
  !*** ./libs/js/LEAF/dialog_vue/components/LeafFormDialog.js ***!
  \**************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({\n  data: function data() {\n    return {\n      scrollY: window.scrollY,\n      initialTop: 15,\n      modalElementID: 'leaf_xhrDialog',\n      modalBackgroundID: 'leaf-vue-dialog-background'\n    };\n  },\n  props: {\n    hasDevConsoleAccess: {\n      type: Number,\n      \"default\": 0\n    }\n  },\n  inject: ['dialogTitle', 'showFormDialog', 'closeFormDialog', 'formSaveFunction'],\n  provide: function provide() {\n    return {\n      hasDevConsoleAccess: this.hasDevConsoleAccess\n    };\n  },\n  mounted: function mounted() {\n    //this helps fix the modal background coverage, as modals can have various heights\n    var elModal = document.getElementById(this.modalElementID);\n    var currModalHeight = elModal.clientHeight;\n    document.getElementById(this.modalBackgroundID).style.minHeight = currModalHeight + window.innerHeight + 'px';\n    this.makeDraggable(elModal);\n  },\n  methods: {\n    makeDraggable: function makeDraggable(el) {\n      var currWidth = el.clientWidth;\n      var pos1 = 0;\n      var pos2 = 0;\n      var mouseX = 0;\n      var mouseY = 0;\n\n      var elementDrag = function elementDrag(e) {\n        e = e || window.event;\n        e.preventDefault();\n        pos1 = mouseX - e.clientX;\n        pos2 = mouseY - e.clientY;\n        mouseX = e.clientX;\n        mouseY = e.clientY;\n        el.style.top = el.offsetTop - pos2 + \"px\";\n        el.style.left = el.offsetLeft - pos1 + \"px\";\n        checkBounds();\n      };\n\n      var closeDragElement = function closeDragElement() {\n        document.onmouseup = null;\n        document.onmousemove = null;\n      };\n\n      var dragMouseDown = function dragMouseDown(e) {\n        e = e || window.event;\n        e.preventDefault();\n        mouseX = e.clientX;\n        mouseY = e.clientY;\n        document.onmouseup = closeDragElement;\n        document.onmousemove = elementDrag;\n      };\n\n      var checkBounds = function checkBounds() {\n        var scrollbarWidth = 20;\n\n        if (el.offsetTop < window.scrollY) {\n          el.style.top = window.scrollY + 'px';\n        }\n\n        if (el.offsetLeft < 0) {\n          el.style.left = 0 + 'px';\n        }\n\n        if (el.offsetLeft + currWidth + scrollbarWidth > window.innerWidth) {\n          //extra space for scrollbar\n          el.style.left = window.innerWidth - currWidth - scrollbarWidth + 'px';\n        }\n      };\n\n      if (document.getElementById(this.modalElementID + \"_drag_handle\")) {\n        document.getElementById(this.modalElementID + \"_drag_handle\").onmousedown = dragMouseDown;\n      }\n    }\n  },\n  template: \"<Teleport to=\\\"body\\\">\\n        <div v-if=\\\"showFormDialog || showGeneralDialog\\\" :id=\\\"showFormDialog ? 'leaf-vue-dialog-background' : ''\\\">\\n        <div :id=\\\"modalElementID\\\" class=\\\"leaf-vue-dialog\\\" role=\\\"dialog\\\" :style=\\\"{top: scrollY + initialTop + 'px'}\\\">\\n            <div v-html=\\\"dialogTitle\\\" :id=\\\"modalElementID + '_drag_handle'\\\" class=\\\"leaf-vue-dialog-title\\\"></div>\\n            <div tabindex=0 @click=\\\"closeFormDialog\\\" @keypress.enter=\\\"closeFormDialog\\\" id=\\\"leaf-vue-dialog-close\\\">&#10005;</div>\\n            <div id=\\\"record\\\">\\n                <div role=\\\"document\\\" style=\\\"position: relative;\\\">\\n                    <div id=\\\"loadIndicator\\\" class=\\\"leaf-dialog-loader\\\"></div><!-- TODO: -->\\n                    <main id=\\\"xhr\\\" class=\\\"leaf-vue-dialog-content\\\" role=\\\"main\\\">\\n                        <slot name=\\\"dialog-content-slot\\\"></slot>\\n                    </main>\\n                </div>\\n                <div id=\\\"leaf-vue-dialog-cancel-save\\\">\\n                    <button \\n                        id=\\\"button_save\\\" class=\\\"btn-save\\\" title=\\\"save\\\"\\n                        @click=\\\"formSaveFunction\\\">\\n                        Save\\n                    </button>\\n                    <button \\n                        id=\\\"button_cancelchange\\\" class=\\\"btn-general\\\" title=\\\"cancel\\\"\\n                        @click=\\\"closeFormDialog\\\">\\n                        Cancel\\n                    </button>\\n                </div>\\n            </div>\\n        </div>\\n        </div>\\n    </Teleport>\"\n});\n\n//# sourceURL=webpack://leaf/./libs/js/LEAF/dialog_vue/components/LeafFormDialog.js?");

/***/ }),

/***/ "./libs/js/LEAF/dialog_vue/components/ModFormMenu.js":
/*!***********************************************************!*\
  !*** ./libs/js/LEAF/dialog_vue/components/ModFormMenu.js ***!
  \***********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({\n  inject: ['truncateText', 'selectNewCategory', 'categories', 'currCategoryID', 'ajaxSelectedCategoryStapled', 'restoringFields', 'showRestoreFields', 'openNewFormDialog', 'openImportFormDialog', 'openFormHistoryDialog', 'openStapleFormsDialog'],\n  computed: {\n    internalForms: function internalForms() {\n      var internalForms = [];\n\n      for (var c in this.categories) {\n        if (this.categories[c].parentID === this.currCategoryID) {\n          var internal = _objectSpread({}, this.categories[c]);\n\n          internalForms.push(internal);\n        }\n      }\n\n      return internalForms;\n    }\n  },\n  methods: {\n    deleteForm: function deleteForm() {\n      console.log('clicked app menu nav deleteForm', this.currCategoryID);\n    },\n    exportForm: function exportForm() {\n      console.log('clicked app menu nav exportForm', this.currCategoryID);\n    },\n    selectMainForm: function selectMainForm() {\n      console.log('clicked main form', this.currCategoryID);\n      this.selectNewCategory(this.currCategoryID);\n    },\n    selectSubform: function selectSubform(subformID) {\n      console.log('clicked subform', 'sub', subformID, 'main', this.currCategoryID);\n      this.selectNewCategory(subformID, true);\n    },\n    formName: function formName(catName) {\n      var len = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 16;\n      var elFilter = document.createElement('div');\n      elFilter.innerHTML = catName || 'untitled';\n      var name = this.truncateText(elFilter.innerText, len);\n      return name;\n    }\n  },\n  template: \"\\n        <div id=\\\"menu\\\" class=\\\"mod-form-menu-nav\\\">\\n            <ul v-if=\\\"currCategoryID===null || restoringFields===true\\\">\\n                <li>\\n                    <a href=\\\"#\\\" id=\\\"createFormButton\\\" @click=\\\"openNewFormDialog\\\">\\n                    Create Form<span>\\uD83D\\uDCC4</span>\\n                    </a>\\n                </li>\\n                <li>\\n                    <a href=\\\"./?a=formLibrary\\\">\\n                    LEAF Library<span>\\uD83D\\uDCD8</span>\\n                    </a>\\n                </li>\\n                <li>\\n                    <a href=\\\"#\\\" @click=\\\"openImportFormDialog\\\">\\n                    Import Form<span>\\uD83D\\uDCE6</span>\\n                    </a>\\n                </li>\\n                <li v-if=\\\"!restoringFields\\\">\\n                    <a href=\\\"#\\\" @click=\\\"showRestoreFields\\\">\\n                    Restore Fields<span>\\u267B\\uFE0F</span>\\n                    </a>\\n                </li>\\n                <li v-else>\\n                    <a href=\\\"#\\\" @click=\\\"selectNewCategory(null)\\\">\\n                    View All Forms<span>\\uD83D\\uDCBC</span>\\n                    </a>\\n                </li>\\n            </ul>\\n            <ul v-else>\\n                <li>\\n                    <a href=\\\"#\\\" @click=\\\"selectNewCategory(null)\\\">\\n                    View All Forms<span>\\uD83D\\uDCBC</span>\\n                    </a>\\n                </li>\\n                <ul><!-- MAIN AND INTERNAL FORMS -->\\n                    <li style=\\\"margin-bottom:0.1em\\\">\\n                        <a href=\\\"#\\\" :id=\\\"currCategoryID\\\" @click=\\\"selectMainForm\\\" title=\\\"select form\\\">\\n                        {{formName(categories[currCategoryID].categoryName)}}<span>\\uD83D\\uDCC2</span>\\n                        </a>\\n                    </li>\\n                    <li v-for=\\\"i in internalForms\\\" style=\\\"margin-bottom:0.1em\\\">\\n                        <a href=\\\"#\\\" :id=\\\"i.categoryID\\\" :key=\\\"i.categoryID\\\" @click=\\\"selectSubform(i.categoryID)\\\" title=\\\"select internal form\\\">\\n                        {{formName(i.categoryName, 20)}}<span>\\uD83D\\uDCCB</span>\\n                        </a>\\n                    </li>\\n                    <li>\\n                        <a href=\\\"#\\\" @click=\\\"openNewFormDialog\\\" title=\\\"add new internal use form\\\">\\n                        Add Internal-Use<span>\\u2795</span>\\n                        </a>\\n                    </li>\\n                </ul>\\n                <li>\\n                    <a href=\\\"#\\\" @click=\\\"openStapleFormsDialog\\\" title=\\\"staple another form\\\">\\n                    Stapled Forms<span>\\uD83D\\uDCCC</span>\\n                    </a>\\n                </li>\\n                <div id=\\\"stapledArea\\\">\\n                    <ul v-if=\\\"ajaxSelectedCategoryStapled.length > 0\\\" style=\\\"margin-top: -0.5em;\\\">\\n                        <li v-for=\\\"s in ajaxSelectedCategoryStapled\\\" style=\\\"margin-bottom:0.2em;\\\">\\n                        {{s.categoryName || 'Untitled'}}\\n                        </li>\\n                    </ul>\\n                </div>\\n                <li>\\n                    <a href=\\\"#\\\" @click=\\\"openFormHistoryDialog\\\" title=\\\"view form history\\\">\\n                    View History<span>\\uD83D\\uDD57</span>\\n                    </a>\\n                </li>\\n                <li>\\n                    <a href=\\\"#\\\" @click=\\\"exportForm\\\" title=\\\"export form\\\">\\n                    Export Form<span>\\uD83D\\uDCBE</span>\\n                    </a>\\n                </li>\\n                <li>\\n                    <a href=\\\"#\\\" @click=\\\"deleteForm\\\" title=\\\"delete form\\\">\\n                    Delete this form<span>\\u274C</span>\\n                    </a>\\n                </li>\\n                <li>\\n                    <a href=\\\"#\\\" @click=\\\"showRestoreFields\\\">\\n                    Restore Fields<span>\\u267B\\uFE0F</span>\\n                    </a>\\n                </li>\\n            </ul>\\n        </div>\"\n});\n\n//# sourceURL=webpack://leaf/./libs/js/LEAF/dialog_vue/components/ModFormMenu.js?");

/***/ }),

/***/ "./libs/js/LEAF/dialog_vue/components/PrintFormAjax.js":
/*!*************************************************************!*\
  !*** ./libs/js/LEAF/dialog_vue/components/PrintFormAjax.js ***!
  \*************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _PrintSubindicators_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./PrintSubindicators.js */ \"./libs/js/LEAF/dialog_vue/components/PrintSubindicators.js\");\n/* harmony import */ var _FormEntryDisplay_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./FormEntryDisplay.js */ \"./libs/js/LEAF/dialog_vue/components/FormEntryDisplay.js\");\n/* harmony import */ var _FormIndexListing_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./FormIndexListing.js */ \"./libs/js/LEAF/dialog_vue/components/FormIndexListing.js\");\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _iterableToArray(iter) { if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\n\n\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({\n  //TODO: rename this component\n  data: function data() {\n    return {\n      formID: this.currentCategorySelection.categoryID,\n      dragLI_Prefix: 'index_listing_',\n      dragUL_Prefix: 'drop_area_parent_',\n      listItems: [],\n      //objects w indID, parID, newParID, sort, listindex for tracking parID and sort changes\n      totalIndicators: null,\n      sortValuesToUpdate: [],\n      parentIDsToUpdate: []\n    };\n  },\n  components: {\n    PrintSubindicators: _PrintSubindicators_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"],\n    FormEntryDisplay: _FormEntryDisplay_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"],\n    FormIndexListing: _FormIndexListing_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"]\n  },\n  inject: ['APIroot', 'CSRFToken', 'ajaxFormByCategoryID', 'currSubformID', 'selectNewCategory', 'newQuestion', 'currentCategorySelection'],\n  provide: function provide() {\n    var _this = this;\n\n    return {\n      listItems: Vue.computed(function () {\n        return _this.listItems;\n      }),\n      addToListItemsArray: this.addToListItemsArray,\n      startDrag: this.startDrag,\n      onDragEnter: this.onDragEnter,\n      onDragLeave: this.onDragLeave,\n      onDrop: this.onDrop\n    };\n  },\n  computed: {\n    formName: function formName() {\n      return this.currentCategorySelection.categoryName || 'Untitled';\n    },\n    allListItemsAreAdded: function allListItemsAreAdded() {\n      return this.totalIndicators !== null && this.totalIndicators === this.listItems.length;\n    },\n    sortOrParentChanged: function sortOrParentChanged() {\n      return this.sortValuesToUpdate.length > 0 || this.parentIDsToUpdate.length > 0;\n    }\n  },\n  beforeMount: function beforeMount() {\n    var _this2 = this;\n\n    this.getFormIndicatorList().then(function (res) {\n      _this2.totalIndicators = Object.keys(res).length; //total to track updates\n    });\n  },\n  methods: {\n    applySortAndParentID_Updates: function applySortAndParentID_Updates() {\n      var _this3 = this;\n\n      var updateSort = [];\n      this.sortValuesToUpdate.forEach(function (item) {\n        updateSort.push($.ajax({\n          type: 'POST',\n          url: \"\".concat(_this3.APIroot, \"formEditor/\").concat(item.indicatorID, \"/sort\"),\n          data: {\n            sort: item.listIndex,\n            CSRFToken: _this3.CSRFToken\n          },\n          success: function success() {},\n          error: function error(err) {\n            return console.log('ind sort post err', err);\n          }\n        }));\n      });\n      var updateParentID = [];\n      this.parentIDsToUpdate.forEach(function (item) {\n        updateParentID.push($.ajax({\n          type: 'POST',\n          url: \"\".concat(_this3.APIroot, \"formEditor/\").concat(item.indicatorID, \"/parentID\"),\n          data: {\n            parentID: item.newParentID,\n            CSRFToken: _this3.CSRFToken\n          },\n          success: function success() {},\n          error: function error(err) {\n            return console.log('ind parentID post err', err);\n          }\n        }));\n      });\n      var all = updateSort.concat(updateParentID);\n      Promise.all(all).then(function (res) {\n        console.log('promise all applied changes:', all, res);\n\n        if (res.length > 0) {\n          _this3.selectNewCategory(_this3.formID, _this3.currSubformID !== null);\n        }\n      });\n    },\n    addToListItemsArray: function addToListItemsArray(formNode, parentID, listIndex) {\n      var indicatorID = formNode.indicatorID,\n          sort = formNode.sort;\n      var item = {\n        indicatorID: indicatorID,\n        sort: sort,\n        parentID: parentID,\n        listIndex: listIndex,\n        newParentID: ''\n      };\n      this.listItems = [].concat(_toConsumableArray(this.listItems), [item]);\n      this.handleSortShouldUpdate(item);\n    },\n    //checks if the sort value is not the index, adds it to sortValuesToUpdate to update (true for old forms).\n    handleSortShouldUpdate: function handleSortShouldUpdate(listItem) {\n      if (listItem.sort !== listItem.listIndex) {\n        var filteredItems = this.sortValuesToUpdate.filter(function (item) {\n          return item.indicatorID !== listItem.indicatorID;\n        });\n        this.sortValuesToUpdate = [].concat(_toConsumableArray(filteredItems), [listItem]);\n      }\n    },\n    handleParentID_ShouldUpdate: function handleParentID_ShouldUpdate(listItem) {\n      if (listItem.newParentID !== '' && listItem.parentID !== listItem.newParentID) {\n        var filteredItems = this.parentIDsToUpdate.filter(function (item) {\n          return item.indicatorID !== listItem.indicatorID;\n        });\n        this.parentIDsToUpdate = [].concat(_toConsumableArray(filteredItems), [listItem]);\n      }\n    },\n    getFormIndicatorList: function getFormIndicatorList() {\n      var _this4 = this;\n\n      return new Promise(function (resolve, reject) {\n        $.ajax({\n          type: 'GET',\n          url: \"\".concat(_this4.APIroot, \"form/_\").concat(_this4.formID, \"/flat\"),\n          success: function success(res) {\n            return resolve(res);\n          },\n          error: function error(err) {\n            return reject(err);\n          }\n        });\n      });\n    },\n    //update the listIndex and parentID values for a specific indicator\n    updateListItems: function updateListItems(indID, formParIndID, listIndex) {\n      var item = this.listItems.find(function (li) {\n        return li.indicatorID === indID;\n      });\n      var index = this.listItems.indexOf(item);\n      this.listItems = [].concat(_toConsumableArray(this.listItems.slice(0, index)), _toConsumableArray(this.listItems.slice(index + 1)));\n      item.newParentID = formParIndID;\n      item.listIndex = listIndex;\n      this.listItems = [].concat(_toConsumableArray(this.listItems), [item]);\n    },\n    startDrag: function startDrag(evt) {\n      evt.dataTransfer.dropEffect = 'move';\n      evt.dataTransfer.effectAllowed = 'move';\n      evt.dataTransfer.setData('text/plain', evt.target.id);\n    },\n    onDrop: function onDrop(evt) {\n      var _this5 = this;\n\n      evt.preventDefault();\n      var draggedElID = evt.dataTransfer.getData('text');\n      var parentEl = evt.currentTarget; //drop event is on the parent ul\n\n      console.log('drop', 'currTar', parentEl.id, 'tar', evt.target.id);\n      var indID = parseInt(draggedElID.replace(this.dragLI_Prefix, ''));\n      var formParIndID = parentEl.id === \"base_drop_area\" ? null : parseInt(parentEl.id.replace(this.dragUL_Prefix, ''));\n      var elsLI = Array.from(document.querySelectorAll(\"#\".concat(parentEl.id, \" > li\")));\n\n      if (elsLI.length === 0) {\n        //if the drop ul has no lis, just append it\n        parentEl.append(document.getElementById(draggedElID));\n        this.updateListItems(indID, formParIndID, 0);\n      } else {\n        //otherwise, find the closest li to the droppoint to insert before\n        var dist = 9999;\n        var closestLI_id = null;\n        elsLI.forEach(function (el) {\n          var newDist = el.getBoundingClientRect().top - evt.clientY;\n\n          if (el.id !== draggedElID && newDist > 0 && newDist < dist) {\n            dist = newDist;\n            closestLI_id = el.id;\n          } //console.log('LIRectTop, evtdropY, dist, newDist, parentElID, liID')\n          //console.log(el.getBoundingClientRect().top, evt.clientY, dist, newDist, parentEl.id, el.id);\n\n        }); //console.log(elsLI, closestLI_id);\n\n        try {\n          if (closestLI_id !== null) {\n            parentEl.insertBefore(document.getElementById(draggedElID), document.getElementById(closestLI_id));\n          } else {\n            console.log('got a null id');\n          } //check the new indexes\n\n\n          var newElsLI = Array.from(document.querySelectorAll(\"#\".concat(parentEl.id, \" > li\")));\n          newElsLI.forEach(function (li, i) {\n            var indID = parseInt(li.id.replace(_this5.dragLI_Prefix, ''));\n\n            _this5.updateListItems(indID, formParIndID, i);\n          });\n        } catch (error) {\n          console.log(error);\n        }\n      }\n\n      if (parentEl.classList.contains('entered-drop-zone')) {\n        evt.target.classList.remove('entered-drop-zone');\n      }\n\n      this.listItems.forEach(function (it) {\n        _this5.handleSortShouldUpdate(it);\n\n        _this5.handleParentID_ShouldUpdate(it);\n      });\n    },\n    onDragLeave: function onDragLeave(evt) {\n      //@dragleave=\"onDragLeave\"\n      if (evt.target.classList.contains('form-index-listing-ul')) {\n        console.log('leave', evt.target); //if target is ul, rm drop zone hilite\n\n        evt.target.classList.remove('entered-drop-zone');\n      }\n    },\n    onDragEnter: function onDragEnter(evt) {\n      if (evt.target.classList.contains('form-index-listing-ul')) {\n        console.log('enter', evt.target); //if target is ul, apply style to hilite drop zone\n\n        evt.target.classList.add('entered-drop-zone');\n      }\n    }\n  },\n  watch: {\n    allListItemsAreAdded: function allListItemsAreAdded(newVal, oldVal) {\n      var _this6 = this;\n\n      console.log('watch triggered, all items have been added');\n\n      if (newVal === true) {\n        if (this.sortValuesToUpdate.length > 0) {\n          //possibly keep these with their own variable, don't mix with drag-drop\n          //update legacy sort to from prev sort val to new index based value\n          var updateSort = [];\n          this.sortValuesToUpdate.forEach(function (item) {\n            updateSort.push($.ajax({\n              type: 'POST',\n              url: \"\".concat(_this6.APIroot, \"formEditor/\").concat(item.indicatorID, \"/sort\"),\n              data: {\n                sort: item.listIndex,\n                CSRFToken: _this6.CSRFToken\n              },\n              success: function success() {},\n              error: function error(err) {\n                return console.log('ind sort post err', err);\n              }\n            }));\n          });\n          Promise.all(updateSort).then(function (res) {\n            console.log('promise all:', updateSort, res);\n\n            if (res.length > 0) {\n              _this6.selectNewCategory(_this6.formID, _this6.currSubformID !== null);\n            }\n          });\n        }\n      }\n    }\n  },\n  template: \"\\n    <div style=\\\"display:flex;\\\">\\n        <!-- FORM INDEX DISPLAY -->\\n        <div id=\\\"form_index_display\\\">\\n            <div v-if=\\\"sortOrParentChanged\\\" id=\\\"can_update\\\" \\n            tabindex=\\\"0\\\" @click=\\\"applySortAndParentID_Updates\\\"\\n            title=\\\"Apply form structure updates\\\">Apply changes</div>\\n            <div v-else id=\\\"can_update\\\" title=\\\"drag and drop sections and apply updates to change form structure\\\">\\u2139</div>\\n\\n            <h3 style=\\\"margin: 0; margin-bottom: 0.5em; color: black;\\\" :title=\\\"formName\\\">\\n            {{ formName }}\\n            </h3>\\n            <ul v-if=\\\"ajaxFormByCategoryID.length > 0\\\"\\n                id=\\\"base_drop_area\\\"\\n                class=\\\"form-index-listing-ul\\\"\\n                data-effect-allowed=\\\"move\\\"\\n                @drop.stop=\\\"onDrop\\\"\\n                @dragover.prevent\\n                @dragenter.prevent=\\\"onDragEnter\\\"\\n                @dragleave=\\\"onDragLeave\\\">\\n\\n                <form-index-listing v-for=\\\"(formSection, i) in ajaxFormByCategoryID\\\"\\n                    :id=\\\"'index_listing_'+formSection.indicatorID\\\"\\n                    :depth=0\\n                    :formNode=\\\"formSection\\\"\\n                    :index=i\\n                    :parentID=null\\n                    :key=\\\"'index_list_item_' + formSection.indicatorID\\\"\\n                    draggable=\\\"true\\\"\\n                    @dragstart.stop=\\\"startDrag\\\">\\n                </form-index-listing>\\n            </ul>\\n            <div style=\\\"display: flex; justify-content: center; align-items: center; margin-top: 1em;\\\">\\n                <button class=\\\"btn-general\\\" style=\\\"width: 100%\\\" @click=\\\"newQuestion(null)\\\">+ Add Section</button>\\n            </div>\\n        </div>\\n\\n        <!-- FORM ENTRY DISPLAY -->\\n        <div style=\\\"display:flex; flex-direction: column; width: 100%; background-color: white; border: 1px solid black; min-width: 400px;\\\">\\n            <template v-if=\\\"ajaxFormByCategoryID.length > 0\\\">\\n                <template v-for=\\\"(formSection, i) in ajaxFormByCategoryID\\\">\\n                    <div class=\\\"printformblock\\\">\\n                        <print-subindicators \\n                            :depth=\\\"0\\\"\\n                            :formNode=\\\"formSection\\\"\\n                            :index=\\\"i\\\"\\n                            :key=\\\"formSection.indicatorID\\\">\\n                        </print-subindicators>\\n                    </div>\\n                </template>\\n            </template>\\n            <div class=\\\"buttonNorm\\\" role=\\\"button\\\" tabindex=\\\"0\\\" \\n                @click=\\\"newQuestion(null)\\\" @keypress.enter=\\\"newQuestion(null)\\\"\\n                style=\\\"margin: auto -1px -1px -1px\\\">\\n                <img src=\\\"../../libs/dynicons/?img=list-add.svg&amp;w=16\\\" alt=\\\"\\\" title=\\\"Add Section Heading\\\"/> Add Section Heading\\n            </div>\\n        </div>\\n    </div>\"\n});\n\n//# sourceURL=webpack://leaf/./libs/js/LEAF/dialog_vue/components/PrintFormAjax.js?");

/***/ }),

/***/ "./libs/js/LEAF/dialog_vue/components/PrintSubindicators.js":
/*!******************************************************************!*\
  !*** ./libs/js/LEAF/dialog_vue/components/PrintSubindicators.js ***!
  \******************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({\n  name: 'PrintSubindicators',\n  props: {\n    depth: Number,\n    formNode: Object,\n    index: Number\n  },\n  inject: ['newQuestion', 'getForm', 'editIndicatorPrivileges', 'gridInstances', 'updateGridInstances'],\n  methods: {\n    ifthenUpdateIndicatorID: function ifthenUpdateIndicatorID(indicatorID) {\n      vueData.indicatorID = parseInt(indicatorID); //NOTE: TODO: possible better way\n\n      document.getElementById('btn-vue-update-trigger').dispatchEvent(new Event(\"click\"));\n    }\n  },\n  computed: {\n    hasChildNode: function hasChildNode() {\n      var child = this.formNode.child;\n      return child !== null && Object.keys(child).length > 0;\n    },\n    children: function children() {\n      var eles = [];\n\n      if (this.hasChildNode) {\n        for (var c in this.formNode.child) {\n          eles.push(this.formNode.child[c]);\n        }\n\n        eles = eles.sort(function (a, b) {\n          return a.sort - b.sort;\n        });\n      }\n\n      return eles;\n    },\n    bgColor: function bgColor() {\n      return \"rgb(\".concat(255 - 2 * this.depth, \",\").concat(255 - 2 * this.depth, \",\").concat(255 - 2 * this.depth, \")\");\n    },\n    suffix: function suffix() {\n      return \"\".concat(this.formNode.indicatorID, \"_\").concat(this.formNode.series);\n    },\n    colspan: function colspan() {\n      return this.formNode.format === null || this.formNode.format.toLowerCase() === 'textarea' ? 2 : 1;\n    },\n    required: function required() {\n      return parseInt(this.formNode.required) === 1;\n    },\n    isEmpty: function isEmpty() {\n      return this.formNode.isEmpty === true;\n    },\n    blockID: function blockID() {\n      //NOTE: not sure about empty id attr\n      return parseInt(this.depth) === 0 ? '' : \"subIndicator_\".concat(this.suffix);\n    },\n    labelID: function labelID() {\n      return parseInt(this.depth) === 0 ? \"PHindicator_\".concat(this.suffix) : '';\n    },\n    labelClass: function labelClass() {\n      if (parseInt(this.depth) === 0) {\n        return this.required && this.isEmpty ? \"printheading_missing\" : \"printheading\";\n      } else {\n        return this.required && this.isEmpty ? \"printsubheading_missing\" : \"printsubheading\";\n      }\n    },\n    truncatedOptions: function truncatedOptions() {\n      var _this$formNode$option;\n\n      return ((_this$formNode$option = this.formNode.options) === null || _this$formNode$option === void 0 ? void 0 : _this$formNode$option.slice(0, 6)) || [];\n    }\n  },\n  mounted: function mounted() {\n    if (this.formNode.format === 'grid') {\n      var options = JSON.parse(this.formNode.options[0]);\n      this.updateGridInstances(options, this.formNode.indicatorID, this.formNode.series);\n      this.gridInstances[this.formNode.indicatorID].preview();\n    }\n  },\n  template: \"<div :class=\\\"depth===0 ? 'printmainblock' : 'printsubblock'\\\" :id=\\\"blockID\\\" \\n             :style=\\\"{margin: depth!==0 ? '0.4em 0.1em' : 0}\\\">\\n            <div :class=\\\"depth===0 ? 'printmainlabel' : 'printsublabel'\\\">\\n                <div :style=\\\"{display: depth===0 ? 'flex': 'inline-block'}\\\">\\n                    <div v-if=\\\"depth===0\\\" class=\\\"printcounter\\\">\\n                        <span tabindex=\\\"0\\\" aria-label=\\\"formNode.indicatorID\\\" style=\\\"display:inline-block; margin:0; height: 100%;\\\">{{index+1}}</span>\\n                    </div>\\n                    <div :id=\\\"labelID\\\" :class=\\\"labelClass\\\" \\n                        :style=\\\"{display: depth===0 ? 'flex' : 'block'}\\\" \\n                        style=\\\"align-items:center; width: 100%;\\\">\\n                        <img v-if=\\\"parseInt(formNode.is_sensitive)===1\\\" \\n                            src=\\\"../../libs/dynicons/?img=eye_invisible.svg&amp;w=16\\\" alt=\\\"\\\" \\n                            title=\\\"This field is sensitive\\\" />\\n                        <span class=\\\"printsubheading\\\"  \\n                            style=\\\"padding: 0 0.2em; font-size: 16px; cursor: pointer\\\"\\n                            :style=\\\"{fontWeight: depth===0 ? 'bold' : 'normal'}\\\" \\n                            :title=\\\"'indicatorID: ' + formNode.indicatorID\\\"\\n                            v-html=\\\"formNode.name || '[ blank ]'\\\">\\n                        </span>\\n                        <div style=\\\"display:inline-block; float:right;\\\">\\n                            <img src=\\\"../../libs/dynicons/?img=accessories-text-editor.svg&amp;w=16\\\" tabindex=\\\"0\\\" \\n                                @keypress.enter=\\\"getForm(formNode.indicatorID, formNode.series)\\\" @click=\\\"getForm(formNode.indicatorID, formNode.series)\\\" alt=\\\"\\\" \\n                                title=\\\"Edit this field\\\" style=\\\"cursor: pointer; margin-right: 0.2em;\\\" />\\n                            <img src=\\\"../../libs/dynicons/?img=emblem-readonly.svg&amp;w=16\\\" tabindex=\\\"0\\\" \\n                                @keypress.enter=\\\"editIndicatorPrivileges(formNode.indicatorID)\\\" @click=\\\"editIndicatorPrivileges(formNode.indicatorID)\\\" alt=\\\"\\\" \\n                                title=\\\"Edit indicator privileges\\\" style=\\\"cursor: pointer; margin-right: 0.2em;\\\" />\\n                            <img v-if=\\\"depth>0 && (formNode.format==='dropdown' || formNode.format==='text')\\\" :id=\\\"'edit_conditions_' + formNode.indicatorID\\\" \\n                                src=\\\"../../libs/dynicons/?img=preferences-system.svg&amp;w=16\\\" tabindex=\\\"0\\\" @keypress.enter=\\\"ifthenUpdateIndicatorID(formNode.indicatorID)\\\" \\n                                @click=\\\"ifthenUpdateIndicatorID(formNode.indicatorID)\\\" alt=\\\"\\\" title=\\\"Edit conditions\\\" style=\\\"cursor: pointer\\\" />\\n                            <img v-if=\\\"formNode.has_code\\\" src=\\\"../../libs/dynicons/?img=document-properties.svg&amp;w=16\\\" alt=\\\"\\\" \\n                                title=\\\"Advanced Options present\\\" style=\\\"cursor: pointer\\\" />\\n                        </div>\\n                        <br v-if=\\\"depth>0\\\" v-for=\\\"n in 3\\\" />\\n                        <span class=\\\"buttonNorm\\\" tabindex=\\\"0\\\" title=\\\"Add Sub-question\\\"\\n                            style=\\\"margin-left:auto;\\\"\\n                            :class=\\\"{subquestionAddNew: depth > 0}\\\"\\n                            @keypress.enter=\\\"newQuestion(formNode.indicatorID)\\\"\\n                            @click=\\\"newQuestion(formNode.indicatorID)\\\">\\n                            <img src=\\\"../../libs/dynicons/?img=list-add.svg&amp;w=16\\\" alt=\\\"\\\" /> \\n                            Add Sub-question\\n                        </span>\\n                    </div>\\n                </div>\\n\\n                <div style=\\\"display: flex;\\\" :style=\\\"{minHeight: depth===0 ? '75px': 0}\\\">\\n                    <div tabindex=\\\"0\\\" class=\\\"printResponse\\\" :id=\\\"'xhrIndicator_' + suffix\\\">\\n\\n                    <!-- NOTE: FORMAT PREVIEWS -->\\n                    <template v-if=\\\"formNode.format==='grid'\\\">\\n                        {{formNode.format}}\\n                        <br /><br />\\n                        <div :id=\\\"'grid'+ suffix\\\" style=\\\"width: 100%; max-width: 100%;\\\"></div>\\n                    </template>\\n                    <template v-else>\\n                        {{formNode.format}}\\n                        <ul v-if=\\\"formNode.options && formNode.options !== ''\\\">\\n                            <li v-for=\\\"o in truncatedOptions\\\" :key=\\\"o\\\">{{o}}</li>\\n                            <li v-if=\\\"formNode.options !== '' && formNode.options.length > 6\\\">...</li>\\n                        </ul>\\n                    </template>\\n\\n                    <span class=\\\"printResponse\\\" :id=\\\"'data_' + suffix\\\"></span>\\n                    <!-- NOTE: RECURSIVE SUBQUESTIONS -->\\n                    <template v-if=\\\"hasChildNode\\\">\\n                        <div class=\\\"printformblock\\\" :style=\\\"{marginLeft: depth +'px'}\\\" style=\\\"display:flex; flex-wrap:wrap\\\">\\n                            <print-subindicators v-for=\\\"child in children\\\"\\n                                :depth=\\\"depth + 4\\\"\\n                                :formNode=\\\"child\\\"\\n                                :key=\\\"child.indicatorID\\\"> \\n                            </print-subindicators>\\n                        </div>\\n                    </template>\\n                    </div>\\n                </div>\\n            </div> <!-- END MAIN/SUB LABEL -->\\n        </div> <!-- END MAIN/SUB BLOCK -->\"\n});\n\n//# sourceURL=webpack://leaf/./libs/js/LEAF/dialog_vue/components/PrintSubindicators.js?");

/***/ }),

/***/ "./libs/js/LEAF/dialog_vue/components/RestoreFields.js":
/*!*************************************************************!*\
  !*** ./libs/js/LEAF/dialog_vue/components/RestoreFields.js ***!
  \*************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({\n  data: function data() {\n    return {\n      disabledFields: 0\n    };\n  },\n  inject: ['APIroot', 'CSRFToken'],\n  beforeMount: function beforeMount() {\n    var _this = this;\n\n    $.ajax({\n      type: 'GET',\n      url: \"\".concat(this.APIroot, \"form/indicator/list/disabled\"),\n      success: function success(res) {\n        _this.disabledFields = res.filter(function (obj) {\n          return parseInt(obj.indicatorID) > 0;\n        });\n      },\n      error: function error(err) {\n        return console.log(err);\n      },\n      cache: false\n    });\n  },\n  methods: {\n    restoreField: function restoreField(indicatorID) {\n      var _this2 = this;\n\n      $.ajax({\n        type: 'POST',\n        url: \"\".concat(this.APIroot, \"formEditor/\").concat(indicatorID, \"/disabled\"),\n        data: {\n          CSRFToken: CSRFToken,\n          disabled: 0\n        },\n        success: function success() {\n          _this2.disabledFields = _this2.disabledFields.filter(function (f) {\n            return f.indicatorID !== indicatorID;\n          });\n          alert('The field has been restored.');\n        },\n        error: function error(err) {\n          return console.log(err);\n        }\n      });\n    }\n  },\n  template: \"<div style=\\\"margin: 0 1em;\\\">\\n            <h3 style=\\\"margin: 0;\\\">List of disabled fields available for recovery</h3>\\n            <div>Deleted fields and associated data will be not display in the Report Builder</div>\\n            <div>\\n                <table v-if=\\\"disabledFields !== 0\\\" class=\\\"usa-table leaf-whitespace-normal\\\">\\n                    <thead>\\n                        <tr>\\n                            <th>indicatorID</th>\\n                            <th>Form</th>\\n                            <th>Field Name</th>\\n                            <th>Input Format</th>\\n                            <th>Status</th>\\n                            <th>Restore</th>\\n                        </tr>\\n                    </thead>\\n                    <tbody id=\\\"fields\\\">\\n                        <tr v-for=\\\"f in disabledFields\\\" key=\\\"f.indicatorID\\\">\\n                            <td>{{ f.indicatorID }}</td>\\n                            <td>{{ f.categoryName }}</td>\\n                            <td>{{ f.name }}</td>\\n                            <td>{{ f.format }}</td>\\n                            <td>{{ f.disabled }}</td>\\n                            <td><button class=\\\"buttonNorm\\\" \\n                                @click=\\\"restoreField(f.indicatorID)\\\">\\n                                Restore this field</button>\\n                            </td>\\n                        </tr>\\n                    </tbody>\\n                </table>\\n                <p v-else>Loading ...</p>\\n            </div>\\n        </div>\"\n});\n\n//# sourceURL=webpack://leaf/./libs/js/LEAF/dialog_vue/components/RestoreFields.js?");

/***/ }),

/***/ "./libs/js/LEAF/dialog_vue/components/dialog_content/EditPropertiesDialog.js":
/*!***********************************************************************************!*\
  !*** ./libs/js/LEAF/dialog_vue/components/dialog_content/EditPropertiesDialog.js ***!
  \***********************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({\n  data: function data() {\n    return {\n      initialFocusElID: 'name',\n      categoryName: this.currentCategorySelection.categoryName,\n      categoryDescription: this.currentCategorySelection.categoryDescription,\n      workflowID: parseInt(this.currentCategorySelection.workflowID),\n      description: this.currentCategorySelection.description || '',\n      needToKnow: parseInt(this.currentCategorySelection.needToKnow),\n      sort: parseInt(this.currentCategorySelection.sort),\n      visible: parseInt(this.currentCategorySelection.visible),\n      type: this.currentCategorySelection.type,\n      formID: this.currSubformID || this.currCategoryID\n    };\n  },\n  inject: ['APIroot', 'CSRFToken', 'currCategoryID', 'currSubformID', 'truncateText', 'ajaxWorkflowRecords', 'currentCategorySelection', 'currentCategoryIsSensitive', 'updateCategoriesProperty', 'closeFormDialog'],\n  computed: {\n    isSubform: function isSubform() {\n      return this.currentCategorySelection.parentID !== '';\n    }\n  },\n  mounted: function mounted() {\n    document.getElementById(this.initialFocusElID).focus();\n  },\n  methods: {\n    updateWorkflowDescription: function updateWorkflowDescription() {\n      var _this = this;\n\n      var currWorkflow = this.ajaxWorkflowRecords.find(function (rec) {\n        return parseInt(rec.workflowID) === _this.workflowID;\n      });\n      this.description = (currWorkflow === null || currWorkflow === void 0 ? void 0 : currWorkflow.description) || '';\n    },\n    onSave: function onSave() {\n      var _this2 = this;\n\n      console.log('clicked edit properties save');\n      var editPropertyUpdates = [];\n      var nameChanged = this.categoryName !== this.currentCategorySelection.categoryName;\n      var descriptionChanged = this.categoryDescription !== this.currentCategorySelection.categoryDescription;\n      var workflowChanged = this.workflowID !== parseInt(this.currentCategorySelection.workflowID);\n      var needToKnowChanged = this.needToKnow !== parseInt(this.currentCategorySelection.needToKnow);\n      var sortChanged = this.sort !== parseInt(this.currentCategorySelection.sort);\n      var visibleChanged = this.visible !== parseInt(this.currentCategorySelection.visible);\n      var typeChanged = this.type !== this.currentCategorySelection.type;\n\n      if (nameChanged) {\n        editPropertyUpdates.push($.ajax({\n          type: 'POST',\n          url: \"\".concat(this.APIroot, \"formEditor/formName\"),\n          data: {\n            name: this.categoryName,\n            categoryID: this.formID,\n            CSRFToken: this.CSRFToken\n          },\n          success: function success() {\n            //NOTE:  except for WF, these give back an empty array\n            _this2.updateCategoriesProperty(_this2.formID, 'categoryName', _this2.categoryName);\n          },\n          error: function error(err) {\n            return console.log('name post err', err);\n          }\n        }));\n      }\n\n      if (descriptionChanged) {\n        editPropertyUpdates.push($.ajax({\n          type: 'POST',\n          url: \"\".concat(this.APIroot, \"formEditor/formDescription\"),\n          data: {\n            description: this.categoryDescription,\n            categoryID: this.formID,\n            CSRFToken: this.CSRFToken\n          },\n          success: function success() {\n            _this2.updateCategoriesProperty(_this2.formID, 'categoryDescription', _this2.categoryDescription);\n          },\n          error: function error(err) {\n            return console.log('form description post err', err);\n          }\n        }));\n      }\n\n      if (workflowChanged) {\n        editPropertyUpdates.push($.ajax({\n          type: 'POST',\n          url: \"\".concat(this.APIroot, \"formEditor/formWorkflow\"),\n          data: {\n            workflowID: this.workflowID,\n            categoryID: this.formID,\n            CSRFToken: this.CSRFToken\n          },\n          success: function success(res) {\n            if (res === false) {\n              //1 on success\n              alert('The workflow could not be set because this form is stapled to another form');\n            } else {\n              _this2.updateCategoriesProperty(_this2.formID, 'workflowID', _this2.workflowID);\n\n              _this2.updateCategoriesProperty(_this2.formID, 'description', _this2.description);\n            }\n          },\n          error: function error(err) {\n            return console.log('workflow post err', err);\n          }\n        }));\n      }\n\n      if (needToKnowChanged) {\n        editPropertyUpdates.push($.ajax({\n          type: 'POST',\n          url: \"\".concat(this.APIroot, \"formEditor/formNeedToKnow\"),\n          data: {\n            needToKnow: this.needToKnow,\n            categoryID: this.formID,\n            CSRFToken: this.CSRFToken\n          },\n          success: function success() {\n            _this2.updateCategoriesProperty(_this2.formID, 'needToKnow', _this2.needToKnow);\n          },\n          error: function error(err) {\n            return console.log('ntk post err', err);\n          }\n        }));\n      }\n\n      if (sortChanged) {\n        editPropertyUpdates.push($.ajax({\n          type: 'POST',\n          url: \"\".concat(this.APIroot, \"formEditor/formSort\"),\n          data: {\n            sort: this.sort,\n            categoryID: this.formID,\n            CSRFToken: this.CSRFToken\n          },\n          success: function success() {\n            _this2.updateCategoriesProperty(_this2.formID, 'sort', _this2.sort);\n          },\n          error: function error(err) {\n            return console.log('sort post err', err);\n          }\n        }));\n      }\n\n      if (visibleChanged) {\n        editPropertyUpdates.push($.ajax({\n          type: 'POST',\n          url: \"\".concat(this.APIroot, \"formEditor/formVisible\"),\n          data: {\n            visible: this.visible,\n            categoryID: this.formID,\n            CSRFToken: this.CSRFToken\n          },\n          success: function success() {\n            _this2.updateCategoriesProperty(_this2.formID, 'visible', _this2.visible);\n          },\n          error: function error(err) {\n            return console.log('visibility post err', err);\n          }\n        }));\n      }\n\n      if (typeChanged) {\n        editPropertyUpdates.push($.ajax({\n          type: 'POST',\n          url: \"\".concat(this.APIroot, \"formEditor/formType\"),\n          data: {\n            type: this.type,\n            categoryID: this.formID,\n            CSRFToken: this.CSRFToken\n          },\n          success: function success() {\n            _this2.updateCategoriesProperty(_this2.formID, 'type', _this2.type);\n          },\n          error: function error(err) {\n            return console.log('type post err', err);\n          }\n        }));\n      }\n\n      Promise.all(editPropertyUpdates).then(function () {\n        console.log('promise all:', editPropertyUpdates);\n\n        _this2.closeFormDialog();\n      });\n    }\n  },\n  template: \"<table id=\\\"edit-properties-modal\\\">\\n        <tr> <!--'b', 'i', 'u', 'ol', 'ul', 'li', 'br', 'p', 'table', 'td', 'tr', 'thead', 'tbody', 'span', 'strong', 'em', 'colgroup', 'col'-->\\n            <td>Name</td>\\n            <td>\\n                <input id=\\\"name\\\" type=\\\"text\\\" maxlength=\\\"50\\\" v-model=\\\"categoryName\\\" />\\n            </td>\\n        </tr>\\n        <tr>\\n            <td>Description</td>\\n            <td>\\n                <textarea id=\\\"description\\\" maxlength=\\\"255\\\" v-model=\\\"categoryDescription\\\">\\n                </textarea>\\n            </td>\\n        </tr>\\n        <template v-if=\\\"!isSubform\\\">\\n            <tr>\\n                <td>Workflow</td>\\n                <td id=\\\"container_workflowID\\\">\\n                    <select v-if=\\\"ajaxWorkflowRecords.length > 0\\\" \\n                        id=\\\"workflowID\\\" name=\\\"select-workflow\\\" \\n                        title=\\\"select workflow\\\"\\n                        v-model.number=\\\"workflowID\\\"\\n                        @change=\\\"updateWorkflowDescription\\\">\\n                        <option value=\\\"0\\\" :selected=\\\"workflowID===0\\\">No Workflow</option>\\n                        <template v-for=\\\"r in ajaxWorkflowRecords\\\">\\n                            <option v-if=\\\"parseInt(r.workflowID) > 0\\\"\\n                                :value=\\\"r.workflowID\\\"\\n                                :selected=\\\"workflowID===parseInt(r.workflowID)\\\">\\n                                ID#{{r.workflowID}}: {{truncateText(r.description)}}\\n                            </option>\\n                        </template>\\n                    </select>\\n                    <span v-else style=\\\"color: red\\\">A workflow must be set up first</span>\\n                </td>\\n            </tr>\\n            <tr>\\n                <td>\\n                    <img src=\\\"../../libs/dynicons/?img=emblem-notice.svg&w=16\\\" \\n                    title=\\\"When turned on, the people associated with the workflow are the only ones who have access to view the form.  Forced on if form contains sensitive information.\\\" />\\n                    Need to Know mode  \\n                </td>\\n                <td>\\n                    <select id=\\\"needToKnow\\\" title=\\\"Need To Know\\\" v-model.number=\\\"needToKnow\\\" :style=\\\"{width: currentCategoryIsSensitive ? '100%' : 'auto'}\\\">\\n                        <option v-if=\\\"!currentCategoryIsSensitive\\\" value=\\\"0\\\" :selected=\\\"needToKnow===0\\\">Off</option>\\n                        <option value=\\\"1\\\" :selected=\\\"currentCategoryIsSensitive===true || needToKnow===1\\\">\\n                        {{currentCategoryIsSensitive ? 'Forced on because sensitive fields are present' : 'On'}}\\n                        </option>\\n                    </select>\\n                </td>\\n            </tr>\\n            <tr>\\n                <td>\\n                    <img src=\\\"../../libs/dynicons/?img=emblem-notice.svg&w=16\\\" \\n                    title=\\\"When hidden, users will not be able to select this form as an option.\\\" />\\n                    Availability \\n                </td>\\n                <td>\\n                    <select id=\\\"availability\\\" title=\\\"Select Availability\\\" v-model.number=\\\"visible\\\">\\n                        <option value=\\\"1\\\" :selected=\\\"visible===1\\\">Available</option>\\n                        <option value=\\\"0\\\" :selected=\\\"visible===0\\\">Hidden</option>\\n                    </select>\\n                </td>\\n            </tr>\\n            <tr>\\n                <td>Sort Priority</td>\\n                <td><input id=\\\"sort\\\" type=\\\"number\\\" v-model.number=\\\"sort\\\" style=\\\"width: 50px;\\\"/></td>\\n            </tr>\\n            <tr>\\n                <td>\\n                    <img src=\\\"../../libs/dynicons/?img=emblem-notice.svg&w=16\\\" \\n                    title=\\\"Change type of form\\\" />\\n                    Type  \\n                </td>\\n                <td>\\n                    <select id=\\\"formType\\\" title=\\\"Change type of form\\\" v-model=\\\"type\\\" >\\n                        <option value=\\\"\\\" :selected=\\\"type===''\\\">Standard</option>\\n                        <option value=\\\"parallel_processing\\\" :selected=\\\"type==='parallel_processing'\\\">Parallel Processing</option>\\n                    </select>\\n                </td>\\n            </tr>\\n        </template>\\n    </table>\"\n});\n\n//# sourceURL=webpack://leaf/./libs/js/LEAF/dialog_vue/components/dialog_content/EditPropertiesDialog.js?");

/***/ }),

/***/ "./libs/js/LEAF/dialog_vue/components/dialog_content/FormHistoryDialog.js":
/*!********************************************************************************!*\
  !*** ./libs/js/LEAF/dialog_vue/components/dialog_content/FormHistoryDialog.js ***!
  \********************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({\n  data: function data() {\n    return {\n      divSaveCancelID: 'leaf-vue-dialog-cancel-save',\n      page: 1,\n      formID: this.currSubformID || this.currCategoryID,\n      ajaxRes: ''\n    };\n  },\n  inject: ['currSubformID', 'currCategoryID'],\n  mounted: function mounted() {\n    document.getElementById(this.divSaveCancelID).style.display = 'none';\n    this.getPage();\n  },\n  computed: {\n    showNext: function showNext() {\n      return this.ajaxRes.indexOf('No history to show') === -1;\n    },\n    showPrev: function showPrev() {\n      return this.page > 1;\n    }\n  },\n  methods: {\n    getNext: function getNext() {\n      this.page++;\n      this.getPage();\n    },\n    getPrev: function getPrev() {\n      this.page--;\n      this.getPage();\n    },\n    getPage: function getPage() {\n      var _this = this;\n\n      $.ajax({\n        type: 'GET',\n        url: \"ajaxIndex.php?a=gethistory&type=form&gethistoryslice=1&page=\".concat(this.page, \"&id=\").concat(this.formID),\n        dataType: 'text',\n        success: function success(res) {\n          _this.ajaxRes = res;\n        },\n        error: function error(err) {\n          return console.log(err);\n        },\n        cache: false\n      });\n    }\n  },\n  template: \"<div id=\\\"history-slice\\\" v-html=\\\"ajaxRes\\\" style=\\\"min-height: 100px; min-width: 300px;\\\"></div>\\n        <div id=\\\"history-page-buttons\\\" style=\\\"display: flex; justify-content: space-between;\\\">\\n            <button v-if=\\\"showPrev\\\" id=\\\"prev\\\" \\n            class=\\\"usa-button leaf-btn-med;\\\"\\n            @click=\\\"getPrev\\\" title=\\\"get previous page\\\">\\n            Previous page\\n            </button>\\n            <button v-if=\\\"showNext\\\" id=\\\"next\\\" \\n            class=\\\"usa-button leaf-btn-med;\\\"\\n            style=\\\"margin: 0; margin-left:auto\\\"\\n            @click=\\\"getNext\\\" title=\\\"get next page\\\">\\n            Next page\\n            </button>\\n        </div>\"\n});\n\n//# sourceURL=webpack://leaf/./libs/js/LEAF/dialog_vue/components/dialog_content/FormHistoryDialog.js?");

/***/ }),

/***/ "./libs/js/LEAF/dialog_vue/components/dialog_content/ImportFormDialog.js":
/*!*******************************************************************************!*\
  !*** ./libs/js/LEAF/dialog_vue/components/dialog_content/ImportFormDialog.js ***!
  \*******************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({\n  data: function data() {\n    return {\n      initialFocusElID: 'formPacket',\n      files: null\n    };\n  },\n  inject: ['APIroot', 'CSRFToken', 'closeFormDialog', 'selectNewCategory'],\n  mounted: function mounted() {\n    document.getElementById(this.initialFocusElID).focus();\n  },\n  methods: {\n    onSave: function onSave() {\n      var _this = this;\n\n      if (this.files !== null) {\n        var pkg = new FormData();\n        pkg.append('formPacket', this.files[0]);\n        pkg.append('CSRFToken', this.CSRFToken);\n        $.ajax({\n          type: 'POST',\n          url: \"\".concat(this.APIroot, \"formStack/import\"),\n          processData: false,\n          contentType: false,\n          cache: false,\n          data: pkg,\n          success: function success(res) {\n            if (res === true) {\n              //NOTE: false if issues, newCatID on success would be better\n              console.log('form import success');\n            } else {\n              console.log(res);\n            }\n\n            _this.closeFormDialog();\n\n            _this.selectNewCategory(null);\n          },\n          error: function error(err) {\n            return console.log('form import error', err);\n          }\n        });\n      } else {\n        console.log('no attachment');\n      }\n    },\n    attachForm: function attachForm(e) {\n      var files = e.target.files || e.dataTransfer.files;\n\n      if (files.length > 0) {\n        this.files = files;\n      }\n    }\n  },\n  template: \"\\n            <div id=\\\"file_control\\\" style=\\\"margin-bottom: 1em;\\\">\\n                <p>Select LEAF Form Packet to import:</p>\\n                <input id=\\\"formPacket\\\" name=\\\"formPacket\\\" type=\\\"file\\\" @change=\\\"attachForm\\\"/>\\n            </div>\"\n});\n\n//# sourceURL=webpack://leaf/./libs/js/LEAF/dialog_vue/components/dialog_content/ImportFormDialog.js?");

/***/ }),

/***/ "./libs/js/LEAF/dialog_vue/components/dialog_content/IndicatorEditing.js":
/*!*******************************************************************************!*\
  !*** ./libs/js/LEAF/dialog_vue/components/dialog_content/IndicatorEditing.js ***!
  \*******************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({\n  data: function data() {\n    var _this$ajaxIndicatorBy, _this$ajaxIndicatorBy2, _this$ajaxIndicatorBy3, _this$ajaxIndicatorBy4, _this$ajaxIndicatorBy5, _this$ajaxIndicatorBy6, _this$ajaxIndicatorBy7, _this$ajaxIndicatorBy8, _this$ajaxIndicatorBy9, _this$ajaxIndicatorBy10, _this$ajaxIndicatorBy11, _this$ajaxIndicatorBy12, _this$ajaxIndicatorBy13, _this$ajaxIndicatorBy14;\n\n    return {\n      initialFocusElID: 'name',\n      left: '{{',\n      right: '}}',\n      formID: this.currSubformID || this.currCategoryID,\n      formats: {\n        text: \"Single line text\",\n        textarea: \"Multi-line text\",\n        grid: \"Grid (Table with rows and columns)\",\n        number: \"Numeric\",\n        currency: \"Currency\",\n        date: \"Date\",\n        radio: \"Radio (single select, multiple options)\",\n        checkbox: \"Checkbox (A single checkbox)\",\n        checkboxes: \"Checkboxes (Multiple Checkboxes)\",\n        multiselect: \"Multi-Select Dropdown\",\n        dropdown: \"Dropdown Menu (single select, multiple options)\",\n        fileupload: \"File Attachment\",\n        image: \"Image Attachment\",\n        orgchart_group: \"Orgchart Group\",\n        orgchart_position: \"Orgchart Position\",\n        orgchart_employee: \"Orgchart Employee\",\n        raw_data: \"Raw Data (for programmers)\"\n      },\n      listForParentIDs: [],\n      isLoadingParentIDs: true,\n      multianswerFormats: ['checkboxes', 'radio', 'multiselect', 'dropdown'],\n      name: ((_this$ajaxIndicatorBy = this.ajaxIndicatorByID[this.currIndicatorID]) === null || _this$ajaxIndicatorBy === void 0 ? void 0 : _this$ajaxIndicatorBy.name) || '',\n      options: ((_this$ajaxIndicatorBy2 = this.ajaxIndicatorByID[this.currIndicatorID]) === null || _this$ajaxIndicatorBy2 === void 0 ? void 0 : _this$ajaxIndicatorBy2.options) || [],\n      //options property is arr of options (if present)\n      format: ((_this$ajaxIndicatorBy3 = this.ajaxIndicatorByID[this.currIndicatorID]) === null || _this$ajaxIndicatorBy3 === void 0 ? void 0 : _this$ajaxIndicatorBy3.format) || '',\n      //format property here is just the format name\n      description: ((_this$ajaxIndicatorBy4 = this.ajaxIndicatorByID[this.currIndicatorID]) === null || _this$ajaxIndicatorBy4 === void 0 ? void 0 : _this$ajaxIndicatorBy4.description) || '',\n      defaultValue: ((_this$ajaxIndicatorBy5 = this.ajaxIndicatorByID[this.currIndicatorID]) === null || _this$ajaxIndicatorBy5 === void 0 ? void 0 : _this$ajaxIndicatorBy5[\"default\"]) || '',\n      required: parseInt((_this$ajaxIndicatorBy6 = this.ajaxIndicatorByID[this.currIndicatorID]) === null || _this$ajaxIndicatorBy6 === void 0 ? void 0 : _this$ajaxIndicatorBy6.required) === 1 || false,\n      is_sensitive: parseInt((_this$ajaxIndicatorBy7 = this.ajaxIndicatorByID[this.currIndicatorID]) === null || _this$ajaxIndicatorBy7 === void 0 ? void 0 : _this$ajaxIndicatorBy7.is_sensitive) === 1 || false,\n      parentID: (_this$ajaxIndicatorBy8 = this.ajaxIndicatorByID[this.currIndicatorID]) !== null && _this$ajaxIndicatorBy8 !== void 0 && _this$ajaxIndicatorBy8.parentID ? parseInt(this.ajaxIndicatorByID[this.currIndicatorID].parentID) : this.newIndicatorParentID,\n      sort: parseInt((_this$ajaxIndicatorBy9 = this.ajaxIndicatorByID[this.currIndicatorID]) === null || _this$ajaxIndicatorBy9 === void 0 ? void 0 : _this$ajaxIndicatorBy9.sort) || 0,\n      //checkboxes input\n      singleOptionValue: ((_this$ajaxIndicatorBy10 = this.ajaxIndicatorByID[this.currIndicatorID]) === null || _this$ajaxIndicatorBy10 === void 0 ? void 0 : _this$ajaxIndicatorBy10.format) === 'checkbox' ? this.ajaxIndicatorByID[this.currIndicatorID].options : '',\n      //multi answer format inputs\n      multiOptionValue: ['checkboxes', 'radio', 'multiselect', 'dropdown'].includes((_this$ajaxIndicatorBy11 = this.ajaxIndicatorByID[this.currIndicatorID]) === null || _this$ajaxIndicatorBy11 === void 0 ? void 0 : _this$ajaxIndicatorBy11.format) ? (_this$ajaxIndicatorBy12 = this.ajaxIndicatorByID[this.currIndicatorID].options) === null || _this$ajaxIndicatorBy12 === void 0 ? void 0 : _this$ajaxIndicatorBy12.join('\\n') : '',\n      //used for grid formats\n      gridJSON: ((_this$ajaxIndicatorBy13 = this.ajaxIndicatorByID[this.currIndicatorID]) === null || _this$ajaxIndicatorBy13 === void 0 ? void 0 : _this$ajaxIndicatorBy13.format) === 'grid' ? JSON.parse((_this$ajaxIndicatorBy14 = this.ajaxIndicatorByID[this.currIndicatorID]) === null || _this$ajaxIndicatorBy14 === void 0 ? void 0 : _this$ajaxIndicatorBy14.options[0]) : '',\n      archived: false,\n      deleted: false,\n      codeEditorHtml: {},\n      codeEditorHtmlPrint: {},\n      html: !this.isEditingModal || this.ajaxIndicatorByID[this.currIndicatorID].html === null ? '' : this.ajaxIndicatorByID[this.currIndicatorID].html,\n      htmlPrint: !this.isEditingModal || this.ajaxIndicatorByID[this.currIndicatorID].htmlPrint === null ? '' : this.ajaxIndicatorByID[this.currIndicatorID].htmlPrint\n    };\n  },\n  props: {\n    contentProps: Object\n  },\n  inject: ['APIroot', 'CSRFToken', 'isEditingModal', 'closeFormDialog', 'currCategoryID', 'currSubformID', 'currIndicatorID', 'ajaxIndicatorByID', 'ajaxFormByCategoryID', 'selectNewCategory', 'updateCategoriesProperty', 'newIndicatorParentID', 'hasDevConsoleAccess'],\n  mounted: function mounted() {\n    var _this = this;\n\n    console.log('indicator-editing mounted');\n\n    if (this.isEditingModal === true) {\n      this.getFormParentIDs().then(function (res) {\n        _this.listForParentIDs = res;\n        _this.isLoadingParentIDs = false;\n      });\n      this.setupAdvancedOptions();\n    }\n\n    if (XSSHelpers.containsTags(this.name, ['<b>', '<i>', '<u>', '<ol>', '<li>', '<br>', '<p>', '<td>'])) {\n      $('#advNameEditor').click();\n      document.querySelector('.trumbowyg-editor').focus();\n    } else {\n      document.getElementById(this.initialFocusElID).focus();\n    }\n  },\n  computed: {\n    isMultiOptionQuestion: function isMultiOptionQuestion() {\n      return this.multianswerFormats.includes(this.format);\n    },\n    fullFormatForPost: function fullFormatForPost() {\n      var fullFormat = this.format;\n\n      switch (this.format) {\n        case 'grid':\n          this.updateGridJSON();\n          fullFormat = fullFormat + \"\\n\" + JSON.stringify(this.gridJSON);\n          break;\n\n        case 'radio':\n        case 'checkboxes':\n        case 'multiselect':\n        case 'dropdown':\n          fullFormat = fullFormat + \"\\n\" + this.formatIndicatorMultiAnswer();\n          break;\n\n        case 'checkbox':\n          fullFormat = fullFormat + \"\\n\" + this.singleOptionValue;\n          break;\n\n        default:\n          break;\n      }\n\n      return fullFormat;\n    }\n  },\n  methods: {\n    getFormParentIDs: function getFormParentIDs() {\n      var _this2 = this;\n\n      return new Promise(function (resolve, reject) {\n        $.ajax({\n          type: 'GET',\n          url: \"\".concat(_this2.APIroot, \"/form/_\").concat(_this2.currCategoryID, \"/flat\"),\n          success: function success(res) {\n            return resolve(res);\n          },\n          error: function error(err) {\n            return reject(err);\n          }\n        });\n      });\n    },\n    preventWhenFormatNone: function preventWhenFormatNone(event) {\n      if (event.target.id.toLowerCase() === \"indicatortype\") {\n        if (this.format === '' && (this.required === true || this.is_sensitive === true)) {\n          this.required = false;\n          this.is_sensitive = false;\n          alert(\"You can't mark a field as sensitive or required if the Input Format is \\\"None\\\".\");\n        }\n      } else {\n        if (this.format === '' && event.target.checked === true) {\n          event.target.checked = false;\n          var id = event.target.id;\n          var text = id === 'sensitive' ? 'sensitive' : 'required';\n          alert(\"You can't mark a field as \".concat(text, \" if the Input Format is \\\"None\\\".\"));\n        }\n      }\n    },\n    setupAdvancedOptions: function setupAdvancedOptions() {\n      this.codeEditorHtml = CodeMirror.fromTextArea(document.getElementById(\"html\"), {\n        mode: \"htmlmixed\",\n        lineNumbers: true,\n        extraKeys: {\n          \"F11\": function F11(cm) {\n            cm.setOption(\"fullScreen\", !cm.getOption(\"fullScreen\"));\n          },\n          \"Esc\": function Esc(cm) {\n            if (cm.getOption(\"fullScreen\")) cm.setOption(\"fullScreen\", false);\n          },\n          \"Ctrl-S\": function CtrlS(cm) {\n            saveCodeHTML();\n          }\n        }\n      });\n      this.codeEditorHtmlPrint = CodeMirror.fromTextArea(document.getElementById(\"htmlPrint\"), {\n        mode: \"htmlmixed\",\n        lineNumbers: true,\n        extraKeys: {\n          \"F11\": function F11(cm) {\n            cm.setOption(\"fullScreen\", !cm.getOption(\"fullScreen\"));\n          },\n          \"Esc\": function Esc(cm) {\n            if (cm.getOption(\"fullScreen\")) cm.setOption(\"fullScreen\", false);\n          },\n          \"Ctrl-S\": function CtrlS(cm) {\n            saveCodeHTMLPrint();\n          }\n        }\n      });\n    },\n    onSave: function onSave() {\n      var _this3 = this;\n\n      console.log('clicked indicator-editing save'); //check for advanced text formatting for name field\n\n      var elTrumbow = document.querySelector('.trumbowyg-editor');\n\n      if (elTrumbow !== undefined && elTrumbow !== null) {\n        this.name = elTrumbow.innerHTML;\n      }\n\n      var indicatorEditingUpdates = [];\n\n      if (this.isEditingModal) {\n        var _this$ajaxIndicatorBy15, _this$ajaxIndicatorBy16, _this$ajaxIndicatorBy17;\n\n        /*  CALLS FOR EDITTING AN EXISTING QUESTION */\n        console.log('updating an existing indicator: ID#', this.currIndicatorID);\n        var nameChanged = this.name !== this.ajaxIndicatorByID[this.currIndicatorID].name;\n        var descriptionChanged = this.description !== this.ajaxIndicatorByID[this.currIndicatorID].description;\n        var options = (_this$ajaxIndicatorBy15 = this.ajaxIndicatorByID[this.currIndicatorID]) !== null && _this$ajaxIndicatorBy15 !== void 0 && _this$ajaxIndicatorBy15.options ? '\\n' + ((_this$ajaxIndicatorBy16 = this.ajaxIndicatorByID[this.currIndicatorID]) === null || _this$ajaxIndicatorBy16 === void 0 ? void 0 : (_this$ajaxIndicatorBy17 = _this$ajaxIndicatorBy16.options) === null || _this$ajaxIndicatorBy17 === void 0 ? void 0 : _this$ajaxIndicatorBy17.join('\\n')) : '';\n        var fullFormatChanged = this.fullFormatForPost !== this.ajaxIndicatorByID[this.currIndicatorID].format + options;\n        var defaultChanged = this.defaultValue !== this.ajaxIndicatorByID[this.currIndicatorID][\"default\"];\n        var requiredChanged = +this.required !== parseInt(this.ajaxIndicatorByID[this.currIndicatorID].required);\n        var sensitiveChanged = +this.is_sensitive !== parseInt(this.ajaxIndicatorByID[this.currIndicatorID].is_sensitive);\n        var sortChanged = this.sort !== parseInt(this.ajaxIndicatorByID[this.currIndicatorID].sort);\n        var parentIDChanged = this.parentID !== this.ajaxIndicatorByID[this.currIndicatorID].parentID; //checks html and htmlPrint in case code was not saved with the other buttons.\n\n        var htmlChanged = this.html !== this.codeEditorHtml.getValue();\n        var htmlPrintChanged = this.htmlPrint !== this.codeEditorHtmlPrint.getValue();\n        var shouldArchive = this.archived === true;\n        var shouldDelete = this.deleted === true;\n        console.log(nameChanged, descriptionChanged, fullFormatChanged, defaultChanged, requiredChanged, sensitiveChanged, sortChanged, parentIDChanged, shouldArchive, shouldDelete, htmlChanged, htmlPrintChanged);\n\n        if (nameChanged) {\n          indicatorEditingUpdates.push($.ajax({\n            type: 'POST',\n            url: \"\".concat(this.APIroot, \"formEditor/\").concat(this.currIndicatorID, \"/name\"),\n            data: {\n              name: this.name,\n              CSRFToken: this.CSRFToken\n            },\n            success: function success() {\n              return console.log('name success');\n            },\n            error: function error(err) {\n              return console.log('ind name post err', err);\n            }\n          }));\n        }\n\n        if (descriptionChanged) {\n          indicatorEditingUpdates.push($.ajax({\n            type: 'POST',\n            url: \"\".concat(this.APIroot, \"formEditor/\").concat(this.currIndicatorID, \"/description\"),\n            data: {\n              description: this.description,\n              CSRFToken: this.CSRFToken\n            },\n            success: function success() {\n              return console.log('description success');\n            },\n            error: function error(err) {\n              return console.log('ind desciption post err', err);\n            }\n          }));\n        }\n\n        if (fullFormatChanged) {\n          indicatorEditingUpdates.push($.ajax({\n            type: 'POST',\n            url: \"\".concat(this.APIroot, \"formEditor/\").concat(this.currIndicatorID, \"/format\"),\n            data: {\n              format: this.fullFormatForPost,\n              CSRFToken: this.CSRFToken\n            },\n            success: function success() {},\n            error: function error(err) {\n              return console.log('ind format post err', err);\n            }\n          }));\n        }\n\n        if (defaultChanged) {\n          indicatorEditingUpdates.push($.ajax({\n            type: 'POST',\n            url: \"\".concat(this.APIroot, \"formEditor/\").concat(this.currIndicatorID, \"/default\"),\n            data: {\n              \"default\": this.defaultValue,\n              CSRFToken: this.CSRFToken\n            },\n            success: function success() {},\n            error: function error(err) {\n              return console.log('ind default value post err', err);\n            }\n          }));\n        }\n\n        if (requiredChanged) {\n          indicatorEditingUpdates.push($.ajax({\n            type: 'POST',\n            url: \"\".concat(this.APIroot, \"formEditor/\").concat(this.currIndicatorID, \"/required\"),\n            data: {\n              required: this.required ? 1 : 0,\n              CSRFToken: this.CSRFToken\n            },\n            success: function success() {},\n            error: function error(err) {\n              return console.log('ind required post err', err);\n            }\n          }));\n        }\n\n        if (sensitiveChanged) {\n          indicatorEditingUpdates.push($.ajax({\n            type: 'POST',\n            url: \"\".concat(this.APIroot, \"formEditor/\").concat(this.currIndicatorID, \"/sensitive\"),\n            data: {\n              is_sensitive: this.is_sensitive ? 1 : 0,\n              CSRFToken: this.CSRFToken\n            },\n            success: function success() {},\n            error: function error(err) {\n              return console.log('ind is_sensitive post err', err);\n            }\n          }));\n        }\n\n        if (sensitiveChanged && +this.is_sensitive === 1) {\n          indicatorEditingUpdates.push($.ajax({\n            type: 'POST',\n            url: \"\".concat(this.APIroot, \"formEditor/formNeedToKnow\"),\n            data: {\n              needToKnow: 1,\n              categoryID: this.formID,\n              CSRFToken: this.CSRFToken\n            },\n            success: function success() {\n              _this3.updateCategoriesProperty(_this3.formID, 'needToKnow', 1);\n            },\n            error: function error(err) {\n              return console.log('set form need to know post err', err);\n            }\n          }));\n        }\n\n        if (shouldArchive) {\n          indicatorEditingUpdates.push($.ajax({\n            type: 'POST',\n            url: \"\".concat(this.APIroot, \"formEditor/\").concat(this.currIndicatorID, \"/disabled\"),\n            data: {\n              disabled: 1,\n              //can't undelete from there so this should be fine\n              CSRFToken: this.CSRFToken\n            },\n            success: function success() {},\n            error: function error(err) {\n              return console.log('ind disabled (archive) post err', err);\n            }\n          }));\n        }\n\n        if (shouldDelete) {\n          indicatorEditingUpdates.push($.ajax({\n            type: 'POST',\n            url: \"\".concat(this.APIroot, \"formEditor/\").concat(this.currIndicatorID, \"/disabled\"),\n            data: {\n              disabled: 2,\n              CSRFToken: this.CSRFToken\n            },\n            success: function success() {},\n            error: function error(err) {\n              return console.log('ind disabled (deletion) post err', err);\n            }\n          }));\n        }\n\n        if (parentIDChanged && this.parentID !== this.currIndicatorID) {\n          indicatorEditingUpdates.push($.ajax({\n            type: 'POST',\n            url: \"\".concat(this.APIroot, \"formEditor/\").concat(this.currIndicatorID, \"/parentID\"),\n            data: {\n              parentID: this.parentID,\n              CSRFToken: this.CSRFToken\n            },\n            success: function success() {},\n            error: function error(err) {\n              return console.log('ind parentID post err', err);\n            }\n          }));\n        }\n\n        if (sortChanged) {\n          //NOTE: sort is also handled with drag drop in index, might rm here\n          indicatorEditingUpdates.push($.ajax({\n            type: 'POST',\n            url: \"\".concat(this.APIroot, \"formEditor/\").concat(this.currIndicatorID, \"/sort\"),\n            data: {\n              sort: this.sort,\n              CSRFToken: this.CSRFToken\n            },\n            success: function success() {},\n            error: function error(err) {\n              return console.log('ind sort post err', err);\n            }\n          }));\n        }\n\n        if (htmlChanged) {\n          indicatorEditingUpdates.push($.ajax({\n            type: 'POST',\n            url: \"\".concat(this.APIroot, \"formEditor/\").concat(this.currIndicatorID, \"/html\"),\n            data: {\n              html: this.codeEditorHtml.getValue(),\n              CSRFToken: this.CSRFToken\n            },\n            success: function success() {},\n            error: function error(err) {\n              return console.log('ind html post err', err);\n            }\n          }));\n        }\n\n        if (htmlPrintChanged) {\n          indicatorEditingUpdates.push($.ajax({\n            type: 'POST',\n            url: \"\".concat(this.APIroot, \"formEditor/\").concat(this.currIndicatorID, \"/htmlPrint\"),\n            data: {\n              htmlPrint: this.codeEditorHtmlPrint.getValue(),\n              CSRFToken: this.CSRFToken\n            },\n            success: function success() {},\n            error: function error(err) {\n              return console.log('ind htmlPrint post err', err);\n            }\n          }));\n        }\n      } else {\n        /* CALLS FOR CREATING A NEW QUESTION */\n        console.log('creating a new indicator on form ', this.formID);\n        var selector = \"li#index_section_indicator_\".concat(this.parentID, \"_1 > ul > li\");\n        var sortVal = this.parentID === null ? //default sort to last question in current depth\n        this.ajaxFormByCategoryID.length : //for new sections/pages\n        Array.from(document.querySelectorAll(selector)).length; //for new questions in existing sections\n\n        if (+this.is_sensitive === 1) {\n          indicatorEditingUpdates.push($.ajax({\n            type: 'POST',\n            url: \"\".concat(this.APIroot, \"formEditor/formNeedToKnow\"),\n            data: {\n              needToKnow: 1,\n              categoryID: this.formID,\n              CSRFToken: this.CSRFToken\n            },\n            success: function success() {\n              _this3.updateCategoriesProperty(_this3.formID, 'needToKnow', 1);\n            },\n            error: function error(err) {\n              return console.log('set form need to know post err', err);\n            }\n          }));\n        }\n\n        indicatorEditingUpdates.push($.ajax({\n          type: 'POST',\n          url: \"\".concat(this.APIroot, \"formEditor/newIndicator\"),\n          data: {\n            name: this.name,\n            format: this.fullFormatForPost,\n            description: this.description,\n            \"default\": this.defaultValue,\n            parentID: this.parentID,\n            categoryID: this.formID,\n            required: this.required ? 1 : 0,\n            is_sensitive: this.is_sensitive ? 1 : 0,\n            sort: sortVal,\n            CSRFToken: this.CSRFToken\n          },\n          success: function success() {},\n          error: function error(err) {\n            return console.log('error posting new question', err);\n          }\n        }));\n      }\n\n      Promise.all(indicatorEditingUpdates).then(function (res) {\n        console.log('promise all:', indicatorEditingUpdates, res);\n\n        _this3.closeFormDialog();\n\n        if (res.length > 0) {\n          vueData.updateIndicatorList = true; //NOTE: flags IFTHEN app for updates\n\n          _this3.selectNewCategory(_this3.formID, _this3.currSubformID !== null);\n        }\n      });\n    },\n    radioBehavior: function radioBehavior(event) {\n      var targetId = event.target.id;\n\n      if (targetId.toLowerCase() === 'archived' && this.deleted) {\n        document.getElementById('deleted').checked = false;\n        this.deleted = false;\n      }\n\n      if (targetId.toLowerCase() === 'deleted' && this.archived) {\n        document.getElementById('archived').checked = false;\n        this.archived = false;\n      }\n    },\n    addCells: function addCells() {\n      console.log('grid stuff'); //TODO: grid component for these\n    },\n    updateGridJSON: function updateGridJSON() {\n      //TODO: temp same as from mod_form, rework\n      var gridJSON = []; //gather column names and column types. if type is dropdown, adds property.options\n\n      $(gridBodyElement).find('div.cell').each(function () {\n        var properties = new Object();\n\n        if ($(this).children('input:eq(0)').val() === 'undefined') {\n          properties.name = 'No title';\n        } else {\n          properties.name = $(this).children('input:eq(0)').val();\n        }\n\n        properties.id = $(this).attr('id');\n        properties.type = $(this).find('select').val();\n\n        if (properties.type !== undefined) {\n          if (properties.type.toLowerCase() === 'dropdown') {\n            properties.options = gridDropdown($(this).find('textarea').val().replace(/,/g, \"\"));\n          }\n        } else {\n          properties.type = 'textarea';\n        }\n\n        gridJSON.push(properties);\n      });\n      this.gridJSON = gridJSON;\n    },\n    formatIndicatorMultiAnswer: function formatIndicatorMultiAnswer() {\n      var optionsToArray = this.multiOptionValue.split('\\n');\n      optionsToArray = optionsToArray.map(function (option) {\n        return option.trim();\n      });\n      optionsToArray = optionsToArray.map(function (option) {\n        return option === 'no' ? 'No' : option;\n      }); //this checks specifically for lower case values\n\n      var uniqueArray = Array.from(new Set(optionsToArray));\n      return uniqueArray.join('\\n');\n    },\n    //jQuery plugins for WYSWYG and Codemirror for Advanced Options area. from mod_form as is\n    advNameEditorClick: function advNameEditorClick() {\n      $('#advNameEditor').css('display', 'none');\n      $('#rawNameEditor').css('display', 'inline');\n      $('#name').trumbowyg({\n        resetCss: true,\n        btns: ['formatting', 'bold', 'italic', 'underline', '|', 'unorderedList', 'orderedList', '|', 'link', '|', 'foreColor', '|', 'justifyLeft', 'justifyCenter', 'justifyRight']\n      });\n      $('.trumbowyg-box').css({\n        'min-height': '130px'\n      });\n      $('.trumbowyg-editor, .trumbowyg-texteditor').css({\n        'min-height': '100px',\n        'height': '100px'\n      });\n    },\n    rawNameEditorClick: function rawNameEditorClick() {\n      $('#advNameEditor').css('display', 'inline');\n      $('#rawNameEditor').css('display', 'none');\n      $('#name').trumbowyg('destroy');\n    },\n    advancedOptionsClick: function advancedOptionsClick() {\n      if (parseInt(this.hasDevConsoleAccess) === 1) {\n        $('#button_advanced').css('display', 'none');\n        $('#advanced').css('height', 'auto');\n        $('#advanced').css('visibility', 'visible');\n        $('.table').css('border-collapse', 'collapse');\n        $('.CodeMirror').css('border', '1px solid black');\n      } else {\n        alert('Notice: Please go to Admin Panel -> LEAF Programmer to ensure continued access to this area.');\n        $('#button_advanced').css('display', 'none');\n        $('#advanced').css('visibility', 'hidden');\n      }\n    },\n    saveCodeHTML: function saveCodeHTML() {\n      var _this4 = this;\n\n      var htmlValue = this.codeEditorHtml.getValue();\n      $.ajax({\n        type: 'POST',\n        url: \"\".concat(this.APIroot, \"formEditor/\").concat(this.currIndicatorID, \"/html\"),\n        data: {\n          html: htmlValue,\n          CSRFToken: this.CSRFToken\n        },\n        success: function success() {\n          _this4.html = htmlValue;\n          _this4.ajaxIndicatorByID[_this4.currIndicatorID].html = htmlValue;\n          var time = new Date().toLocaleTimeString();\n          document.getElementById('codeSaveStatus_html').innerHTML = '<br /> Last saved: ' + time;\n        },\n        error: function error(err) {\n          return console.log(err);\n        }\n      });\n    },\n    saveCodeHTMLPrint: function saveCodeHTMLPrint() {\n      var _this5 = this;\n\n      var htmlPrintValue = this.codeEditorHtmlPrint.getValue();\n      $.ajax({\n        type: 'POST',\n        url: \"\".concat(this.APIroot, \"formEditor/\").concat(this.currIndicatorID, \"/htmlPrint\"),\n        data: {\n          htmlPrint: htmlPrintValue,\n          CSRFToken: this.CSRFToken\n        },\n        success: function success() {\n          _this5.htmlPrint = htmlPrintValue;\n          _this5.ajaxIndicatorByID[_this5.currIndicatorID].htmlPrint = htmlPrintValue;\n          var time = new Date().toLocaleTimeString();\n          document.getElementById('codeSaveStatus_htmlPrint').innerHTML = '<br /> Last saved: ' + time;\n        },\n        error: function error(err) {\n          return console.log(err);\n        }\n      });\n    }\n  },\n  template: \"<div style=\\\"min-width: 500px;\\\">\\n        <fieldset>\\n            <legend>Field Name</legend>\\n            <textarea id=\\\"name\\\" v-model=\\\"name\\\" style=\\\"width: 99%\\\">{{name}}</textarea><br/>\\n            <button class=\\\"buttonNorm\\\" id=\\\"rawNameEditor\\\" @click=\\\"rawNameEditorClick\\\" style=\\\"display: none\\\">Show formatted code</button>\\n            <button class=\\\"buttonNorm\\\" id=\\\"advNameEditor\\\" @click=\\\"advNameEditorClick\\\">Advanced Formatting</button>\\n        </fieldset>\\n        <fieldset>\\n            <legend>Short Label (Describe this field in 1-2 words)</legend>\\n            <input type=\\\"text\\\" id=\\\"description\\\" v-model=\\\"description\\\" maxlength=\\\"50\\\" />\\n        </fieldset>\\n        <fieldset>\\n            <legend>Input Format</legend>\\n            <select id=\\\"indicatorType\\\" title=\\\"Select a Format\\\" v-model=\\\"format\\\" @change=\\\"preventWhenFormatNone\\\">\\n                <option value=\\\"\\\">None</option>\\n                <option v-for=\\\"kv in Object.entries(formats)\\\" \\n                :value=\\\"kv[0]\\\" :selected=\\\"kv[0]===format\\\" :key=\\\"kv[0]\\\">{{ kv[1] }}</option>\\n            </select><br/>\\n            <div v-if=\\\"format==='checkbox'\\\" id=\\\"container_indicatorSingleAnswer\\\">\\n                Text for checkbox:<br /> \\n                <input type=\\\"text\\\" id=\\\"indicatorSingleAnswer\\\" v-model=\\\"singleOptionValue\\\"/>\\n            </div>\\n            <div v-if=\\\"isMultiOptionQuestion\\\" id=\\\"container_indicatorMultiAnswer\\\">\\n                One option per line:<br />\\n                <textarea id=\\\"indicatorMultiAnswer\\\" v-model=\\\"multiOptionValue\\\" style=\\\"width: 80%; height: 150px\\\">\\n                </textarea>\\n            </div>\\n            <div v-if=\\\"format==='grid'\\\" id=\\\"container_indicatorGrid\\\">\\n                <span style=\\\"position: absolute; color: transparent\\\" aria-atomic=\\\"true\\\" aria-live=\\\"polite\\\" id=\\\"tableStatus\\\" role=\\\"status\\\"></span>\\n                <br/>\\n                <button class=\\\"buttonNorm\\\" id=\\\"addColumnBtn\\\" title=\\\"Add column\\\" alt=\\\"Add column\\\" aria-label=\\\"grid input add column\\\" onclick=\\\"addCells\\\">\\n                    <img src=\\\"../../libs/dynicons/?img=list-add.svg&w=16\\\" style=\\\"height: 25px;\\\"/>\\n                    Add column\\n                </button>\\n                <br/><br/>\\n                Columns:\\n                <div border=\\\"1\\\" style=\\\"overflow-x: scroll; max-width: 100%;\\\">\\n                </div>\\n            </div>               \\n            <fieldset>\\n                <legend>Default Answer</legend>\\n                <textarea id=\\\"defaultValue\\\" v-model=\\\"defaultValue\\\" style=\\\"width: 50%;\\\"></textarea>\\n            </fieldset>\\n        </fieldset>\\n        <fieldset><legend>Attributes</legend>\\n            <table>\\n                <tr>\\n                    <td>Required</td>\\n                    <td>\\n                        <input id=\\\"required\\\" v-model=\\\"required\\\" name=\\\"required\\\" type=\\\"checkbox\\\" \\n                        @click=\\\"preventWhenFormatNone\\\" @keypress.enter=\\\"preventWhenFormatNone\\\"/>\\n                    </td>\\n                </tr>\\n                <tr>\\n                    <td>Sensitive Data (PHI/PII)</td>\\n                    <td>\\n                        <input id=\\\"sensitive\\\" v-model=\\\"is_sensitive\\\" name=\\\"sensitive\\\" type=\\\"checkbox\\\" \\n                        @click=\\\"preventWhenFormatNone\\\" @keypress.enter=\\\"preventWhenFormatNone\\\"/>\\n                    </td>\\n                </tr>\\n                <tr>\\n                    <td>Sort Priority</td>\\n                    <td><input id=\\\"sort\\\" v-model.number=\\\"sort\\\" name=\\\"sort\\\" type=\\\"number\\\" style=\\\"width: 40px\\\" /></td>\\n                </tr>\\n                <template v-if=\\\"isEditingModal\\\">\\n                <tr>\\n                    <td>Parent Question ID</td>\\n                    <td colspan=\\\"2\\\">\\n                        <div id=\\\"container_parentID\\\">\\n                            <select v-model.number=\\\"parentID\\\">\\n                                <template v-if=\\\"isLoadingParentIDs===false\\\" v-for=\\\"kv in Object.entries(listForParentIDs)\\\">\\n                                    <option v-if=\\\"currIndicatorID !== parseInt(kv[0])\\\" :value=\\\"kv[0]\\\" :key=\\\"'parent'+kv[0]\\\">{{kv[0]}}: {{kv[1]['1'].name}}</option>\\n                                </template>\\n                            </select>\\n                        </div>\\n                    </td>\\n                </tr>\\n                <tr>\\n                    <td>Archive</td>\\n                    <td colspan=\\\"1\\\">\\n                        <input id=\\\"archived\\\" v-model=\\\"archived\\\" name=\\\"disable_or_delete\\\" type=\\\"checkbox\\\" @change=\\\"radioBehavior\\\"/>\\n                    </td>\\n                    <td style=\\\"width: 275px; position: relative;\\\">\\n                        <span v-show=\\\"archived\\\" id=\\\"archived-warning\\\" style=\\\"color: red; font-size: 80%; position: absolute; top:-5px\\\">\\n                        This field will be archived.  It can be<br/>re-enabled by using Restore Fields.</span>\\n                    </td>\\n                </tr>\\n                <tr>\\n                    <td>Delete</td>\\n                    <td colspan=\\\"1\\\">\\n                        <input id=\\\"deleted\\\" v-model=\\\"deleted\\\" name=\\\"disable_or_delete\\\" type=\\\"checkbox\\\" @change=\\\"radioBehavior\\\" />\\n                    </td>\\n                    <td style=\\\"width: 275px; position: relative;\\\">\\n                        <span v-show=\\\"deleted\\\" id=\\\"deletion-warning\\\" style=\\\"color: red; font-size: 80%; position: absolute; top:-5px\\\">Deleted items can only be re-enabled<br/>within 30 days by using Restore Fields.</span>\\n                    </td>\\n                </tr>\\n                </template>\\n            </table>\\n        </fieldset>\\n        <template v-if=\\\"isEditingModal\\\">\\n            <span id=\\\"button_advanced\\\" class=\\\"buttonNorm\\\" tabindex=\\\"0\\\" @click=\\\"advancedOptionsClick\\\">Advanced Options</span>\\n            <div v-if=\\\"parseInt(hasDevConsoleAccess)===1\\\">\\n                <fieldset id=\\\"advanced\\\" style=\\\"visibility: collapse; height: 0;\\\"><legend>Advanced Options</legend>\\n                    Template Variables:<br />\\n                    <table class=\\\"table\\\" style=\\\"border-collapse: inherit\\\">\\n                        <tr>\\n                            <td><b>{{ left }} iID {{ right }}</b></td>\\n                            <td>The indicatorID # of the current data field.</td>\\n                        </tr>\\n                        <tr>\\n                            <td><b>{{ left }} recordID {{ right }}</b></td>\\n                            <td>The record ID # of the current request.</td>\\n                        </tr>\\n                        <tr>\\n                            <td><b>{{ left }} data {{ right }}</b></td>\\n                            <td>The contents of the current data field as stored in the database.</td>\\n                        </tr>\\n                    </table><br />\\n                    <div style=\\\"display:flex; justify-content: space-between;\\\">\\n                        html (for pages where the user can edit data): \\n                        <button id=\\\"btn_codeSave_html\\\" @click=\\\"saveCodeHTML\\\" class=\\\"buttonNorm\\\" title=\\\"Save Code\\\">\\n                            <img id=\\\"saveIndicator\\\" src=\\\"../../libs/dynicons/?img=media-floppy.svg&w=16\\\" alt=\\\"Save\\\" />\\n                            Save Code<span id=\\\"codeSaveStatus_html\\\"></span>\\n                        </button>\\n                    </div>\\n                    <textarea id=\\\"html\\\">{{html}}</textarea><br />  <!-- NOTE: can't seem to v-model these areas html and htmlPrint properties updated after save -->\\n                    <div style=\\\"display:flex; justify-content: space-between;\\\">\\n                        htmlPrint (for pages where the user can only read data): \\n                        <button id=\\\"btn_codeSave_htmlPrint\\\" @click=\\\"saveCodeHTMLPrint\\\" class=\\\"buttonNorm\\\" title=\\\"Save Code\\\">\\n                            <img id=\\\"saveIndicator\\\" src=\\\"../../libs/dynicons/?img=media-floppy.svg&w=16\\\" alt=\\\"Save\\\" />\\n                            Save Code<span id=\\\"codeSaveStatus_htmlPrint\\\"></span>\\n                        </button>\\n                    </div>\\n                    <textarea id=\\\"htmlPrint\\\">{{htmlPrint}}</textarea>\\n                </fieldset>\\n            </div>\\n        </template>\\n    </div>\"\n});\n\n//# sourceURL=webpack://leaf/./libs/js/LEAF/dialog_vue/components/dialog_content/IndicatorEditing.js?");

/***/ }),

/***/ "./libs/js/LEAF/dialog_vue/components/dialog_content/NewFormDialog.js":
/*!****************************************************************************!*\
  !*** ./libs/js/LEAF/dialog_vue/components/dialog_content/NewFormDialog.js ***!
  \****************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({\n  data: function data() {\n    return {\n      categoryName: '',\n      categoryDescription: ''\n    };\n  },\n  inject: ['APIroot', 'CSRFToken', 'currCategoryID', 'addNewCategory', 'selectNewCategory', 'closeFormDialog'],\n  mounted: function mounted() {\n    document.getElementById('name').focus();\n  },\n  computed: {\n    isSubform: function isSubform() {\n      return this.currCategoryID !== null;\n    },\n    nameChars: function nameChars() {\n      return this.categoryName.length;\n    },\n    descrChars: function descrChars() {\n      return this.categoryDescription.length;\n    }\n  },\n  methods: {\n    onSave: function onSave() {\n      var _this = this;\n\n      console.log('clicked save for new form modal');\n      $.ajax({\n        type: 'POST',\n        url: \"\".concat(this.APIroot, \"formEditor/new\"),\n        data: {\n          name: this.categoryName,\n          description: this.categoryDescription,\n          parentID: this.currCategoryID || '',\n          CSRFToken: this.CSRFToken\n        },\n        success: function success(res) {\n          var newCatID = res;\n          var temp = {};\n          temp.categoryID = newCatID;\n          temp.categoryName = _this.categoryName;\n          temp.categoryDescription = _this.categoryDescription;\n          temp.workflowID = 0;\n          temp.needToKnow = 0;\n          temp.parentID = _this.currCategoryID || '';\n\n          _this.addNewCategory(newCatID, temp);\n\n          _this.selectNewCategory(newCatID, _this.isSubform);\n\n          _this.closeFormDialog();\n        },\n        error: function error(err) {\n          console.log('error posting new form', err);\n          reject(err);\n        }\n      });\n    }\n  },\n  template: \"<div>\\n            <div style=\\\"display: flex; justify-content: space-between; padding: 0.25em 0\\\">\\n                <div><b>Form Name</b><span style=\\\"font-size:80%\\\"> (up to 50 characters)</span></div>\\n                <div>{{nameChars}}</div>\\n            </div>\\n            <input id=\\\"name\\\" type=\\\"text\\\" maxlength=\\\"50\\\" v-model=\\\"categoryName\\\" style=\\\"width: 100%;\\\" />\\n\\n            <div style=\\\"display: flex; justify-content: space-between; padding: 0.25em 0; margin-top: 1em;\\\">\\n                <div><b>Form Description</b><span style=\\\"font-size:80%\\\"> (up to 255 characters)</span></div>\\n                <div>{{descrChars}}</div>\\n            </div>\\n            <textarea id=\\\"description\\\" maxlength=\\\"255\\\" v-model=\\\"categoryDescription\\\" \\n                style=\\\"width: 100%; height: 90px;\\\">\\n            </textarea>\\n        </div>\"\n});\n\n//# sourceURL=webpack://leaf/./libs/js/LEAF/dialog_vue/components/dialog_content/NewFormDialog.js?");

/***/ }),

/***/ "./libs/js/LEAF/dialog_vue/components/dialog_content/StapleFormDialog.js":
/*!*******************************************************************************!*\
  !*** ./libs/js/LEAF/dialog_vue/components/dialog_content/StapleFormDialog.js ***!
  \*******************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({\n  data: function data() {\n    return {\n      catIDtoStaple: '',\n      formID: this.currSubformID || this.currCategoryID //NOTE: subforms can have staples.  subformID will be null if the selected form is not a subform.  currCategoryID will always be a main form.\n\n    };\n  },\n  inject: ['APIroot', 'CSRFToken', 'truncateText', 'categories', 'currCategoryID', 'currSubformID', 'ajaxSelectedCategoryStapled', 'getStapledFormsByCurrentCategory', 'closeFormDialog'],\n  mounted: function mounted() {\n    document.getElementById('select-form-to-staple').focus();\n  },\n  computed: {\n    mergeableForms: function mergeableForms() {\n      var _this = this;\n\n      var mergeable = [];\n\n      var _loop = function _loop(c) {\n        var WF_ID = parseInt(_this.categories[c].workflowID);\n        var catID = _this.categories[c].categoryID;\n        var parID = _this.categories[c].parentID;\n\n        var isNotAlreadyMerged = _this.ajaxSelectedCategoryStapled.every(function (form) {\n          return form.stapledCategoryID !== catID;\n        });\n\n        if (WF_ID === 0 && catID !== _this.formID && parID === '' && isNotAlreadyMerged) {\n          mergeable.push(_objectSpread({}, _this.categories[c]));\n        }\n      };\n\n      for (var c in this.categories) {\n        _loop(c);\n      }\n\n      return mergeable;\n    }\n  },\n  methods: {\n    unmergeForm: function unmergeForm(stapledCatID) {\n      var _this2 = this;\n\n      $.ajax({\n        type: 'DELETE',\n        url: \"\".concat(this.APIroot, \"formEditor/_\").concat(this.formID, \"/stapled/_\").concat(stapledCatID, \"?\") + $.param({\n          CSRFToken: this.CSRFToken\n        }),\n        success: function success(res) {\n          _this2.getStapledFormsByCurrentCategory();\n        },\n        error: function error(err) {\n          return console.log(err);\n        }\n      });\n    },\n    onSave: function onSave() {\n      var _this3 = this;\n\n      if (this.catIDtoStaple !== '') {\n        $.ajax({\n          type: 'POST',\n          url: \"\".concat(this.APIroot, \"formEditor/_\").concat(this.formID, \"/stapled\"),\n          data: {\n            CSRFToken: this.CSRFToken,\n            stapledCategoryID: this.catIDtoStaple\n          },\n          success: function success(res) {\n            _this3.closeFormDialog();\n\n            _this3.getStapledFormsByCurrentCategory();\n\n            if (res !== 1) {\n              alert(res);\n            }\n          },\n          error: function error(err) {\n            return console.log(err);\n          },\n          cache: false\n        });\n      }\n    }\n  },\n  template: \"<div>\\n        <p>Stapled forms will show up on the same page as the primary form</p>\\n        <div id=\\\"mergedForms\\\">\\n            <ul style=\\\"list-style-type:none; padding: 0; min-height: 50px;\\\">\\n                <li v-for=\\\"s in ajaxSelectedCategoryStapled\\\">\\n                    {{truncateText(s.categoryName) || 'Untitled'}}\\n                    <button \\n                        style=\\\"margin-left: 0.25em; background-color: transparent; color:#a00; padding: 0.1em 0.2em; border: 0; border-radius:3px;\\\" \\n                        @click=\\\"unmergeForm(s.categoryID)\\\" :title=\\\"'remove ' + s.categoryName || 'Untitled'\\\">\\n                        <b>[ Remove ]</b>\\n                    </button>\\n                </li>\\n            </ul>\\n        </div><hr/>\\n        <div style=\\\"min-height: 50px; margin: 1em 0;\\\">\\n            <div style=\\\"margin-bottom: 0.2em;\\\">Select a form to merge</div>\\n            <template v-if=\\\"mergeableForms.length > 0\\\">\\n            <select v-model=\\\"catIDtoStaple\\\" title=\\\"select a form to merge\\\" id=\\\"select-form-to-staple\\\">\\n                <option value=\\\"\\\">Select a Form</option>\\n                <option v-for=\\\"f in mergeableForms\\\" :value=\\\"f.categoryID\\\" :key=\\\"'staple_'+f.categoryID\\\">{{truncateText(f.categoryName) || 'Untitled'}}</option>\\n            </select>\\n            </template>\\n            <div v-else>There are no available forms to merge</div>\\n        </div>\\n    </div>\"\n});\n\n//# sourceURL=webpack://leaf/./libs/js/LEAF/dialog_vue/components/dialog_content/StapleFormDialog.js?");

/***/ }),

/***/ "./node_modules/css-loader/dist/runtime/api.js":
/*!*****************************************************!*\
  !*** ./node_modules/css-loader/dist/runtime/api.js ***!
  \*****************************************************/
/***/ ((module) => {

eval("\n/*\n  MIT License http://www.opensource.org/licenses/mit-license.php\n  Author Tobias Koppers @sokra\n*/\n\nmodule.exports = function (cssWithMappingToString) {\n  var list = []; // return the list of modules as css string\n\n  list.toString = function toString() {\n    return this.map(function (item) {\n      var content = \"\";\n      var needLayer = typeof item[5] !== \"undefined\";\n\n      if (item[4]) {\n        content += \"@supports (\".concat(item[4], \") {\");\n      }\n\n      if (item[2]) {\n        content += \"@media \".concat(item[2], \" {\");\n      }\n\n      if (needLayer) {\n        content += \"@layer\".concat(item[5].length > 0 ? \" \".concat(item[5]) : \"\", \" {\");\n      }\n\n      content += cssWithMappingToString(item);\n\n      if (needLayer) {\n        content += \"}\";\n      }\n\n      if (item[2]) {\n        content += \"}\";\n      }\n\n      if (item[4]) {\n        content += \"}\";\n      }\n\n      return content;\n    }).join(\"\");\n  }; // import a list of modules into the list\n\n\n  list.i = function i(modules, media, dedupe, supports, layer) {\n    if (typeof modules === \"string\") {\n      modules = [[null, modules, undefined]];\n    }\n\n    var alreadyImportedModules = {};\n\n    if (dedupe) {\n      for (var k = 0; k < this.length; k++) {\n        var id = this[k][0];\n\n        if (id != null) {\n          alreadyImportedModules[id] = true;\n        }\n      }\n    }\n\n    for (var _k = 0; _k < modules.length; _k++) {\n      var item = [].concat(modules[_k]);\n\n      if (dedupe && alreadyImportedModules[item[0]]) {\n        continue;\n      }\n\n      if (typeof layer !== \"undefined\") {\n        if (typeof item[5] === \"undefined\") {\n          item[5] = layer;\n        } else {\n          item[1] = \"@layer\".concat(item[5].length > 0 ? \" \".concat(item[5]) : \"\", \" {\").concat(item[1], \"}\");\n          item[5] = layer;\n        }\n      }\n\n      if (media) {\n        if (!item[2]) {\n          item[2] = media;\n        } else {\n          item[1] = \"@media \".concat(item[2], \" {\").concat(item[1], \"}\");\n          item[2] = media;\n        }\n      }\n\n      if (supports) {\n        if (!item[4]) {\n          item[4] = \"\".concat(supports);\n        } else {\n          item[1] = \"@supports (\".concat(item[4], \") {\").concat(item[1], \"}\");\n          item[4] = supports;\n        }\n      }\n\n      list.push(item);\n    }\n  };\n\n  return list;\n};\n\n//# sourceURL=webpack://leaf/./node_modules/css-loader/dist/runtime/api.js?");

/***/ }),

/***/ "./node_modules/css-loader/dist/runtime/noSourceMaps.js":
/*!**************************************************************!*\
  !*** ./node_modules/css-loader/dist/runtime/noSourceMaps.js ***!
  \**************************************************************/
/***/ ((module) => {

eval("\n\nmodule.exports = function (i) {\n  return i[1];\n};\n\n//# sourceURL=webpack://leaf/./node_modules/css-loader/dist/runtime/noSourceMaps.js?");

/***/ }),

/***/ "./node_modules/css-loader/dist/cjs.js!./node_modules/sass-loader/dist/cjs.js!./libs/js/LEAF/dialog_vue/LEAF_FormEditor.scss":
/*!***********************************************************************************************************************************!*\
  !*** ./node_modules/css-loader/dist/cjs.js!./node_modules/sass-loader/dist/cjs.js!./libs/js/LEAF/dialog_vue/LEAF_FormEditor.scss ***!
  \***********************************************************************************************************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _node_modules_css_loader_dist_runtime_noSourceMaps_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../../node_modules/css-loader/dist/runtime/noSourceMaps.js */ \"./node_modules/css-loader/dist/runtime/noSourceMaps.js\");\n/* harmony import */ var _node_modules_css_loader_dist_runtime_noSourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_noSourceMaps_js__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../../node_modules/css-loader/dist/runtime/api.js */ \"./node_modules/css-loader/dist/runtime/api.js\");\n/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__);\n// Imports\n\n\nvar ___CSS_LOADER_EXPORT___ = _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default()((_node_modules_css_loader_dist_runtime_noSourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default()));\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"/* NOTE: TODO: consolidate variables \\n\\n$BG-DarkNavy: #162e51;\\n$BG-Charcoal: #252f3e;\\n$BG-VividOrange: #ff6800; changed from Figma #f56600 to meet accessibility contrast \\n$BG-LightGray: #dcdee0;\\n$USWDS-LtGray: #c9c9c9;\\n$USWDS-Cyan: #00bde3;\\n$BaseNavy: #005ea2;\\n$LtNavy: #1476bd;\\n\\n*/\\n#vue-formeditor-app {\\n  padding: 0.5em 1em;\\n  min-height: 100vh;\\n}\\n#vue-formeditor-app * {\\n  box-sizing: border-box;\\n}\\n\\n/* TODO: keeping basic resets outside until style collisions with previous UI are resolved */\\nbutton.btn-general, button.btn-save {\\n  background-color: white;\\n  color: var(--base-navy, #005EA2);\\n  font-weight: bolder;\\n  padding: 0.4em;\\n  border: 2px solid var(--base-navy, #005EA2);\\n  border-radius: 4px;\\n  width: 95px;\\n  display: flex;\\n  justify-content: center;\\n  align-items: center;\\n}\\nbutton.btn-general:hover, button.btn-general:focus, button.btn-general:active, button.btn-save:hover, button.btn-save:focus, button.btn-save:active {\\n  border: 2px solid black !important;\\n  box-shadow: 0 0 4px rgba(0, 0, 30, 0.4);\\n}\\n\\nbutton.btn-save {\\n  color: white;\\n  background-color: var(--base-navy, #005EA2);\\n}\\n\\n/* tables in dialog modals */\\n.leaf-vue-dialog table {\\n  border-collapse: separate;\\n  border-spacing: 0 0.5em;\\n}\\n.leaf-vue-dialog table td:not(:last-child) {\\n  padding-right: 0.2em;\\n}\\n\\n/* left menu / nav */\\n.mod-form-menu-nav {\\n  display: flex;\\n  width: 180px;\\n  flex: 0 0 180px;\\n  margin-right: 1.5em;\\n}\\n.mod-form-menu-nav ul {\\n  width: 100%;\\n  list-style-type: none;\\n  margin: 0;\\n  padding: 0;\\n}\\n.mod-form-menu-nav li {\\n  height: auto;\\n  margin-bottom: 1em;\\n}\\n.mod-form-menu-nav li a {\\n  display: flex;\\n  justify-content: space-between;\\n  align-items: center;\\n  height: 100%;\\n  min-height: 40px;\\n  border: 1px solid #000;\\n  border-radius: 2px;\\n  text-decoration: none;\\n  background-color: #e8f2ff;\\n  color: #1b1b1b;\\n  /*padding-left: 1.8em; */\\n  padding: 0 0.4em;\\n  overflow: hidden;\\n}\\n.mod-form-menu-nav li a.selected, .mod-form-menu-nav li a:hover, .mod-form-menu-nav li a:focus, .mod-form-menu-nav li a:active {\\n  border: 1px solid #000 !important;\\n  background-color: #005EA2;\\n  outline: 3px solid #20a0f0 !important;\\n  color: white;\\n}\\n.mod-form-menu-nav li a span {\\n  display: inline-block;\\n}\\n.mod-form-menu-nav #stapledArea ul {\\n  list-style-type: disc;\\n  padding-inline-start: 35px;\\n  margin-bottom: 2em;\\n}\\n\\n/* base dialog modal styling */\\n#leaf-vue-dialog-background {\\n  width: 100vw;\\n  height: 100%;\\n  background-color: rgba(0, 0, 20, 0.35);\\n  position: absolute;\\n  left: 0;\\n  top: 0;\\n  display: flex;\\n  justify-content: center;\\n}\\n\\n.leaf-vue-dialog {\\n  position: absolute;\\n  margin: auto;\\n  width: auto;\\n  z-index: 9999;\\n  min-width: 400px;\\n  max-width: 900px;\\n  height: auto;\\n  min-height: 0;\\n  border-radius: 4px;\\n  background-color: white;\\n  box-shadow: 0 0 5px 1px rgba(0, 0, 25, 0.25);\\n  overflow: hidden;\\n}\\n.leaf-vue-dialog > div {\\n  padding: 0.75em;\\n}\\n.leaf-vue-dialog #leaf-vue-dialog-cancel-save {\\n  display: flex;\\n  justify-content: space-between;\\n  margin-top: 1em;\\n}\\n.leaf-vue-dialog .leaf-vue-dialog-title {\\n  color: black;\\n  border-bottom: 1px solid var(--charcoal, #252F3E);\\n  background-color: var(--lt-cyan, #E0F4FA);\\n  cursor: move;\\n}\\n.leaf-vue-dialog .leaf-vue-dialog-title h2 {\\n  color: black;\\n  margin: 0;\\n}\\n.leaf-vue-dialog #leaf-vue-dialog-close {\\n  position: absolute;\\n  display: flex;\\n  justify-content: center;\\n  align-items: center;\\n  top: 8px;\\n  right: 8px;\\n  width: 25px;\\n  height: 25px;\\n  cursor: pointer;\\n  font-weight: bold;\\n}\\n\\n/* panel where edit properties modal is accessed from */\\n#edit-properties-panel {\\n  position: relative;\\n  display: flex;\\n  min-height: 100px;\\n  justify-content: space-between;\\n  margin-bottom: 1em;\\n  background-color: white;\\n  padding: 0.25em;\\n  border: 1px solid black;\\n}\\n#edit-properties-panel .form-id-label {\\n  font-size: 12px;\\n}\\n\\n/*  edit-properties modal itself */\\ntable#edit-properties-modal td:first-child {\\n  position: relative;\\n  padding-left: 20px;\\n}\\ntable#edit-properties-modal img {\\n  position: absolute;\\n  left: 0;\\n  top: 50%;\\n  transform: translate(0, -40%);\\n}\\ntable#edit-properties-modal input {\\n  width: 100%;\\n}\\ntable#edit-properties-modal textarea {\\n  width: 100%;\\n  height: 50px;\\n}\\n\\n/* Form History modal */\\n#history-slice td {\\n  font-size: 15px !important;\\n}\\n\\n#history-page-buttons button#next, #history-slice button#prev {\\n  width: 135px;\\n}\\n\\n/* makes 'Add Sub-Question' buttons smaller than new header buttons */\\n.buttonNorm.subquestionAddNew {\\n  font-size: 12px;\\n  padding: 2px 4px;\\n}\\n\\n/* form browser cards */\\n.browser-category-card {\\n  position: relative;\\n  margin: 0 1em 1em 0;\\n  width: 300px;\\n  height: 150px;\\n  display: flex;\\n  flex-direction: column;\\n  background-color: white;\\n  cursor: pointer;\\n  transition: box-shadow 0.3s ease;\\n  border-radius: 4px;\\n  color: black;\\n  overflow: hidden;\\n  box-shadow: 1px 1px 2px 1px rgba(0, 0, 20, 0.4);\\n}\\n.browser-category-card:hover, .browser-category-card:focus, .browser-category-card:active {\\n  box-shadow: 0 4px 6px 3px rgba(0, 0, 20, 0.25);\\n}\\n.browser-category-card > div {\\n  overflow: hidden;\\n  white-space: normal;\\n  text-overflow: ellipsis;\\n  padding: 0.2em 0.4em;\\n}\\n.browser-category-card .formPreviewTitle {\\n  font-weight: bold;\\n}\\n.browser-category-card .formPreviewDescription {\\n  justify-self: end;\\n  height: 80px;\\n  font-size: 14px;\\n  line-height: 1.2;\\n}\\n.browser-category-card .formPreviewStatus {\\n  font-size: 80%;\\n  color: rgb(200, 0, 0);\\n}\\n.browser-category-card .formPreviewWorkflow {\\n  justify-self: end;\\n  height: 26px;\\n  width: 100%;\\n  color: white;\\n  background-color: var(--dark-navy, #162E51);\\n}\\n\\n/* form structure index */\\n#form_index_display {\\n  position: relative;\\n  margin: 0;\\n  padding: 1em 0.75em 0.75em;\\n  width: 375px;\\n  flex: 0 0 375px;\\n  align-self: flex-start;\\n  margin-right: 1.5em;\\n  background-color: white;\\n  border-radius: 4px;\\n  box-shadow: 1px 1px 2px 1px rgba(0, 0, 20, 0.4);\\n}\\n#form_index_display #can_update {\\n  position: absolute;\\n  top: 1em;\\n  right: 0.75em;\\n  cursor: pointer;\\n  display: flex;\\n  justify-content: center;\\n  align-items: center;\\n  z-index: 10;\\n  font-size: 90%;\\n  padding: 0.25em 0.5em;\\n  border: 1px outset #aac;\\n  border-radius: 3px;\\n  color: black;\\n  background-color: white;\\n}\\n#form_index_display .section_heading {\\n  font-weight: bolder;\\n  color: var(--base-navy, #005EA2);\\n}\\n#form_index_display .subindicator_heading {\\n  font-weight: normal;\\n  color: black;\\n}\\n#form_index_display ul {\\n  margin: 0;\\n  padding: 0;\\n  padding-left: 1em;\\n  display: flex;\\n  flex-direction: column;\\n  list-style-type: none;\\n  min-height: 0.5em; /*NOTE: min height needed for drop zones*/\\n}\\n#form_index_display ul#base_drop_area {\\n  padding: 0;\\n}\\n#form_index_display ul.entered-drop-zone {\\n  background-color: #e8ebf0;\\n}\\n#form_index_display li {\\n  position: relative;\\n  cursor: pointer;\\n  margin: 0.2em 0; /* there needs to be a margin to hilite the current drop zone */\\n  border-radius: 2px;\\n  outline: none !important;\\n}\\n#form_index_display li > span {\\n  display: block;\\n  height: 100%;\\n  width: 100%;\\n  border-bottom: 1px solid #d0d0d4;\\n  padding-bottom: 0.9em; /*NOTE: min height of drop zone, plus margin of li */\\n}\\n#form_index_display li:first-child {\\n  margin-top: 0.8em;\\n}\\n#form_index_display li:last-child {\\n  margin-bottom: 0;\\n}\\n#form_index_display li.index-selected::before, #form_index_display li:focus::before {\\n  position: absolute;\\n  top: -0.2em;\\n  left: -0.5em;\\n  content: \\\"\\\";\\n  width: 3px;\\n  height: calc(100% - 0.9em);\\n  border-radius: 50%/3px;\\n  background-color: var(--base-navy, #005EA2);\\n}\", \"\"]);\n// Exports\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (___CSS_LOADER_EXPORT___);\n\n\n//# sourceURL=webpack://leaf/./libs/js/LEAF/dialog_vue/LEAF_FormEditor.scss?./node_modules/css-loader/dist/cjs.js!./node_modules/sass-loader/dist/cjs.js");

/***/ }),

/***/ "./libs/js/LEAF/dialog_vue/LEAF_FormEditor.scss":
/*!******************************************************!*\
  !*** ./libs/js/LEAF/dialog_vue/LEAF_FormEditor.scss ***!
  \******************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! !../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js */ \"./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n/* harmony import */ var _node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _node_modules_style_loader_dist_runtime_styleDomAPI_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! !../../../../node_modules/style-loader/dist/runtime/styleDomAPI.js */ \"./node_modules/style-loader/dist/runtime/styleDomAPI.js\");\n/* harmony import */ var _node_modules_style_loader_dist_runtime_styleDomAPI_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_node_modules_style_loader_dist_runtime_styleDomAPI_js__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _node_modules_style_loader_dist_runtime_insertBySelector_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! !../../../../node_modules/style-loader/dist/runtime/insertBySelector.js */ \"./node_modules/style-loader/dist/runtime/insertBySelector.js\");\n/* harmony import */ var _node_modules_style_loader_dist_runtime_insertBySelector_js__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_node_modules_style_loader_dist_runtime_insertBySelector_js__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _node_modules_style_loader_dist_runtime_setAttributesWithoutAttributes_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! !../../../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js */ \"./node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\");\n/* harmony import */ var _node_modules_style_loader_dist_runtime_setAttributesWithoutAttributes_js__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_node_modules_style_loader_dist_runtime_setAttributesWithoutAttributes_js__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var _node_modules_style_loader_dist_runtime_insertStyleElement_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! !../../../../node_modules/style-loader/dist/runtime/insertStyleElement.js */ \"./node_modules/style-loader/dist/runtime/insertStyleElement.js\");\n/* harmony import */ var _node_modules_style_loader_dist_runtime_insertStyleElement_js__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(_node_modules_style_loader_dist_runtime_insertStyleElement_js__WEBPACK_IMPORTED_MODULE_4__);\n/* harmony import */ var _node_modules_style_loader_dist_runtime_styleTagTransform_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! !../../../../node_modules/style-loader/dist/runtime/styleTagTransform.js */ \"./node_modules/style-loader/dist/runtime/styleTagTransform.js\");\n/* harmony import */ var _node_modules_style_loader_dist_runtime_styleTagTransform_js__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(_node_modules_style_loader_dist_runtime_styleTagTransform_js__WEBPACK_IMPORTED_MODULE_5__);\n/* harmony import */ var _node_modules_css_loader_dist_cjs_js_node_modules_sass_loader_dist_cjs_js_LEAF_FormEditor_scss__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! !!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/sass-loader/dist/cjs.js!./LEAF_FormEditor.scss */ \"./node_modules/css-loader/dist/cjs.js!./node_modules/sass-loader/dist/cjs.js!./libs/js/LEAF/dialog_vue/LEAF_FormEditor.scss\");\n\n      \n      \n      \n      \n      \n      \n      \n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = (_node_modules_style_loader_dist_runtime_styleTagTransform_js__WEBPACK_IMPORTED_MODULE_5___default());\noptions.setAttributes = (_node_modules_style_loader_dist_runtime_setAttributesWithoutAttributes_js__WEBPACK_IMPORTED_MODULE_3___default());\n\n      options.insert = _node_modules_style_loader_dist_runtime_insertBySelector_js__WEBPACK_IMPORTED_MODULE_2___default().bind(null, \"head\");\n    \noptions.domAPI = (_node_modules_style_loader_dist_runtime_styleDomAPI_js__WEBPACK_IMPORTED_MODULE_1___default());\noptions.insertStyleElement = (_node_modules_style_loader_dist_runtime_insertStyleElement_js__WEBPACK_IMPORTED_MODULE_4___default());\n\nvar update = _node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0___default()(_node_modules_css_loader_dist_cjs_js_node_modules_sass_loader_dist_cjs_js_LEAF_FormEditor_scss__WEBPACK_IMPORTED_MODULE_6__[\"default\"], options);\n\n\n\n\n       /* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (_node_modules_css_loader_dist_cjs_js_node_modules_sass_loader_dist_cjs_js_LEAF_FormEditor_scss__WEBPACK_IMPORTED_MODULE_6__[\"default\"] && _node_modules_css_loader_dist_cjs_js_node_modules_sass_loader_dist_cjs_js_LEAF_FormEditor_scss__WEBPACK_IMPORTED_MODULE_6__[\"default\"].locals ? _node_modules_css_loader_dist_cjs_js_node_modules_sass_loader_dist_cjs_js_LEAF_FormEditor_scss__WEBPACK_IMPORTED_MODULE_6__[\"default\"].locals : undefined);\n\n\n//# sourceURL=webpack://leaf/./libs/js/LEAF/dialog_vue/LEAF_FormEditor.scss?");

/***/ }),

/***/ "./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js":
/*!****************************************************************************!*\
  !*** ./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js ***!
  \****************************************************************************/
/***/ ((module) => {

eval("\n\nvar stylesInDOM = [];\n\nfunction getIndexByIdentifier(identifier) {\n  var result = -1;\n\n  for (var i = 0; i < stylesInDOM.length; i++) {\n    if (stylesInDOM[i].identifier === identifier) {\n      result = i;\n      break;\n    }\n  }\n\n  return result;\n}\n\nfunction modulesToDom(list, options) {\n  var idCountMap = {};\n  var identifiers = [];\n\n  for (var i = 0; i < list.length; i++) {\n    var item = list[i];\n    var id = options.base ? item[0] + options.base : item[0];\n    var count = idCountMap[id] || 0;\n    var identifier = \"\".concat(id, \" \").concat(count);\n    idCountMap[id] = count + 1;\n    var indexByIdentifier = getIndexByIdentifier(identifier);\n    var obj = {\n      css: item[1],\n      media: item[2],\n      sourceMap: item[3],\n      supports: item[4],\n      layer: item[5]\n    };\n\n    if (indexByIdentifier !== -1) {\n      stylesInDOM[indexByIdentifier].references++;\n      stylesInDOM[indexByIdentifier].updater(obj);\n    } else {\n      var updater = addElementStyle(obj, options);\n      options.byIndex = i;\n      stylesInDOM.splice(i, 0, {\n        identifier: identifier,\n        updater: updater,\n        references: 1\n      });\n    }\n\n    identifiers.push(identifier);\n  }\n\n  return identifiers;\n}\n\nfunction addElementStyle(obj, options) {\n  var api = options.domAPI(options);\n  api.update(obj);\n\n  var updater = function updater(newObj) {\n    if (newObj) {\n      if (newObj.css === obj.css && newObj.media === obj.media && newObj.sourceMap === obj.sourceMap && newObj.supports === obj.supports && newObj.layer === obj.layer) {\n        return;\n      }\n\n      api.update(obj = newObj);\n    } else {\n      api.remove();\n    }\n  };\n\n  return updater;\n}\n\nmodule.exports = function (list, options) {\n  options = options || {};\n  list = list || [];\n  var lastIdentifiers = modulesToDom(list, options);\n  return function update(newList) {\n    newList = newList || [];\n\n    for (var i = 0; i < lastIdentifiers.length; i++) {\n      var identifier = lastIdentifiers[i];\n      var index = getIndexByIdentifier(identifier);\n      stylesInDOM[index].references--;\n    }\n\n    var newLastIdentifiers = modulesToDom(newList, options);\n\n    for (var _i = 0; _i < lastIdentifiers.length; _i++) {\n      var _identifier = lastIdentifiers[_i];\n\n      var _index = getIndexByIdentifier(_identifier);\n\n      if (stylesInDOM[_index].references === 0) {\n        stylesInDOM[_index].updater();\n\n        stylesInDOM.splice(_index, 1);\n      }\n    }\n\n    lastIdentifiers = newLastIdentifiers;\n  };\n};\n\n//# sourceURL=webpack://leaf/./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js?");

/***/ }),

/***/ "./node_modules/style-loader/dist/runtime/insertBySelector.js":
/*!********************************************************************!*\
  !*** ./node_modules/style-loader/dist/runtime/insertBySelector.js ***!
  \********************************************************************/
/***/ ((module) => {

eval("\n\nvar memo = {};\n/* istanbul ignore next  */\n\nfunction getTarget(target) {\n  if (typeof memo[target] === \"undefined\") {\n    var styleTarget = document.querySelector(target); // Special case to return head of iframe instead of iframe itself\n\n    if (window.HTMLIFrameElement && styleTarget instanceof window.HTMLIFrameElement) {\n      try {\n        // This will throw an exception if access to iframe is blocked\n        // due to cross-origin restrictions\n        styleTarget = styleTarget.contentDocument.head;\n      } catch (e) {\n        // istanbul ignore next\n        styleTarget = null;\n      }\n    }\n\n    memo[target] = styleTarget;\n  }\n\n  return memo[target];\n}\n/* istanbul ignore next  */\n\n\nfunction insertBySelector(insert, style) {\n  var target = getTarget(insert);\n\n  if (!target) {\n    throw new Error(\"Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.\");\n  }\n\n  target.appendChild(style);\n}\n\nmodule.exports = insertBySelector;\n\n//# sourceURL=webpack://leaf/./node_modules/style-loader/dist/runtime/insertBySelector.js?");

/***/ }),

/***/ "./node_modules/style-loader/dist/runtime/insertStyleElement.js":
/*!**********************************************************************!*\
  !*** ./node_modules/style-loader/dist/runtime/insertStyleElement.js ***!
  \**********************************************************************/
/***/ ((module) => {

eval("\n\n/* istanbul ignore next  */\nfunction insertStyleElement(options) {\n  var element = document.createElement(\"style\");\n  options.setAttributes(element, options.attributes);\n  options.insert(element, options.options);\n  return element;\n}\n\nmodule.exports = insertStyleElement;\n\n//# sourceURL=webpack://leaf/./node_modules/style-loader/dist/runtime/insertStyleElement.js?");

/***/ }),

/***/ "./node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js ***!
  \**********************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\n\n/* istanbul ignore next  */\nfunction setAttributesWithoutAttributes(styleElement) {\n  var nonce =  true ? __webpack_require__.nc : 0;\n\n  if (nonce) {\n    styleElement.setAttribute(\"nonce\", nonce);\n  }\n}\n\nmodule.exports = setAttributesWithoutAttributes;\n\n//# sourceURL=webpack://leaf/./node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js?");

/***/ }),

/***/ "./node_modules/style-loader/dist/runtime/styleDomAPI.js":
/*!***************************************************************!*\
  !*** ./node_modules/style-loader/dist/runtime/styleDomAPI.js ***!
  \***************************************************************/
/***/ ((module) => {

eval("\n\n/* istanbul ignore next  */\nfunction apply(styleElement, options, obj) {\n  var css = \"\";\n\n  if (obj.supports) {\n    css += \"@supports (\".concat(obj.supports, \") {\");\n  }\n\n  if (obj.media) {\n    css += \"@media \".concat(obj.media, \" {\");\n  }\n\n  var needLayer = typeof obj.layer !== \"undefined\";\n\n  if (needLayer) {\n    css += \"@layer\".concat(obj.layer.length > 0 ? \" \".concat(obj.layer) : \"\", \" {\");\n  }\n\n  css += obj.css;\n\n  if (needLayer) {\n    css += \"}\";\n  }\n\n  if (obj.media) {\n    css += \"}\";\n  }\n\n  if (obj.supports) {\n    css += \"}\";\n  }\n\n  var sourceMap = obj.sourceMap;\n\n  if (sourceMap && typeof btoa !== \"undefined\") {\n    css += \"\\n/*# sourceMappingURL=data:application/json;base64,\".concat(btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))), \" */\");\n  } // For old IE\n\n  /* istanbul ignore if  */\n\n\n  options.styleTagTransform(css, styleElement, options.options);\n}\n\nfunction removeStyleElement(styleElement) {\n  // istanbul ignore if\n  if (styleElement.parentNode === null) {\n    return false;\n  }\n\n  styleElement.parentNode.removeChild(styleElement);\n}\n/* istanbul ignore next  */\n\n\nfunction domAPI(options) {\n  var styleElement = options.insertStyleElement(options);\n  return {\n    update: function update(obj) {\n      apply(styleElement, options, obj);\n    },\n    remove: function remove() {\n      removeStyleElement(styleElement);\n    }\n  };\n}\n\nmodule.exports = domAPI;\n\n//# sourceURL=webpack://leaf/./node_modules/style-loader/dist/runtime/styleDomAPI.js?");

/***/ }),

/***/ "./node_modules/style-loader/dist/runtime/styleTagTransform.js":
/*!*********************************************************************!*\
  !*** ./node_modules/style-loader/dist/runtime/styleTagTransform.js ***!
  \*********************************************************************/
/***/ ((module) => {

eval("\n\n/* istanbul ignore next  */\nfunction styleTagTransform(css, styleElement) {\n  if (styleElement.styleSheet) {\n    styleElement.styleSheet.cssText = css;\n  } else {\n    while (styleElement.firstChild) {\n      styleElement.removeChild(styleElement.firstChild);\n    }\n\n    styleElement.appendChild(document.createTextNode(css));\n  }\n}\n\nmodule.exports = styleTagTransform;\n\n//# sourceURL=webpack://leaf/./node_modules/style-loader/dist/runtime/styleTagTransform.js?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			id: moduleId,
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/compat get default export */
/******/ 	(() => {
/******/ 		// getDefaultExport function for compatibility with non-harmony modules
/******/ 		__webpack_require__.n = (module) => {
/******/ 			var getter = module && module.__esModule ?
/******/ 				() => (module['default']) :
/******/ 				() => (module);
/******/ 			__webpack_require__.d(getter, { a: getter });
/******/ 			return getter;
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/nonce */
/******/ 	(() => {
/******/ 		__webpack_require__.nc = undefined;
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = __webpack_require__("./libs/js/LEAF/dialog_vue/LEAF_FormEditor_main.js");
/******/ 	
/******/ })()
;