/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./libs/js/LEAF/form_editor_vue_src/LEAF_FormEditor_App_vue.js":
/*!*********************************************************************!*\
  !*** ./libs/js/LEAF/form_editor_vue_src/LEAF_FormEditor_App_vue.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _components_LeafFormDialog_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./components/LeafFormDialog.js */ \"./libs/js/LEAF/form_editor_vue_src/components/LeafFormDialog.js\");\n/* harmony import */ var _components_dialog_content_IndicatorEditing_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./components/dialog_content/IndicatorEditing.js */ \"./libs/js/LEAF/form_editor_vue_src/components/dialog_content/IndicatorEditing.js\");\n/* harmony import */ var _components_dialog_content_AdvancedOptionsDialog_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./components/dialog_content/AdvancedOptionsDialog.js */ \"./libs/js/LEAF/form_editor_vue_src/components/dialog_content/AdvancedOptionsDialog.js\");\n/* harmony import */ var _components_dialog_content_EditPropertiesDialog_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./components/dialog_content/EditPropertiesDialog.js */ \"./libs/js/LEAF/form_editor_vue_src/components/dialog_content/EditPropertiesDialog.js\");\n/* harmony import */ var _components_dialog_content_NewFormDialog_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./components/dialog_content/NewFormDialog.js */ \"./libs/js/LEAF/form_editor_vue_src/components/dialog_content/NewFormDialog.js\");\n/* harmony import */ var _components_dialog_content_ImportFormDialog_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./components/dialog_content/ImportFormDialog.js */ \"./libs/js/LEAF/form_editor_vue_src/components/dialog_content/ImportFormDialog.js\");\n/* harmony import */ var _components_dialog_content_FormHistoryDialog_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./components/dialog_content/FormHistoryDialog.js */ \"./libs/js/LEAF/form_editor_vue_src/components/dialog_content/FormHistoryDialog.js\");\n/* harmony import */ var _components_dialog_content_StapleFormDialog_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./components/dialog_content/StapleFormDialog.js */ \"./libs/js/LEAF/form_editor_vue_src/components/dialog_content/StapleFormDialog.js\");\n/* harmony import */ var _components_dialog_content_ConfirmDeleteDialog_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./components/dialog_content/ConfirmDeleteDialog.js */ \"./libs/js/LEAF/form_editor_vue_src/components/dialog_content/ConfirmDeleteDialog.js\");\n/* harmony import */ var _components_ModFormMenu_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./components/ModFormMenu.js */ \"./libs/js/LEAF/form_editor_vue_src/components/ModFormMenu.js\");\n/* harmony import */ var _components_CategoryCard_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./components/CategoryCard.js */ \"./libs/js/LEAF/form_editor_vue_src/components/CategoryCard.js\");\n/* harmony import */ var _components_form_view_FormContentView__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./components/form_view/FormContentView */ \"./libs/js/LEAF/form_editor_vue_src/components/form_view/FormContentView.js\");\n/* harmony import */ var _components_RestoreFields_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./components/RestoreFields.js */ \"./libs/js/LEAF/form_editor_vue_src/components/RestoreFields.js\");\n/* harmony import */ var _LEAF_FormEditor_scss__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./LEAF_FormEditor.scss */ \"./libs/js/LEAF/form_editor_vue_src/LEAF_FormEditor.scss\");\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({\n  data: function data() {\n    var _this = this;\n\n    return {\n      APIroot: '../api/',\n      CSRFToken: CSRFToken,\n      dialogTitle: '',\n      dialogFormContent: '',\n      dialogContentIsComponent: false,\n      dialogButtonText: {\n        confirm: 'Save',\n        cancel: 'Cancel'\n      },\n      showFormDialog: false,\n      //this sets the method associated with the save btn to the onSave method of the modal's current component\n      formSaveFunction: function formSaveFunction() {\n        if (_this.$refs[_this.dialogFormContent]) {\n          _this.$refs[_this.dialogFormContent].onSave();\n        } else {\n          console.log('got something unexpected');\n        }\n      },\n      isEditingModal: false,\n      appIsLoadingCategoryList: true,\n      appIsLoadingCategoryInfo: false,\n      currCategoryID: null,\n      //null or string\n      currSubformID: null,\n      //null or string\n      currIndicatorID: null,\n      //null or number\n      newIndicatorParentID: null,\n      //null or number\n      categories: {},\n      //obj with keys for each catID, values an object with 'categories' and 'workflow' tables fields\n      currentCategorySelection: {},\n      //current record from categories object\n      ajaxFormByCategoryID: [],\n      //form tree with information about indicators for each node\n      selectedFormNode: null,\n      selectedNodeIndicatorID: null,\n      currentCategoryIsSensitive: false,\n      currentCategoryIndicatorTotal: 0,\n      ajaxSelectedCategoryStapled: [],\n      ajaxWorkflowRecords: [],\n      //array of all 'workflows' table records\n      ajaxIndicatorByID: {},\n      //'indicators' table record for a specific indicatorID\n      orgSelectorClassesAdded: {\n        group: false,\n        position: false,\n        employee: false\n      },\n      restoringFields: false //TODO:?? there are a few pages that could be view here, page_views: [restoringFields: false, leafLibrary: false etc]\n\n    };\n  },\n  provide: function provide() {\n    var _this2 = this;\n\n    return {\n      CSRFToken: Vue.computed(function () {\n        return _this2.CSRFToken;\n      }),\n      currCategoryID: Vue.computed(function () {\n        return _this2.currCategoryID;\n      }),\n      currSubformID: Vue.computed(function () {\n        return _this2.currSubformID;\n      }),\n      currIndicatorID: Vue.computed(function () {\n        return _this2.currIndicatorID;\n      }),\n      newIndicatorParentID: Vue.computed(function () {\n        return _this2.newIndicatorParentID;\n      }),\n      isEditingModal: Vue.computed(function () {\n        return _this2.isEditingModal;\n      }),\n      ajaxIndicatorByID: Vue.computed(function () {\n        return _this2.ajaxIndicatorByID;\n      }),\n      categories: Vue.computed(function () {\n        return _this2.categories;\n      }),\n      currentCategorySelection: Vue.computed(function () {\n        return _this2.currentCategorySelection;\n      }),\n      selectedNodeIndicatorID: Vue.computed(function () {\n        return _this2.selectedNodeIndicatorID;\n      }),\n      selectedFormNode: Vue.computed(function () {\n        return _this2.selectedFormNode;\n      }),\n      currentCategoryIsSensitive: Vue.computed(function () {\n        return _this2.currentCategoryIsSensitive;\n      }),\n      currentCategoryIndicatorTotal: Vue.computed(function () {\n        return _this2.currentCategoryIndicatorTotal;\n      }),\n      ajaxFormByCategoryID: Vue.computed(function () {\n        return _this2.ajaxFormByCategoryID;\n      }),\n      appIsLoadingCategoryInfo: Vue.computed(function () {\n        return _this2.appIsLoadingCategoryInfo;\n      }),\n      ajaxSelectedCategoryStapled: Vue.computed(function () {\n        return _this2.ajaxSelectedCategoryStapled;\n      }),\n      ajaxWorkflowRecords: Vue.computed(function () {\n        return _this2.ajaxWorkflowRecords;\n      }),\n      showFormDialog: Vue.computed(function () {\n        return _this2.showFormDialog;\n      }),\n      dialogTitle: Vue.computed(function () {\n        return _this2.dialogTitle;\n      }),\n      dialogFormContent: Vue.computed(function () {\n        return _this2.dialogFormContent;\n      }),\n      dialogButtonText: Vue.computed(function () {\n        return _this2.dialogButtonText;\n      }),\n      formSaveFunction: Vue.computed(function () {\n        return _this2.formSaveFunction;\n      }),\n      restoringFields: Vue.computed(function () {\n        return _this2.restoringFields;\n      }),\n      orgSelectorClassesAdded: Vue.computed(function () {\n        return _this2.orgSelectorClassesAdded;\n      }),\n      //static values\n      APIroot: this.APIroot,\n      editPropertiesClicked: this.editPropertiesClicked,\n      editPermissionsClicked: this.editPermissionsClicked,\n      newQuestion: this.newQuestion,\n      editQuestion: this.editQuestion,\n      getStapledFormsByCurrentCategory: this.getStapledFormsByCurrentCategory,\n      editIndicatorPrivileges: this.editIndicatorPrivileges,\n      selectIndicator: this.selectIndicator,\n      selectNewCategory: this.selectNewCategory,\n      selectNewFormNode: this.selectNewFormNode,\n      updateCategoriesProperty: this.updateCategoriesProperty,\n      addNewCategory: this.addNewCategory,\n      closeFormDialog: this.closeFormDialog,\n      openAdvancedOptionsDialog: this.openAdvancedOptionsDialog,\n      openNewFormDialog: this.openNewFormDialog,\n      openImportFormDialog: this.openImportFormDialog,\n      openFormHistoryDialog: this.openFormHistoryDialog,\n      openConfirmDeleteFormDialog: this.openConfirmDeleteFormDialog,\n      openStapleFormsDialog: this.openStapleFormsDialog,\n      addOrgSelector: this.addOrgSelector,\n      truncateText: this.truncateText,\n      showRestoreFields: this.showRestoreFields\n    };\n  },\n  components: {\n    LeafFormDialog: _components_LeafFormDialog_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"],\n    IndicatorEditing: _components_dialog_content_IndicatorEditing_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"],\n    AdvancedOptionsDialog: _components_dialog_content_AdvancedOptionsDialog_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"],\n    NewFormDialog: _components_dialog_content_NewFormDialog_js__WEBPACK_IMPORTED_MODULE_4__[\"default\"],\n    ImportFormDialog: _components_dialog_content_ImportFormDialog_js__WEBPACK_IMPORTED_MODULE_5__[\"default\"],\n    FormHistoryDialog: _components_dialog_content_FormHistoryDialog_js__WEBPACK_IMPORTED_MODULE_6__[\"default\"],\n    StapleFormDialog: _components_dialog_content_StapleFormDialog_js__WEBPACK_IMPORTED_MODULE_7__[\"default\"],\n    ConfirmDeleteDialog: _components_dialog_content_ConfirmDeleteDialog_js__WEBPACK_IMPORTED_MODULE_8__[\"default\"],\n    ModFormMenu: _components_ModFormMenu_js__WEBPACK_IMPORTED_MODULE_9__[\"default\"],\n    CategoryCard: _components_CategoryCard_js__WEBPACK_IMPORTED_MODULE_10__[\"default\"],\n    FormContentView: _components_form_view_FormContentView__WEBPACK_IMPORTED_MODULE_11__[\"default\"],\n    EditPropertiesDialog: _components_dialog_content_EditPropertiesDialog_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"],\n    RestoreFields: _components_RestoreFields_js__WEBPACK_IMPORTED_MODULE_12__[\"default\"]\n  },\n  beforeMount: function beforeMount() {\n    var _this3 = this;\n\n    this.getCategoryListAll().then(function (res) {\n      _this3.setCategories(res);\n\n      _this3.appIsLoadingCategoryList = false;\n    })[\"catch\"](function (err) {\n      return console.log('error getting category list', err);\n    });\n    this.getWorkflowRecords().then(function (res) {\n      _this3.ajaxWorkflowRecords = res;\n    })[\"catch\"](function (err) {\n      return console.log('error getting workflow records', err);\n    });\n  },\n  computed: {\n    activeCategories: function activeCategories() {\n      var active = [];\n\n      for (var c in this.categories) {\n        if (this.categories[c].parentID === '' && parseInt(this.categories[c].workflowID) !== 0) {\n          active.push(_objectSpread({}, this.categories[c]));\n        }\n      }\n\n      return active;\n    },\n    inactiveCategories: function inactiveCategories() {\n      var inactive = [];\n\n      for (var c in this.categories) {\n        if (this.categories[c].parentID === '' && parseInt(this.categories[c].workflowID) === 0) {\n          inactive.push(_objectSpread({}, this.categories[c]));\n        }\n      }\n\n      return inactive;\n    }\n  },\n  methods: {\n    //general use methods\n    truncateText: function truncateText(str) {\n      var maxlength = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 40;\n      var overflow = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : '...';\n      return str.length <= maxlength ? str : str.slice(0, maxlength) + overflow;\n    },\n    addOrgSelector: function addOrgSelector(selectorType) {\n      this.orgSelectorClassesAdded[selectorType] = true;\n    },\n    //DB GET\n    getCategoryListAll: function getCategoryListAll() {\n      var _this4 = this;\n\n      this.appIsLoadingCategoryList = true;\n      return new Promise(function (resolve, reject) {\n        $.ajax({\n          type: 'GET',\n          url: \"\".concat(_this4.APIroot, \"formStack/categoryList/all\"),\n          success: function success(res) {\n            return resolve(res);\n          },\n          error: function error(err) {\n            return reject(err);\n          }\n        });\n      });\n    },\n    getWorkflowRecords: function getWorkflowRecords() {\n      var _this5 = this;\n\n      return new Promise(function (resolve, reject) {\n        $.ajax({\n          type: 'GET',\n          url: \"\".concat(_this5.APIroot, \"workflow\"),\n          success: function success(res) {\n            return resolve(res);\n          },\n          error: function error(err) {\n            return reject(err);\n          }\n        });\n      });\n    },\n    getFormByCategoryID: function getFormByCategoryID() {\n      var _this6 = this;\n\n      var catID = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.currCategoryID;\n      this.appIsLoadingCategoryInfo = true;\n      return new Promise(function (resolve, reject) {\n        $.ajax({\n          type: 'GET',\n          url: \"\".concat(_this6.APIroot, \"form/_\").concat(catID),\n          success: function success(res) {\n            _this6.appIsLoadingCategoryInfo = false;\n            resolve(res);\n          },\n          error: function error(err) {\n            return reject(err);\n          }\n        });\n      });\n    },\n    getStapledFormsByCurrentCategory: function getStapledFormsByCurrentCategory() {\n      var _this7 = this;\n\n      var formID = this.currSubformID || this.currCategoryID;\n      $.ajax({\n        type: 'GET',\n        url: \"\".concat(this.APIroot, \"formEditor/_\").concat(formID, \"/stapled\"),\n        success: function success(res) {\n          console.log('setting stapled forms', res);\n          _this7.ajaxSelectedCategoryStapled = res;\n        },\n        error: function error(err) {\n          return console.log(err);\n        }\n      });\n    },\n    getIndicatorByID: function getIndicatorByID(indID) {\n      var _this8 = this;\n\n      //get specific indicator info\n      return new Promise(function (resolve, reject) {\n        $.ajax({\n          type: 'GET',\n          url: \"\".concat(_this8.APIroot, \"formEditor/indicator/\").concat(indID),\n          success: function success(res) {\n            return resolve(res);\n          },\n          error: function error(err) {\n            return reject(err);\n          }\n        });\n      });\n    },\n    //local data\n    setCategories: function setCategories(obj) {\n      //build categories object from getCatListAll res on success\n      for (var i in obj) {\n        this.categories[obj[i].categoryID] = obj[i];\n      }\n    },\n    updateCategoriesProperty: function updateCategoriesProperty(catID, keyName, keyValue) {\n      this.categories[catID][keyName] = keyValue;\n      this.currentCategorySelection = this.categories[catID];\n      console.log('updated curr cat selection', keyName, this.currentCategorySelection);\n    },\n    addNewCategory: function addNewCategory(catID) {\n      var record = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      this.categories[catID] = record;\n    },\n    //categoryID of the form to select, whether it is a subform, indicatorID associated with the current selection in the form index \n    selectNewCategory: function selectNewCategory(catID) {\n      var _this9 = this;\n\n      var isSubform = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n      var subnodeIndID = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n      console.log('selecting new form');\n      this.restoringFields = false; //nav from Restore Fields subview\n\n      if (!isSubform) {\n        console.log('setting new currCatID', catID);\n        this.currCategoryID = catID; //set main form catID\n\n        this.currSubformID = null; //clear the subform ID\n      } else {\n        console.log('setting new subCatID', catID);\n        this.currSubformID = catID; //update the subformID, but keep the main form ID\n      }\n\n      console.log('RESET: currentCategorySelection, ajaxFormByCategoryID, staples, selectednode, nodeIndID, indicatorTotal');\n      this.currentCategorySelection = {};\n      this.ajaxFormByCategoryID = [];\n      this.ajaxSelectedCategoryStapled = [];\n      this.selectedFormNode = null;\n      this.selectedNodeIndicatorID = null;\n      this.currentCategoryIndicatorTotal = 0;\n      vueData.formID = catID || ''; //NOTE: update of other vue app TODO: mv?\n\n      document.getElementById('btn-vue-update-trigger').dispatchEvent(new Event(\"click\")); //switch to specified record, get info for the newly selected form, update variable values\n\n      if (catID !== null) {\n        this.currentCategorySelection = _objectSpread({}, this.categories[catID]);\n        this.selectedNodeIndicatorID = subnodeIndID;\n        this.getFormByCategoryID(catID).then(function (res) {\n          _this9.ajaxFormByCategoryID = res;\n\n          _this9.ajaxFormByCategoryID.forEach(function (section) {\n            _this9.currentCategoryIndicatorTotal = _this9.getIndicatorCountAndNodeSelection(section, _this9.currentCategoryIndicatorTotal);\n          });\n\n          document.getElementById(catID).focus();\n        })[\"catch\"](function (err) {\n          return console.log('error getting form info: ', err);\n        });\n        this.getStapledFormsByCurrentCategory();\n      } else {\n        //nav to form card browser.\n        this.appIsLoadingCategoryList = true;\n        this.categories = {};\n        this.getCategoryListAll().then(function (res) {\n          _this9.setCategories(res);\n\n          _this9.appIsLoadingCategoryList = false;\n        })[\"catch\"](function (err) {\n          return console.log('error getting category list', err);\n        });\n        this.getWorkflowRecords().then(function (res) {\n          _this9.ajaxWorkflowRecords = res;\n        })[\"catch\"](function (err) {\n          return console.log('error getting workflow records', err);\n        });\n      }\n    },\n    selectNewFormNode: function selectNewFormNode(event, node) {\n      if (event.target.classList.contains('icon_move') || event.target.classList.contains('sub-menu-chevron')) {\n        return; //prevents enter/space activation from list item move and menu toggle buttons\n      }\n\n      this.selectedFormNode = node;\n      this.selectedNodeIndicatorID = (node === null || node === void 0 ? void 0 : node.indicatorID) || null;\n      console.log('setting form node and indID from list selection', this.selectedNodeIndicatorID);\n    },\n    editPermissionsClicked: function editPermissionsClicked() {\n      console.log('clicked edit Permissions');\n    },\n    editPropertiesClicked: function editPropertiesClicked() {\n      var _this10 = this;\n\n      this.getFormByCategoryID(this.currSubformID || this.currCategoryID).then(function (res) {\n        _this10.ajaxFormByCategoryID = res;\n        _this10.currentCategoryIsSensitive = false;\n        res.forEach(function (formSection) {\n          if (_this10.currentCategoryIsSensitive === false) {\n            _this10.currentCategoryIsSensitive = _this10.checkSensitive(formSection);\n          }\n        });\n\n        _this10.openEditProperties();\n      })[\"catch\"](function (err) {\n        return console.log('error updating category information', err);\n      });\n    },\n    editIndicatorPrivileges: function editIndicatorPrivileges() {\n      console.log('clicked edit privileges');\n    },\n    setCustomDialogTitle: function setCustomDialogTitle(htmlContent) {\n      this.dialogTitle = htmlContent;\n    },\n    //takes comp name as string, eg 'edit-properties-dialog'\n    //components must be registered to this app\n    setFormDialogComponent: function setFormDialogComponent(component) {\n      this.dialogContentIsComponent = true;\n      this.dialogFormContent = component;\n    },\n    setFormDialogHTML: function setFormDialogHTML(htmlContent) {\n      this.dialogContentIsComponent = false;\n      this.dialogFormContent = htmlContent;\n    },\n    clearCustomDialog: function clearCustomDialog() {\n      this.setCustomDialogTitle('');\n      this.setFormDialogComponent('');\n      this.setFormDialogHTML('');\n      this.dialogButtonText = {\n        confirm: 'Save',\n        cancel: 'Cancel'\n      };\n    },\n    closeFormDialog: function closeFormDialog() {\n      this.showFormDialog = false;\n      this.clearCustomDialog();\n    },\n    openConfirmDeleteFormDialog: function openConfirmDeleteFormDialog() {\n      this.setCustomDialogTitle('<h2>Delete this form</h2>');\n      this.setFormDialogComponent('confirm-delete-dialog');\n      this.dialogButtonText = {\n        confirm: 'Yes',\n        cancel: 'No'\n      };\n      this.showFormDialog = true;\n    },\n    openStapleFormsDialog: function openStapleFormsDialog() {\n      this.setCustomDialogTitle('<h2>Staple Other Form</h2>');\n      this.setFormDialogComponent('staple-form-dialog');\n      this.showFormDialog = true;\n    },\n    openIndicatorEditing: function openIndicatorEditing(indicatorID) {\n      //gets passed the currentID on edit buttons, a parentID for subquestion buttons, and null for new form sections\n      var title = '';\n\n      if (this.currIndicatorID === null && indicatorID === null) {\n        //not an existing indicator, nor a child of an existing indicator\n        title = \"<h2>Adding new question</h2>\";\n      } else {\n        title = this.currIndicatorID === parseInt(indicatorID) ? \"<h2>Editing indicator \".concat(indicatorID, \"</h2>\") : \"<h2>Adding question to \".concat(indicatorID, \"</h2>\");\n      }\n\n      this.setCustomDialogTitle(title);\n      this.setFormDialogComponent('indicator-editing');\n      this.showFormDialog = true;\n    },\n    openAdvancedOptionsDialog: function openAdvancedOptionsDialog(indicatorID) {\n      var _this11 = this;\n\n      console.log('app called open Advanced with:', indicatorID);\n      this.currIndicatorID = parseInt(indicatorID);\n      this.getIndicatorByID(indicatorID).then(function (res) {\n        _this11.ajaxIndicatorByID = res;\n\n        _this11.setCustomDialogTitle(\"<h2>Advanced Options for indicator \".concat(indicatorID, \"</h2>\"));\n\n        _this11.setFormDialogComponent('advanced-options-dialog');\n\n        _this11.showFormDialog = true;\n      })[\"catch\"](function (err) {\n        return console.log('error getting indicator information', err);\n      });\n    },\n    openEditProperties: function openEditProperties() {\n      this.setCustomDialogTitle('<h2>Edit Properties</h2>');\n      this.setFormDialogComponent('edit-properties-dialog');\n      this.showFormDialog = true;\n    },\n    openNewFormDialog: function openNewFormDialog() {\n      var titleHTML = this.currCategoryID === null ? '<h2>New Form</h2>' : '<h2>New Internal Use Form</h2>';\n      this.setCustomDialogTitle(titleHTML);\n      this.setFormDialogComponent('new-form-dialog');\n      this.showFormDialog = true;\n    },\n    openImportFormDialog: function openImportFormDialog() {\n      this.setCustomDialogTitle('<h2>Import Form</h2>');\n      this.setFormDialogComponent('import-form-dialog');\n      this.showFormDialog = true;\n    },\n    openFormHistoryDialog: function openFormHistoryDialog() {\n      this.setCustomDialogTitle(\"<h2>Form History</h2>\");\n      this.setFormDialogComponent('form-history-dialog');\n      this.showFormDialog = true;\n    },\n    newQuestion: function newQuestion(parentIndID) {\n      this.currIndicatorID = null;\n      this.newIndicatorParentID = parentIndID !== null ? parseInt(parentIndID) : null;\n      this.isEditingModal = false;\n      console.log('Adding new indicator.', 'currID should be null:', this.currIndicatorID, 'parentID (null for new sections):', this.newIndicatorParentID, 'FORM:', this.currCategoryID);\n      this.openIndicatorEditing(parentIndID);\n    },\n    editQuestion: function editQuestion(indicatorID, series) {\n      var _this12 = this;\n\n      this.currIndicatorID = parseInt(indicatorID);\n      this.newIndicatorParentID = null;\n      this.getIndicatorByID(indicatorID).then(function (res) {\n        _this12.isEditingModal = true;\n        _this12.ajaxIndicatorByID = res;\n\n        _this12.openIndicatorEditing(indicatorID);\n\n        console.log('app called editQuestion with:', indicatorID, series);\n      })[\"catch\"](function (err) {\n        return console.log('error getting indicator information', err);\n      });\n    },\n    checkSensitive: function checkSensitive(node) {\n      var isSensitive = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n      if (parseInt(node.is_sensitive) === 1) {\n        isSensitive = true;\n      }\n\n      if (isSensitive === false && node.child) {\n        for (var c in node.child) {\n          isSensitive = this.checkSensitive(node.child[c], isSensitive);\n          if (isSensitive === true) break;\n        }\n      }\n\n      return isSensitive;\n    },\n    getIndicatorCountAndNodeSelection: function getIndicatorCountAndNodeSelection() {\n      var node = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      var count = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n      count++;\n\n      if (node.indicatorID === this.selectedNodeIndicatorID) {\n        this.selectedFormNode = node;\n        console.log('found updated node from stored node ID', this.selectedNodeIndicatorID, this.selectedFormNode);\n      }\n\n      if (node.child) {\n        for (var c in node.child) {\n          count = this.getIndicatorCountAndNodeSelection(node.child[c], count);\n        }\n      }\n\n      return count;\n    },\n    showRestoreFields: function showRestoreFields() {\n      this.restoringFields = true;\n    }\n  }\n});\n\n//# sourceURL=webpack://leaf/./libs/js/LEAF/form_editor_vue_src/LEAF_FormEditor_App_vue.js?");

/***/ }),

/***/ "./libs/js/LEAF/form_editor_vue_src/LEAF_FormEditor_main.js":
/*!******************************************************************!*\
  !*** ./libs/js/LEAF/form_editor_vue_src/LEAF_FormEditor_main.js ***!
  \******************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _LEAF_FormEditor_App_vue_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./LEAF_FormEditor_App_vue.js */ \"./libs/js/LEAF/form_editor_vue_src/LEAF_FormEditor_App_vue.js\");\n//import Vue from \"../../vue3/vue.global.prod.js\";\n\nvar app = Vue.createApp(_LEAF_FormEditor_App_vue_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"]); //opt-in to allow computed injections to be used without the value property.\n//per Vue dev, will not be needed after next minor update\n\napp.config.unwrapInjectedRef = true;\napp.mount('#vue-formeditor-app');\n\n//# sourceURL=webpack://leaf/./libs/js/LEAF/form_editor_vue_src/LEAF_FormEditor_main.js?");

/***/ }),

/***/ "./libs/js/LEAF/form_editor_vue_src/components/CategoryCard.js":
/*!*********************************************************************!*\
  !*** ./libs/js/LEAF/form_editor_vue_src/components/CategoryCard.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({\n  props: {\n    category: Object\n  },\n  inject: ['selectNewCategory'],\n  computed: {\n    workflowID: function workflowID() {\n      return parseInt(this.category.workflowID);\n    },\n    cardLibraryClasses: function cardLibraryClasses() {\n      //NOTE:? often null (LIVE).  called when smarty referFormLibraryID != ''\n      return \"formPreview formLibraryID_\".concat(this.category.formLibraryID);\n    },\n    categoryName: function categoryName() {\n      //NOTE: XSSHelpers global\n      return this.category.categoryName === '' ? 'Untitled' : XSSHelpers.stripAllTags(this.category.categoryName);\n    },\n    formDescription: function formDescription() {\n      return XSSHelpers.stripAllTags(this.category.categoryDescription);\n    },\n    availability: function availability() {\n      return parseInt(this.category.visible) === 1 && this.workflowID > 0 ? 'This form is available' : 'Hidden. Users cannot submit new requests.';\n    },\n    workflow: function workflow() {\n      var msg = '';\n\n      if (this.workflowID === 0) {\n        msg = 'No Workflow';\n      } else {\n        msg = this.category.description !== null ? 'Workflow: ' + this.category.description : '';\n      }\n\n      return msg;\n    }\n  },\n  template: \"<div tabindex=\\\"0\\\" \\n        @click=\\\"selectNewCategory(category.categoryID)\\\"\\n        @keyup.enter=\\\"selectNewCategory(category.categoryID)\\\"\\n        :class=\\\"cardLibraryClasses\\\" class=\\\"browser-category-card\\\"\\n        :id=\\\"category.categoryID\\\" \\n        :title=\\\"category.categoryID\\\">\\n            <div class=\\\"formPreviewTitle\\\" style=\\\"position: relative\\\">{{categoryName}}\\n                <img v-if=\\\"parseInt(category.needToKnow) === 1\\\" src=\\\"../../libs/dynicons/?img=emblem-readonly.svg&w=16\\\" alt=\\\"\\\" \\n                title=\\\"Need to know mode enabled\\\" style=\\\"position: absolute; top: 4px; right: 4px; z-index:10;\\\"/>\\n            </div>\\n            <div class=\\\"formPreviewDescription\\\" v-html=\\\"formDescription\\\"></div>\\n            <div class=\\\"formPreviewStatus\\\">{{ availability }}</div>\\n            <div class=\\\"formPreviewWorkflow\\\">{{ workflow }}</div>\\n        </div>\"\n});\n\n//# sourceURL=webpack://leaf/./libs/js/LEAF/form_editor_vue_src/components/CategoryCard.js?");

/***/ }),

/***/ "./libs/js/LEAF/form_editor_vue_src/components/GridCell.js":
/*!*****************************************************************!*\
  !*** ./libs/js/LEAF/form_editor_vue_src/components/GridCell.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({\n  data: function data() {\n    var _this$cell, _this$cell2, _this$cell3, _this$cell4, _this$cell4$options;\n\n    return {\n      name: ((_this$cell = this.cell) === null || _this$cell === void 0 ? void 0 : _this$cell.name) || 'No title',\n      id: ((_this$cell2 = this.cell) === null || _this$cell2 === void 0 ? void 0 : _this$cell2.id) || this.makeColumnID(),\n      gridType: ((_this$cell3 = this.cell) === null || _this$cell3 === void 0 ? void 0 : _this$cell3.type) || '',\n      textareaDropOptions: ((_this$cell4 = this.cell) === null || _this$cell4 === void 0 ? void 0 : (_this$cell4$options = _this$cell4.options) === null || _this$cell4$options === void 0 ? void 0 : _this$cell4$options.join('\\n')) || ''\n    };\n  },\n  props: {\n    cell: Object,\n    column: Number\n  },\n  inject: ['gridJSON', 'updateGridJSON'],\n  methods: {\n    /**\r\n     * Purpose: Generates Unique ID to track columns to update user input with grid format\r\n     * @returns {string}\r\n     */\n    makeColumnID: function makeColumnID() {\n      return \"col_\" + ((1 + Math.random()) * 0x10000 | 0).toString(16).substring(1);\n    },\n\n    /**\r\n     * Purpose: Delete a column from Grid\r\n     * @param event\r\n     */\n    deleteColumn: function deleteColumn(event) {\n      console.log('app clicked del col');\n      var column = $(event.target).closest('div');\n      var tbody = $(event.target).closest('div').parent('div');\n      var columnDeleted = parseInt($(column).index()) + 1;\n      var focus;\n\n      switch (tbody.find('div').length) {\n        case 1:\n          alert('Cannot remove initial column.');\n          break;\n\n        case 2:\n          column.remove();\n          focus = $('div.cell:first');\n          this.rightArrows(tbody.find('div'), false);\n          this.leftArrows(tbody.find('div'), false);\n          break;\n\n        default:\n          focus = column.next().find('[title=\"Delete column\"]');\n\n          if (column.find('[title=\"Move column right\"]').css('display') === 'none') {\n            this.rightArrows(column.prev(), false);\n            this.leftArrows(column.prev(), true);\n            focus = column.prev().find('[title=\"Delete column\"]');\n          }\n\n          if (column.find('[title=\"Move column left\"]').css('display') === 'none') {\n            this.leftArrows(column.next(), false);\n            this.rightArrows(column.next(), true);\n          }\n\n          column.remove();\n          break;\n      }\n\n      $('#tableStatus').attr('aria-label', 'Row ' + columnDeleted + ' removed, ' + $(tbody).children().length + ' total.');\n      focus.focus();\n      this.updateGridJSON();\n    },\n\n    /**\r\n     * Purpose: Move Column Right\r\n     * @param event\r\n     */\n    moveRight: function moveRight(event) {\n      var column = $(event.target).closest('div');\n      var nextColumnLast = column.next().find('[title=\"Move column right\"]').css('display') === 'none';\n      column.insertAfter(column.next());\n\n      if (nextColumnLast) {\n        column.find('[title=\"Move column left\"]').focus();\n      } else {\n        column.find('[title=\"Move column right\"]').focus();\n      }\n\n      $('#tableStatus').attr('aria-label', 'Moved right to column ' + (parseInt($(column).index()) + 1) + ' of ' + column.parent().children().length);\n      this.updateGridJSON();\n    },\n\n    /**\r\n     * Purpose: Move Column Left\r\n     * @param event\r\n     */\n    moveLeft: function moveLeft(event) {\n      var column = $(event.target).closest('div.cell');\n      var nextColumnFirst = column.prev().find('[title=\"Move column left\"]').css('display') === 'none';\n      column.insertBefore(column.prev());\n\n      if (nextColumnFirst) {\n        column.find('[title=\"Move column right\"]').focus();\n      } else {\n        column.find('[title=\"Move column left\"]').focus();\n      }\n\n      $('#tableStatus').attr('aria-label', 'Moved left to column ' + (parseInt($(column).index()) + 1) + ' of ' + column.parent().children().length);\n      this.updateGridJSON();\n    }\n  },\n  template: \"<div tabindex=\\\"0\\\" :id=\\\"id\\\" class=\\\"cell\\\">\\n        <img v-if=\\\"column!==1\\\" role=\\\"button\\\" tabindex=\\\"0\\\"\\n            @click=\\\"moveLeft\\\" src=\\\"../../libs/dynicons/?img=go-previous.svg&w=16\\\" \\n            title=\\\"Move column left\\\" alt=\\\"Move column left\\\" style=\\\"cursor: pointer\\\" />\\n        <img v-if=\\\"column!==gridJSON.length\\\" role=\\\"button\\\" tabindex=\\\"0\\\" \\n            @click=\\\"moveRight\\\" src=\\\"../../libs/dynicons/?img=go-next.svg&w=16\\\" \\n            title=\\\"Move column right\\\" alt=\\\"Move column right\\\" style=\\\"cursor: pointer\\\" /><br />\\n        <span class=\\\"columnNumber\\\">Column #{{column}}: </span>\\n        <img role=\\\"button\\\" tabindex=\\\"0\\\"\\n            @click=\\\"deleteColumn\\\" src=\\\"../../libs/dynicons/?img=process-stop.svg&w=16\\\" \\n            title=\\\"Delete column\\\" alt=\\\"Delete column\\\" style=\\\"cursor: pointer; vertical-align: middle;\\\" /><br/>\\n        <input type=\\\"text\\\" v-model=\\\"name\\\" /><br />\\n        <div style=\\\"text-align: left\\\">Type:</div>\\n        <select v-model=\\\"gridType\\\">\\n            <option value=\\\"text\\\">Single line input</option>\\n            <option value=\\\"date\\\">Date</option>\\n            <option value=\\\"dropdown\\\">Drop Down</option>\\n            <option value=\\\"textarea\\\">Multi-line text</option>\\n        </select>\\n        <span v-if=\\\"gridType==='dropdown'\\\" class=\\\"dropdown\\\">\\n            <div style=\\\"text-align: left\\\">One option per line</div>\\n            <textarea  \\n                v-model=\\\"textareaDropOptions\\\"\\n                aria-label=\\\"Dropdown options, one option per line\\\"\\n                style=\\\"width: 100%; height: 60px; resize:vertical\\\">\\n            </textarea>\\n        </span>\\n    </div>\"\n});\n\n//# sourceURL=webpack://leaf/./libs/js/LEAF/form_editor_vue_src/components/GridCell.js?");

/***/ }),

/***/ "./libs/js/LEAF/form_editor_vue_src/components/LeafFormDialog.js":
/*!***********************************************************************!*\
  !*** ./libs/js/LEAF/form_editor_vue_src/components/LeafFormDialog.js ***!
  \***********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({\n  data: function data() {\n    return {\n      scrollY: window.scrollY,\n      initialTop: 15,\n      modalElementID: 'leaf_xhrDialog',\n      modalBackgroundID: 'leaf-vue-dialog-background'\n    };\n  },\n  props: {\n    hasDevConsoleAccess: {\n      type: Number,\n      \"default\": 0\n    }\n  },\n  inject: ['dialogTitle', 'showFormDialog', 'closeFormDialog', 'formSaveFunction', 'dialogButtonText'],\n  provide: function provide() {\n    return {\n      hasDevConsoleAccess: this.hasDevConsoleAccess\n    };\n  },\n  mounted: function mounted() {\n    //this helps fix the modal background coverage, as modals can have various heights\n    var elModal = document.getElementById(this.modalElementID);\n    var currModalHeight = elModal.clientHeight;\n    document.getElementById(this.modalBackgroundID).style.minHeight = currModalHeight + window.innerHeight + 'px';\n    this.makeDraggable(elModal);\n  },\n  methods: {\n    makeDraggable: function makeDraggable(el) {\n      var currWidth = el.clientWidth;\n      var pos1 = 0;\n      var pos2 = 0;\n      var mouseX = 0;\n      var mouseY = 0;\n\n      var elementDrag = function elementDrag(e) {\n        e = e || window.event;\n        e.preventDefault();\n        pos1 = mouseX - e.clientX;\n        pos2 = mouseY - e.clientY;\n        mouseX = e.clientX;\n        mouseY = e.clientY;\n        el.style.top = el.offsetTop - pos2 + \"px\";\n        el.style.left = el.offsetLeft - pos1 + \"px\";\n        checkBounds();\n      };\n\n      var closeDragElement = function closeDragElement() {\n        document.onmouseup = null;\n        document.onmousemove = null;\n      };\n\n      var dragMouseDown = function dragMouseDown(e) {\n        e = e || window.event;\n        e.preventDefault();\n        mouseX = e.clientX;\n        mouseY = e.clientY;\n        document.onmouseup = closeDragElement;\n        document.onmousemove = elementDrag;\n      };\n\n      var checkBounds = function checkBounds() {\n        var scrollbarWidth = 20;\n\n        if (el.offsetTop < window.scrollY) {\n          el.style.top = window.scrollY + 'px';\n        }\n\n        if (el.offsetLeft < 0) {\n          el.style.left = 0 + 'px';\n        }\n\n        if (el.offsetLeft + currWidth + scrollbarWidth > window.innerWidth) {\n          //extra space for scrollbar\n          el.style.left = window.innerWidth - currWidth - scrollbarWidth + 'px';\n        }\n      };\n\n      if (document.getElementById(this.modalElementID + \"_drag_handle\")) {\n        document.getElementById(this.modalElementID + \"_drag_handle\").onmousedown = dragMouseDown;\n      }\n    }\n  },\n  template: \"<Teleport to=\\\"body\\\">\\n        <div v-if=\\\"showFormDialog || showGeneralDialog\\\" :id=\\\"showFormDialog ? 'leaf-vue-dialog-background' : ''\\\">\\n        <div :id=\\\"modalElementID\\\" class=\\\"leaf-vue-dialog\\\" role=\\\"dialog\\\" :style=\\\"{top: scrollY + initialTop + 'px'}\\\">\\n            <div v-html=\\\"dialogTitle\\\" :id=\\\"modalElementID + '_drag_handle'\\\" class=\\\"leaf-vue-dialog-title\\\"></div>\\n            <div tabindex=0 @click=\\\"closeFormDialog\\\" @keypress.enter=\\\"closeFormDialog\\\" id=\\\"leaf-vue-dialog-close\\\">&#10005;</div>\\n            <div id=\\\"record\\\">\\n                <div role=\\\"document\\\" style=\\\"position: relative;\\\">\\n                    <div id=\\\"loadIndicator\\\" class=\\\"leaf-dialog-loader\\\"></div><!-- TODO: -->\\n                    <main id=\\\"xhr\\\" class=\\\"leaf-vue-dialog-content\\\" role=\\\"main\\\">\\n                        <slot name=\\\"dialog-content-slot\\\"></slot>\\n                    </main>\\n                </div>\\n                <div id=\\\"leaf-vue-dialog-cancel-save\\\">\\n                    <button \\n                        id=\\\"button_save\\\" class=\\\"btn-confirm\\\" :title=\\\"dialogButtonText.confirm\\\"\\n                        @click=\\\"formSaveFunction\\\">\\n                        {{dialogButtonText.confirm}}\\n                    </button>\\n                    <button \\n                        id=\\\"button_cancelchange\\\" class=\\\"btn-general\\\" :title=\\\"dialogButtonText.cancel\\\"\\n                        @click=\\\"closeFormDialog\\\">\\n                        {{dialogButtonText.cancel}}\\n                    </button>\\n                </div>\\n            </div>\\n        </div>\\n        </div>\\n    </Teleport>\"\n});\n\n//# sourceURL=webpack://leaf/./libs/js/LEAF/form_editor_vue_src/components/LeafFormDialog.js?");

/***/ }),

/***/ "./libs/js/LEAF/form_editor_vue_src/components/ModFormMenu.js":
/*!********************************************************************!*\
  !*** ./libs/js/LEAF/form_editor_vue_src/components/ModFormMenu.js ***!
  \********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({\n  inject: ['truncateText', 'selectNewCategory', 'categories', 'currCategoryID', 'ajaxSelectedCategoryStapled', 'restoringFields', 'showRestoreFields', 'openNewFormDialog', 'openImportFormDialog', 'openFormHistoryDialog', 'openStapleFormsDialog', 'openConfirmDeleteFormDialog'],\n  computed: {\n    internalForms: function internalForms() {\n      var internalForms = [];\n\n      for (var c in this.categories) {\n        if (this.categories[c].parentID === this.currCategoryID) {\n          var internal = _objectSpread({}, this.categories[c]);\n\n          internalForms.push(internal);\n        }\n      }\n\n      return internalForms;\n    }\n  },\n  methods: {\n    deleteForm: function deleteForm() {\n      console.log('clicked app menu nav deleteForm', this.currCategoryID);\n    },\n    exportForm: function exportForm() {\n      console.log('clicked app menu nav exportForm', this.currCategoryID);\n    },\n    selectMainForm: function selectMainForm() {\n      console.log('clicked main form', this.currCategoryID);\n      this.selectNewCategory(this.currCategoryID);\n    },\n    selectSubform: function selectSubform(subformID) {\n      console.log('clicked subform', 'sub', subformID, 'main', this.currCategoryID);\n      this.selectNewCategory(subformID, true);\n    },\n    formName: function formName(catName) {\n      var len = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 16;\n      var elFilter = document.createElement('div');\n      elFilter.innerHTML = catName || 'untitled';\n      var name = this.truncateText(elFilter.innerText, len);\n      return name;\n    }\n  },\n  template: \"\\n        <div id=\\\"menu\\\" class=\\\"mod-form-menu-nav\\\">\\n            <ul v-if=\\\"currCategoryID===null || restoringFields===true\\\">\\n                <li>\\n                    <a href=\\\"#\\\" id=\\\"createFormButton\\\" @click=\\\"openNewFormDialog\\\">\\n                    Create Form<span>\\uD83D\\uDCC4</span>\\n                    </a>\\n                </li>\\n                <li>\\n                    <a href=\\\"./?a=formLibrary\\\">\\n                    LEAF Library<span>\\uD83D\\uDCD8</span>\\n                    </a>\\n                </li>\\n                <li>\\n                    <a href=\\\"#\\\" @click=\\\"openImportFormDialog\\\">\\n                    Import Form<span>\\uD83D\\uDCE6</span>\\n                    </a>\\n                </li>\\n                <li v-if=\\\"!restoringFields\\\">\\n                    <a href=\\\"#\\\" @click=\\\"showRestoreFields\\\">\\n                    Restore Fields<span>\\u267B\\uFE0F</span>\\n                    </a>\\n                </li>\\n                <li v-else>\\n                    <a href=\\\"#\\\" @click=\\\"selectNewCategory(null)\\\">\\n                    View All Forms<span>\\uD83D\\uDCBC</span>\\n                    </a>\\n                </li>\\n            </ul>\\n            <ul v-else>\\n                <li>\\n                    <a href=\\\"#\\\" @click=\\\"selectNewCategory(null)\\\">\\n                    View All Forms<span>\\uD83D\\uDCBC</span>\\n                    </a>\\n                </li>\\n                <ul><!-- MAIN AND INTERNAL FORMS -->\\n                    <li style=\\\"margin-bottom:0.1em\\\">\\n                        <a href=\\\"#\\\" :id=\\\"currCategoryID\\\" @click=\\\"selectMainForm\\\" title=\\\"select form\\\">\\n                        {{formName(categories[currCategoryID].categoryName)}}<span>\\uD83D\\uDCC2</span>\\n                        </a>\\n                    </li>\\n                    <li v-for=\\\"i in internalForms\\\" style=\\\"margin-bottom:0.1em\\\" :key=\\\"i.categoryID\\\">\\n                        <a href=\\\"#\\\" :id=\\\"i.categoryID\\\" @click=\\\"selectSubform(i.categoryID)\\\" title=\\\"select internal form\\\">\\n                        {{formName(i.categoryName, 20)}}<span>\\uD83D\\uDCCB</span>\\n                        </a>\\n                    </li>\\n                    <li>\\n                        <a href=\\\"#\\\" @click=\\\"openNewFormDialog\\\" title=\\\"add new internal use form\\\">\\n                        Add Internal-Use<span>\\u2795</span>\\n                        </a>\\n                    </li>\\n                </ul>\\n                <li>\\n                    <a href=\\\"#\\\" @click=\\\"openStapleFormsDialog\\\" title=\\\"staple another form\\\">\\n                    Stapled Forms<span>\\uD83D\\uDCCC</span>\\n                    </a>\\n                </li>\\n                <div id=\\\"stapledArea\\\">\\n                    <ul v-if=\\\"ajaxSelectedCategoryStapled.length > 0\\\" style=\\\"margin-top: -0.5em;\\\">\\n                        <li v-for=\\\"s in ajaxSelectedCategoryStapled\\\" style=\\\"margin-bottom:0.2em;\\\" :key=\\\"'staple_' + s.stapledCategoryID\\\">\\n                        {{s.categoryName || 'Untitled'}}\\n                        </li>\\n                    </ul>\\n                </div>\\n                <li>\\n                    <a href=\\\"#\\\" @click=\\\"openFormHistoryDialog\\\" title=\\\"view form history\\\">\\n                    View History<span>\\uD83D\\uDD57</span>\\n                    </a>\\n                </li>\\n                <li>\\n                    <a href=\\\"#\\\" @click=\\\"exportForm\\\" title=\\\"export form\\\">\\n                    Export Form<span>\\uD83D\\uDCBE</span>\\n                    </a>\\n                </li>\\n                <li>\\n                    <a href=\\\"#\\\" @click=\\\"openConfirmDeleteFormDialog\\\" title=\\\"delete this form\\\">\\n                    Delete this form<span>\\u274C</span>\\n                    </a>\\n                </li>\\n                <li>\\n                    <a href=\\\"#\\\" @click=\\\"showRestoreFields\\\">\\n                    Restore Fields<span>\\u267B\\uFE0F</span>\\n                    </a>\\n                </li>\\n            </ul>\\n        </div>\"\n});\n\n//# sourceURL=webpack://leaf/./libs/js/LEAF/form_editor_vue_src/components/ModFormMenu.js?");

/***/ }),

/***/ "./libs/js/LEAF/form_editor_vue_src/components/RestoreFields.js":
/*!**********************************************************************!*\
  !*** ./libs/js/LEAF/form_editor_vue_src/components/RestoreFields.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({\n  data: function data() {\n    return {\n      disabledFields: 0\n    };\n  },\n  inject: ['APIroot', 'CSRFToken'],\n  beforeMount: function beforeMount() {\n    var _this = this;\n\n    $.ajax({\n      type: 'GET',\n      url: \"\".concat(this.APIroot, \"form/indicator/list/disabled\"),\n      success: function success(res) {\n        _this.disabledFields = res.filter(function (obj) {\n          return parseInt(obj.indicatorID) > 0;\n        });\n      },\n      error: function error(err) {\n        return console.log(err);\n      },\n      cache: false\n    });\n  },\n  methods: {\n    restoreField: function restoreField(indicatorID) {\n      var _this2 = this;\n\n      $.ajax({\n        type: 'POST',\n        url: \"\".concat(this.APIroot, \"formEditor/\").concat(indicatorID, \"/disabled\"),\n        data: {\n          CSRFToken: CSRFToken,\n          disabled: 0\n        },\n        success: function success() {\n          _this2.disabledFields = _this2.disabledFields.filter(function (f) {\n            return f.indicatorID !== indicatorID;\n          });\n          alert('The field has been restored.');\n        },\n        error: function error(err) {\n          return console.log(err);\n        }\n      });\n    }\n  },\n  template: \"<div style=\\\"margin: 0 1em;\\\">\\n            <h3 style=\\\"margin: 0;\\\">List of disabled fields available for recovery</h3>\\n            <div>Deleted fields and associated data will be not display in the Report Builder</div>\\n            <div>\\n                <table v-if=\\\"disabledFields !== 0\\\" class=\\\"usa-table leaf-whitespace-normal\\\">\\n                    <thead>\\n                        <tr>\\n                            <th>indicatorID</th>\\n                            <th>Form</th>\\n                            <th>Field Name</th>\\n                            <th>Input Format</th>\\n                            <th>Status</th>\\n                            <th>Restore</th>\\n                        </tr>\\n                    </thead>\\n                    <tbody id=\\\"fields\\\">\\n                        <tr v-for=\\\"f in disabledFields\\\" key=\\\"f.indicatorID\\\">\\n                            <td>{{ f.indicatorID }}</td>\\n                            <td>{{ f.categoryName }}</td>\\n                            <td>{{ f.name }}</td>\\n                            <td>{{ f.format }}</td>\\n                            <td>{{ f.disabled }}</td>\\n                            <td><button class=\\\"buttonNorm\\\" \\n                                @click=\\\"restoreField(f.indicatorID)\\\">\\n                                Restore this field</button>\\n                            </td>\\n                        </tr>\\n                    </tbody>\\n                </table>\\n                <p v-else>Loading ...</p>\\n            </div>\\n        </div>\"\n});\n\n//# sourceURL=webpack://leaf/./libs/js/LEAF/form_editor_vue_src/components/RestoreFields.js?");

/***/ }),

/***/ "./libs/js/LEAF/form_editor_vue_src/components/dialog_content/AdvancedOptionsDialog.js":
/*!*********************************************************************************************!*\
  !*** ./libs/js/LEAF/form_editor_vue_src/components/dialog_content/AdvancedOptionsDialog.js ***!
  \*********************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({\n  data: function data() {\n    return {\n      initialFocusElID: 'TODO:',\n      left: '{{',\n      right: '}}',\n      formID: this.currSubformID || this.currCategoryID,\n      codeEditorHtml: {},\n      codeEditorHtmlPrint: {},\n      html: this.ajaxIndicatorByID[this.currIndicatorID].html === null ? '' : this.ajaxIndicatorByID[this.currIndicatorID].html,\n      htmlPrint: this.ajaxIndicatorByID[this.currIndicatorID].htmlPrint === null ? '' : this.ajaxIndicatorByID[this.currIndicatorID].htmlPrint\n    };\n  },\n  inject: ['APIroot', 'CSRFToken', 'closeFormDialog', 'currCategoryID', 'currSubformID', 'currIndicatorID', 'ajaxIndicatorByID', 'selectNewCategory', 'hasDevConsoleAccess', 'selectedNodeIndicatorID'],\n  mounted: function mounted() {\n    console.log('Advanced Options mounted', this.currIndicatorID, this.formID);\n\n    if (parseInt(this.hasDevConsoleAccess) === 1) {\n      this.setupAdvancedOptions();\n    }\n  },\n  methods: {\n    setupAdvancedOptions: function setupAdvancedOptions() {\n      var _this = this;\n\n      this.codeEditorHtml = CodeMirror.fromTextArea(document.getElementById(\"html\"), {\n        mode: \"htmlmixed\",\n        lineNumbers: true,\n        extraKeys: {\n          \"F11\": function F11(cm) {\n            cm.setOption(\"fullScreen\", !cm.getOption(\"fullScreen\"));\n          },\n          \"Esc\": function Esc(cm) {\n            if (cm.getOption(\"fullScreen\")) cm.setOption(\"fullScreen\", false);\n          },\n          \"Ctrl-S\": function CtrlS(cm) {\n            _this.saveCodeHTML();\n          }\n        }\n      });\n      this.codeEditorHtmlPrint = CodeMirror.fromTextArea(document.getElementById(\"htmlPrint\"), {\n        mode: \"htmlmixed\",\n        lineNumbers: true,\n        extraKeys: {\n          \"F11\": function F11(cm) {\n            cm.setOption(\"fullScreen\", !cm.getOption(\"fullScreen\"));\n          },\n          \"Esc\": function Esc(cm) {\n            if (cm.getOption(\"fullScreen\")) cm.setOption(\"fullScreen\", false);\n          },\n          \"Ctrl-S\": function CtrlS(cm) {\n            _this.saveCodeHTMLPrint();\n          }\n        }\n      });\n      $('.CodeMirror').css('border', '1px solid black');\n    },\n\n    /* via save code buttons in the modal */\n    saveCodeHTML: function saveCodeHTML() {\n      var _this2 = this;\n\n      var htmlValue = this.codeEditorHtml.getValue();\n      $.ajax({\n        type: 'POST',\n        url: \"\".concat(this.APIroot, \"formEditor/\").concat(this.currIndicatorID, \"/html\"),\n        data: {\n          html: htmlValue,\n          CSRFToken: this.CSRFToken\n        },\n        success: function success() {\n          _this2.html = htmlValue;\n          var time = new Date().toLocaleTimeString();\n          document.getElementById('codeSaveStatus_html').innerHTML = '<br /> Last saved: ' + time;\n\n          _this2.selectNewCategory(_this2.formID, _this2.currSubformID !== null, _this2.selectedNodeIndicatorID);\n        },\n        error: function error(err) {\n          return console.log(err);\n        }\n      });\n    },\n    saveCodeHTMLPrint: function saveCodeHTMLPrint() {\n      var _this3 = this;\n\n      var htmlPrintValue = this.codeEditorHtmlPrint.getValue();\n      $.ajax({\n        type: 'POST',\n        url: \"\".concat(this.APIroot, \"formEditor/\").concat(this.currIndicatorID, \"/htmlPrint\"),\n        data: {\n          htmlPrint: htmlPrintValue,\n          CSRFToken: this.CSRFToken\n        },\n        success: function success() {\n          _this3.htmlPrint = htmlPrintValue;\n          var time = new Date().toLocaleTimeString();\n          document.getElementById('codeSaveStatus_htmlPrint').innerHTML = '<br /> Last saved: ' + time;\n\n          _this3.selectNewCategory(_this3.formID, _this3.currSubformID !== null, _this3.selectedNodeIndicatorID);\n        },\n        error: function error(err) {\n          return console.log(err);\n        }\n      });\n    },\n\n    /* on save button of base modal */\n    onSave: function onSave() {\n      var _this4 = this;\n\n      console.log('clicked advanced options save');\n      var advancedOptionsUpdates = [];\n      var htmlChanged = this.html !== this.codeEditorHtml.getValue();\n      var htmlPrintChanged = this.htmlPrint !== this.codeEditorHtmlPrint.getValue();\n      console.log('dHTML, dHTMLP', htmlChanged, htmlPrintChanged);\n\n      if (htmlChanged) {\n        advancedOptionsUpdates.push($.ajax({\n          type: 'POST',\n          url: \"\".concat(this.APIroot, \"formEditor/\").concat(this.currIndicatorID, \"/html\"),\n          data: {\n            html: this.codeEditorHtml.getValue(),\n            CSRFToken: this.CSRFToken\n          },\n          success: function success() {},\n          error: function error(err) {\n            return console.log('ind html post err', err);\n          }\n        }));\n      }\n\n      if (htmlPrintChanged) {\n        advancedOptionsUpdates.push($.ajax({\n          type: 'POST',\n          url: \"\".concat(this.APIroot, \"formEditor/\").concat(this.currIndicatorID, \"/htmlPrint\"),\n          data: {\n            htmlPrint: this.codeEditorHtmlPrint.getValue(),\n            CSRFToken: this.CSRFToken\n          },\n          success: function success() {},\n          error: function error(err) {\n            return console.log('ind htmlPrint post err', err);\n          }\n        }));\n      }\n\n      Promise.all(advancedOptionsUpdates).then(function (res) {\n        console.log('promise all:', advancedOptionsUpdates, res);\n\n        _this4.closeFormDialog();\n\n        if (res.length > 0) {\n          _this4.selectNewCategory(_this4.formID, _this4.currSubformID !== null, _this4.selectedNodeIndicatorID);\n        }\n      });\n    }\n  },\n  template: \"<div v-if=\\\"parseInt(hasDevConsoleAccess)===1\\\">\\n            <fieldset id=\\\"advanced\\\" style=\\\"min-width: 700px; padding: 0.5em; margin:0\\\"><legend>Template Variables and Controls</legend>\\n                <table class=\\\"table\\\" style=\\\"border-collapse: collapse; margin: 0; width: 100%;\\\">\\n                    <tr>\\n                        <td><b>{{ left }} iID {{ right }}</b></td>\\n                        <td>The indicatorID # of the current data field.</td>\\n                        <td><b>Ctrl-S</b></td>\\n                        <td>Save the focused section</td>\\n                    </tr>\\n                    <tr>\\n                        <td><b>{{ left }} recordID {{ right }}</b></td>\\n                        <td>The record ID # of the current request.</td>\\n                        <td><b>F11</b></td>\\n                        <td>Toggle Full Screen mode for the focused section</td>\\n                    </tr>\\n                    <tr>\\n                        <td><b>{{ left }} data {{ right }}</b></td>\\n                        <td>The contents of the current data field as stored in the database.</td>\\n                        <td><b>Esc</b></td>\\n                        <td>Escape Full Screen mode</td>\\n                    </tr>\\n                </table><br />\\n                <div style=\\\"display:flex; justify-content: space-between;\\\">\\n                    html (for pages where the user can edit data): \\n                    <button id=\\\"btn_codeSave_html\\\" @click=\\\"saveCodeHTML\\\" class=\\\"buttonNorm\\\" title=\\\"Save Code\\\">\\n                        <img id=\\\"saveIndicator\\\" src=\\\"../../libs/dynicons/?img=media-floppy.svg&w=16\\\" alt=\\\"Save\\\" />\\n                        Save Code<span id=\\\"codeSaveStatus_html\\\"></span>\\n                    </button>\\n                </div>\\n                <textarea id=\\\"html\\\">{{html}}</textarea><br />  <!-- NOTE: can't seem to v-model these areas html and htmlPrint properties updated after save -->\\n                <div style=\\\"display:flex; justify-content: space-between;\\\">\\n                    htmlPrint (for pages where the user can only read data): \\n                    <button id=\\\"btn_codeSave_htmlPrint\\\" @click=\\\"saveCodeHTMLPrint\\\" class=\\\"buttonNorm\\\" title=\\\"Save Code\\\">\\n                        <img id=\\\"saveIndicator\\\" src=\\\"../../libs/dynicons/?img=media-floppy.svg&w=16\\\" alt=\\\"Save\\\" />\\n                        Save Code<span id=\\\"codeSaveStatus_htmlPrint\\\"></span>\\n                    </button>\\n                </div>\\n                <textarea id=\\\"htmlPrint\\\">{{htmlPrint}}</textarea>\\n            </fieldset>\\n        </div>\\n        <div v-else style=\\\"height:50px; margin: 1em 0;\\\">\\n            Notice: Please go to <b>Admin Panel \\u2192 LEAF Programmer</b> to ensure continued access to this area.\\n        </div>\"\n});\n\n//# sourceURL=webpack://leaf/./libs/js/LEAF/form_editor_vue_src/components/dialog_content/AdvancedOptionsDialog.js?");

/***/ }),

/***/ "./libs/js/LEAF/form_editor_vue_src/components/dialog_content/ConfirmDeleteDialog.js":
/*!*******************************************************************************************!*\
  !*** ./libs/js/LEAF/form_editor_vue_src/components/dialog_content/ConfirmDeleteDialog.js ***!
  \*******************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({\n  data: function data() {\n    return {\n      formID: this.currSubformID || this.currCategoryID\n    };\n  },\n  inject: ['APIroot', 'CSRFToken', 'currCategoryID', 'currSubformID', 'currentCategorySelection', 'ajaxSelectedCategoryStapled', 'selectNewCategory', 'closeFormDialog'],\n  computed: {\n    formName: function formName() {\n      //NOTE: global LEAF class\n      return XSSHelpers.stripAllTags(this.currentCategorySelection.categoryName);\n    },\n    formDescription: function formDescription() {\n      return XSSHelpers.stripAllTags(this.currentCategorySelection.categoryDescription);\n    }\n  },\n  methods: {\n    onSave: function onSave() {\n      var _this = this;\n\n      if (this.ajaxSelectedCategoryStapled.length === 0) {\n        $.ajax({\n          type: 'DELETE',\n          url: \"\".concat(this.APIroot, \"formStack/_\").concat(this.formID, \"?\") + $.param({\n            CSRFToken: this.CSRFToken\n          }),\n          success: function success(res) {\n            if (res !== true) {\n              alert(res);\n            } else {\n              _this.closeFormDialog();\n\n              _this.selectNewCategory(null);\n            }\n          }\n        });\n      } else {\n        alert('Please remove all stapled forms before deleting.');\n      }\n    }\n  },\n  template: \"<div>\\n        <div>Are you sure you want to delete this form?</div>\\n        <div style=\\\"margin: 1em 0;\\\"><b>{{formName}}</b></div>\\n        <div style=\\\"width:300px; height: 50px\\\">{{formDescription}}</div>\\n        <div v-if=\\\"ajaxSelectedCategoryStapled.length > 0\\\">\\u26A0\\uFE0F This form has stapled forms attached</div>\\n    </div>\"\n});\n\n//# sourceURL=webpack://leaf/./libs/js/LEAF/form_editor_vue_src/components/dialog_content/ConfirmDeleteDialog.js?");

/***/ }),

/***/ "./libs/js/LEAF/form_editor_vue_src/components/dialog_content/EditPropertiesDialog.js":
/*!********************************************************************************************!*\
  !*** ./libs/js/LEAF/form_editor_vue_src/components/dialog_content/EditPropertiesDialog.js ***!
  \********************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({\n  data: function data() {\n    return {\n      initialFocusElID: 'name',\n      categoryName: this.currentCategorySelection.categoryName,\n      categoryDescription: this.currentCategorySelection.categoryDescription,\n      workflowID: parseInt(this.currentCategorySelection.workflowID),\n      description: this.currentCategorySelection.description || '',\n      needToKnow: parseInt(this.currentCategorySelection.needToKnow),\n      sort: parseInt(this.currentCategorySelection.sort),\n      visible: parseInt(this.currentCategorySelection.visible),\n      type: this.currentCategorySelection.type,\n      formID: this.currSubformID || this.currCategoryID\n    };\n  },\n  inject: ['APIroot', 'CSRFToken', 'currCategoryID', 'currSubformID', 'truncateText', 'ajaxWorkflowRecords', 'currentCategorySelection', 'currentCategoryIsSensitive', 'updateCategoriesProperty', 'closeFormDialog'],\n  computed: {\n    isSubform: function isSubform() {\n      return this.currentCategorySelection.parentID !== '';\n    }\n  },\n  mounted: function mounted() {\n    document.getElementById(this.initialFocusElID).focus();\n  },\n  methods: {\n    updateWorkflowDescription: function updateWorkflowDescription() {\n      var _this = this;\n\n      var currWorkflow = this.ajaxWorkflowRecords.find(function (rec) {\n        return parseInt(rec.workflowID) === _this.workflowID;\n      });\n      this.description = (currWorkflow === null || currWorkflow === void 0 ? void 0 : currWorkflow.description) || '';\n    },\n    onSave: function onSave() {\n      var _this2 = this;\n\n      console.log('clicked edit properties save');\n      var editPropertyUpdates = [];\n      var nameChanged = this.categoryName !== this.currentCategorySelection.categoryName;\n      var descriptionChanged = this.categoryDescription !== this.currentCategorySelection.categoryDescription;\n      var workflowChanged = this.workflowID !== parseInt(this.currentCategorySelection.workflowID);\n      var needToKnowChanged = this.needToKnow !== parseInt(this.currentCategorySelection.needToKnow);\n      var sortChanged = this.sort !== parseInt(this.currentCategorySelection.sort);\n      var visibleChanged = this.visible !== parseInt(this.currentCategorySelection.visible);\n      var typeChanged = this.type !== this.currentCategorySelection.type;\n\n      if (nameChanged) {\n        editPropertyUpdates.push($.ajax({\n          type: 'POST',\n          url: \"\".concat(this.APIroot, \"formEditor/formName\"),\n          data: {\n            name: this.categoryName,\n            categoryID: this.formID,\n            CSRFToken: this.CSRFToken\n          },\n          success: function success() {\n            //NOTE:  except for WF, these give back an empty array\n            _this2.updateCategoriesProperty(_this2.formID, 'categoryName', _this2.categoryName);\n          },\n          error: function error(err) {\n            return console.log('name post err', err);\n          }\n        }));\n      }\n\n      if (descriptionChanged) {\n        editPropertyUpdates.push($.ajax({\n          type: 'POST',\n          url: \"\".concat(this.APIroot, \"formEditor/formDescription\"),\n          data: {\n            description: this.categoryDescription,\n            categoryID: this.formID,\n            CSRFToken: this.CSRFToken\n          },\n          success: function success() {\n            _this2.updateCategoriesProperty(_this2.formID, 'categoryDescription', _this2.categoryDescription);\n          },\n          error: function error(err) {\n            return console.log('form description post err', err);\n          }\n        }));\n      }\n\n      if (workflowChanged) {\n        editPropertyUpdates.push($.ajax({\n          type: 'POST',\n          url: \"\".concat(this.APIroot, \"formEditor/formWorkflow\"),\n          data: {\n            workflowID: this.workflowID,\n            categoryID: this.formID,\n            CSRFToken: this.CSRFToken\n          },\n          success: function success(res) {\n            if (res === false) {\n              //1 on success\n              alert('The workflow could not be set because this form is stapled to another form');\n            } else {\n              _this2.updateCategoriesProperty(_this2.formID, 'workflowID', _this2.workflowID);\n\n              _this2.updateCategoriesProperty(_this2.formID, 'description', _this2.description);\n            }\n          },\n          error: function error(err) {\n            return console.log('workflow post err', err);\n          }\n        }));\n      }\n\n      if (needToKnowChanged) {\n        editPropertyUpdates.push($.ajax({\n          type: 'POST',\n          url: \"\".concat(this.APIroot, \"formEditor/formNeedToKnow\"),\n          data: {\n            needToKnow: this.needToKnow,\n            categoryID: this.formID,\n            CSRFToken: this.CSRFToken\n          },\n          success: function success() {\n            _this2.updateCategoriesProperty(_this2.formID, 'needToKnow', _this2.needToKnow);\n          },\n          error: function error(err) {\n            return console.log('ntk post err', err);\n          }\n        }));\n      }\n\n      if (sortChanged) {\n        editPropertyUpdates.push($.ajax({\n          type: 'POST',\n          url: \"\".concat(this.APIroot, \"formEditor/formSort\"),\n          data: {\n            sort: this.sort,\n            categoryID: this.formID,\n            CSRFToken: this.CSRFToken\n          },\n          success: function success() {\n            _this2.updateCategoriesProperty(_this2.formID, 'sort', _this2.sort);\n          },\n          error: function error(err) {\n            return console.log('sort post err', err);\n          }\n        }));\n      }\n\n      if (visibleChanged) {\n        editPropertyUpdates.push($.ajax({\n          type: 'POST',\n          url: \"\".concat(this.APIroot, \"formEditor/formVisible\"),\n          data: {\n            visible: this.visible,\n            categoryID: this.formID,\n            CSRFToken: this.CSRFToken\n          },\n          success: function success() {\n            _this2.updateCategoriesProperty(_this2.formID, 'visible', _this2.visible);\n          },\n          error: function error(err) {\n            return console.log('visibility post err', err);\n          }\n        }));\n      }\n\n      if (typeChanged) {\n        editPropertyUpdates.push($.ajax({\n          type: 'POST',\n          url: \"\".concat(this.APIroot, \"formEditor/formType\"),\n          data: {\n            type: this.type,\n            categoryID: this.formID,\n            CSRFToken: this.CSRFToken\n          },\n          success: function success() {\n            _this2.updateCategoriesProperty(_this2.formID, 'type', _this2.type);\n          },\n          error: function error(err) {\n            return console.log('type post err', err);\n          }\n        }));\n      }\n\n      Promise.all(editPropertyUpdates).then(function () {\n        console.log('promise all:', editPropertyUpdates);\n\n        _this2.closeFormDialog();\n      });\n    }\n  },\n  template: \"<table id=\\\"edit-properties-modal\\\">\\n        <tr> <!--'b', 'i', 'u', 'ol', 'ul', 'li', 'br', 'p', 'table', 'td', 'tr', 'thead', 'tbody', 'span', 'strong', 'em', 'colgroup', 'col'-->\\n            <td>Name</td>\\n            <td>\\n                <input id=\\\"name\\\" type=\\\"text\\\" maxlength=\\\"50\\\" v-model=\\\"categoryName\\\" />\\n            </td>\\n        </tr>\\n        <tr>\\n            <td>Description</td>\\n            <td>\\n                <textarea id=\\\"description\\\" maxlength=\\\"255\\\" v-model=\\\"categoryDescription\\\">\\n                </textarea>\\n            </td>\\n        </tr>\\n        <template v-if=\\\"!isSubform\\\">\\n            <tr>\\n                <td>Workflow</td>\\n                <td id=\\\"container_workflowID\\\">\\n                    <select v-if=\\\"ajaxWorkflowRecords.length > 0\\\" \\n                        id=\\\"workflowID\\\" name=\\\"select-workflow\\\" \\n                        title=\\\"select workflow\\\"\\n                        v-model.number=\\\"workflowID\\\"\\n                        @change=\\\"updateWorkflowDescription\\\">\\n                        <option value=\\\"0\\\" :selected=\\\"workflowID===0\\\">No Workflow</option>\\n                        <template v-for=\\\"r in ajaxWorkflowRecords\\\">\\n                            <option v-if=\\\"parseInt(r.workflowID) > 0\\\"\\n                                :value=\\\"r.workflowID\\\"\\n                                :selected=\\\"workflowID===parseInt(r.workflowID)\\\">\\n                                ID#{{r.workflowID}}: {{truncateText(r.description)}}\\n                            </option>\\n                        </template>\\n                    </select>\\n                    <span v-else style=\\\"color: red\\\">A workflow must be set up first</span>\\n                </td>\\n            </tr>\\n            <tr>\\n                <td>\\n                    <img src=\\\"../../libs/dynicons/?img=emblem-notice.svg&w=16\\\" \\n                    title=\\\"When turned on, the people associated with the workflow are the only ones who have access to view the form.  Forced on if form contains sensitive information.\\\" />\\n                    Need to Know mode  \\n                </td>\\n                <td>\\n                    <select id=\\\"needToKnow\\\" title=\\\"Need To Know\\\" v-model.number=\\\"needToKnow\\\" :style=\\\"{width: currentCategoryIsSensitive ? '100%' : 'auto'}\\\">\\n                        <option v-if=\\\"!currentCategoryIsSensitive\\\" value=\\\"0\\\" :selected=\\\"needToKnow===0\\\">Off</option>\\n                        <option value=\\\"1\\\" :selected=\\\"currentCategoryIsSensitive===true || needToKnow===1\\\">\\n                        {{currentCategoryIsSensitive ? 'Forced on because sensitive fields are present' : 'On'}}\\n                        </option>\\n                    </select>\\n                </td>\\n            </tr>\\n            <tr>\\n                <td>\\n                    <img src=\\\"../../libs/dynicons/?img=emblem-notice.svg&w=16\\\" \\n                    title=\\\"When hidden, users will not be able to select this form as an option.\\\" />\\n                    Availability \\n                </td>\\n                <td>\\n                    <select id=\\\"availability\\\" title=\\\"Select Availability\\\" v-model.number=\\\"visible\\\">\\n                        <option value=\\\"1\\\" :selected=\\\"visible===1\\\">Available</option>\\n                        <option value=\\\"0\\\" :selected=\\\"visible===0\\\">Hidden</option>\\n                    </select>\\n                </td>\\n            </tr>\\n            <tr>\\n                <td>Sort Priority</td>\\n                <td><input id=\\\"sort\\\" type=\\\"number\\\" v-model.number=\\\"sort\\\"/></td>\\n            </tr>\\n            <tr>\\n                <td>\\n                    <img src=\\\"../../libs/dynicons/?img=emblem-notice.svg&w=16\\\" \\n                    title=\\\"Change type of form\\\" />\\n                    Type  \\n                </td>\\n                <td>\\n                    <select id=\\\"formType\\\" title=\\\"Change type of form\\\" v-model=\\\"type\\\" >\\n                        <option value=\\\"\\\" :selected=\\\"type===''\\\">Standard</option>\\n                        <option value=\\\"parallel_processing\\\" :selected=\\\"type==='parallel_processing'\\\">Parallel Processing</option>\\n                    </select>\\n                </td>\\n            </tr>\\n        </template>\\n    </table>\"\n});\n\n//# sourceURL=webpack://leaf/./libs/js/LEAF/form_editor_vue_src/components/dialog_content/EditPropertiesDialog.js?");

/***/ }),

/***/ "./libs/js/LEAF/form_editor_vue_src/components/dialog_content/FormHistoryDialog.js":
/*!*****************************************************************************************!*\
  !*** ./libs/js/LEAF/form_editor_vue_src/components/dialog_content/FormHistoryDialog.js ***!
  \*****************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({\n  data: function data() {\n    return {\n      divSaveCancelID: 'leaf-vue-dialog-cancel-save',\n      page: 1,\n      formID: this.currSubformID || this.currCategoryID,\n      ajaxRes: ''\n    };\n  },\n  inject: ['currSubformID', 'currCategoryID'],\n  mounted: function mounted() {\n    document.getElementById(this.divSaveCancelID).style.display = 'none';\n    this.getPage();\n  },\n  computed: {\n    showNext: function showNext() {\n      return this.ajaxRes.indexOf('No history to show') === -1;\n    },\n    showPrev: function showPrev() {\n      return this.page > 1;\n    }\n  },\n  methods: {\n    getNext: function getNext() {\n      this.page++;\n      this.getPage();\n    },\n    getPrev: function getPrev() {\n      this.page--;\n      this.getPage();\n    },\n    getPage: function getPage() {\n      var _this = this;\n\n      $.ajax({\n        type: 'GET',\n        url: \"ajaxIndex.php?a=gethistory&type=form&gethistoryslice=1&page=\".concat(this.page, \"&id=\").concat(this.formID),\n        dataType: 'text',\n        success: function success(res) {\n          _this.ajaxRes = res;\n        },\n        error: function error(err) {\n          return console.log(err);\n        },\n        cache: false\n      });\n    }\n  },\n  template: \"<div id=\\\"history-slice\\\" v-html=\\\"ajaxRes\\\" style=\\\"min-height: 100px; min-width: 300px;\\\"></div>\\n        <div id=\\\"history-page-buttons\\\" style=\\\"display: flex; justify-content: space-between;\\\">\\n            <button v-if=\\\"showPrev\\\" id=\\\"prev\\\" \\n                class=\\\"btn-general\\\"\\n                style=\\\"width: 125px;\\\"\\n                @click=\\\"getPrev\\\" title=\\\"get previous page\\\">\\n                Previous page\\n            </button>\\n            <button v-if=\\\"showNext\\\" id=\\\"next\\\" \\n                class=\\\"btn-general\\\"\\n                style=\\\"width: 125px; margin-left: auto;\\\"\\n                @click=\\\"getNext\\\" title=\\\"get next page\\\">\\n                Next page\\n            </button>\\n        </div>\"\n});\n\n//# sourceURL=webpack://leaf/./libs/js/LEAF/form_editor_vue_src/components/dialog_content/FormHistoryDialog.js?");

/***/ }),

/***/ "./libs/js/LEAF/form_editor_vue_src/components/dialog_content/ImportFormDialog.js":
/*!****************************************************************************************!*\
  !*** ./libs/js/LEAF/form_editor_vue_src/components/dialog_content/ImportFormDialog.js ***!
  \****************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({\n  data: function data() {\n    return {\n      initialFocusElID: 'formPacket',\n      files: null\n    };\n  },\n  inject: ['APIroot', 'CSRFToken', 'closeFormDialog', 'selectNewCategory'],\n  mounted: function mounted() {\n    document.getElementById(this.initialFocusElID).focus();\n  },\n  methods: {\n    onSave: function onSave() {\n      var _this = this;\n\n      if (this.files !== null) {\n        var pkg = new FormData();\n        pkg.append('formPacket', this.files[0]);\n        pkg.append('CSRFToken', this.CSRFToken);\n        $.ajax({\n          type: 'POST',\n          url: \"\".concat(this.APIroot, \"formStack/import\"),\n          processData: false,\n          contentType: false,\n          cache: false,\n          data: pkg,\n          success: function success(res) {\n            if (res === true) {\n              //NOTE: false if issues, newCatID on success would be better\n              console.log('form import success');\n            } else {\n              console.log(res);\n            }\n\n            _this.closeFormDialog();\n\n            _this.selectNewCategory(null);\n          },\n          error: function error(err) {\n            return console.log('form import error', err);\n          }\n        });\n      } else {\n        console.log('no attachment');\n      }\n    },\n    attachForm: function attachForm(e) {\n      var files = e.target.files || e.dataTransfer.files;\n\n      if (files.length > 0) {\n        this.files = files;\n      }\n    }\n  },\n  template: \"\\n            <div id=\\\"file_control\\\" style=\\\"margin-bottom: 1em;\\\">\\n                <p>Select LEAF Form Packet to import:</p>\\n                <input id=\\\"formPacket\\\" name=\\\"formPacket\\\" type=\\\"file\\\" @change=\\\"attachForm\\\"/>\\n            </div>\"\n});\n\n//# sourceURL=webpack://leaf/./libs/js/LEAF/form_editor_vue_src/components/dialog_content/ImportFormDialog.js?");

/***/ }),

/***/ "./libs/js/LEAF/form_editor_vue_src/components/dialog_content/IndicatorEditing.js":
/*!****************************************************************************************!*\
  !*** ./libs/js/LEAF/form_editor_vue_src/components/dialog_content/IndicatorEditing.js ***!
  \****************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _GridCell__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../GridCell */ \"./libs/js/LEAF/form_editor_vue_src/components/GridCell.js\");\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({\n  data: function data() {\n    var _this$ajaxIndicatorBy, _this$ajaxIndicatorBy2, _this$ajaxIndicatorBy3, _this$ajaxIndicatorBy4, _this$ajaxIndicatorBy5, _this$ajaxIndicatorBy6, _this$ajaxIndicatorBy7, _this$ajaxIndicatorBy8, _this$ajaxIndicatorBy9, _this$ajaxIndicatorBy10, _this$ajaxIndicatorBy11, _this$ajaxIndicatorBy12, _this$ajaxIndicatorBy13, _this$ajaxIndicatorBy14;\n\n    return {\n      initialFocusElID: 'name',\n      formID: this.currSubformID || this.currCategoryID,\n      formats: {\n        text: \"Single line text\",\n        textarea: \"Multi-line text\",\n        grid: \"Grid (Table with rows and columns)\",\n        number: \"Numeric\",\n        currency: \"Currency\",\n        date: \"Date\",\n        radio: \"Radio (single select, multiple options)\",\n        checkbox: \"Checkbox (A single checkbox)\",\n        checkboxes: \"Checkboxes (Multiple Checkboxes)\",\n        multiselect: \"Multi-Select Dropdown\",\n        dropdown: \"Dropdown Menu (single select, multiple options)\",\n        fileupload: \"File Attachment\",\n        image: \"Image Attachment\",\n        orgchart_group: \"Orgchart Group\",\n        orgchart_position: \"Orgchart Position\",\n        orgchart_employee: \"Orgchart Employee\",\n        raw_data: \"Raw Data (for programmers)\"\n      },\n      listForParentIDs: [],\n      isLoadingParentIDs: true,\n      multianswerFormats: ['checkboxes', 'radio', 'multiselect', 'dropdown'],\n      name: ((_this$ajaxIndicatorBy = this.ajaxIndicatorByID[this.currIndicatorID]) === null || _this$ajaxIndicatorBy === void 0 ? void 0 : _this$ajaxIndicatorBy.name) || '',\n      options: ((_this$ajaxIndicatorBy2 = this.ajaxIndicatorByID[this.currIndicatorID]) === null || _this$ajaxIndicatorBy2 === void 0 ? void 0 : _this$ajaxIndicatorBy2.options) || [],\n      //options property is arr of options (if present)\n      format: ((_this$ajaxIndicatorBy3 = this.ajaxIndicatorByID[this.currIndicatorID]) === null || _this$ajaxIndicatorBy3 === void 0 ? void 0 : _this$ajaxIndicatorBy3.format) || '',\n      //format property here is just the format name\n      description: ((_this$ajaxIndicatorBy4 = this.ajaxIndicatorByID[this.currIndicatorID]) === null || _this$ajaxIndicatorBy4 === void 0 ? void 0 : _this$ajaxIndicatorBy4.description) || '',\n      defaultValue: ((_this$ajaxIndicatorBy5 = this.ajaxIndicatorByID[this.currIndicatorID]) === null || _this$ajaxIndicatorBy5 === void 0 ? void 0 : _this$ajaxIndicatorBy5[\"default\"]) || '',\n      required: parseInt((_this$ajaxIndicatorBy6 = this.ajaxIndicatorByID[this.currIndicatorID]) === null || _this$ajaxIndicatorBy6 === void 0 ? void 0 : _this$ajaxIndicatorBy6.required) === 1 || false,\n      is_sensitive: parseInt((_this$ajaxIndicatorBy7 = this.ajaxIndicatorByID[this.currIndicatorID]) === null || _this$ajaxIndicatorBy7 === void 0 ? void 0 : _this$ajaxIndicatorBy7.is_sensitive) === 1 || false,\n      parentID: (_this$ajaxIndicatorBy8 = this.ajaxIndicatorByID[this.currIndicatorID]) !== null && _this$ajaxIndicatorBy8 !== void 0 && _this$ajaxIndicatorBy8.parentID ? parseInt(this.ajaxIndicatorByID[this.currIndicatorID].parentID) : this.newIndicatorParentID,\n      sort: parseInt((_this$ajaxIndicatorBy9 = this.ajaxIndicatorByID[this.currIndicatorID]) === null || _this$ajaxIndicatorBy9 === void 0 ? void 0 : _this$ajaxIndicatorBy9.sort) || 0,\n      //checkboxes input\n      singleOptionValue: ((_this$ajaxIndicatorBy10 = this.ajaxIndicatorByID[this.currIndicatorID]) === null || _this$ajaxIndicatorBy10 === void 0 ? void 0 : _this$ajaxIndicatorBy10.format) === 'checkbox' ? this.ajaxIndicatorByID[this.currIndicatorID].options : '',\n      //multi answer format inputs\n      multiOptionValue: ['checkboxes', 'radio', 'multiselect', 'dropdown'].includes((_this$ajaxIndicatorBy11 = this.ajaxIndicatorByID[this.currIndicatorID]) === null || _this$ajaxIndicatorBy11 === void 0 ? void 0 : _this$ajaxIndicatorBy11.format) ? (_this$ajaxIndicatorBy12 = this.ajaxIndicatorByID[this.currIndicatorID].options) === null || _this$ajaxIndicatorBy12 === void 0 ? void 0 : _this$ajaxIndicatorBy12.join('\\n') : '',\n      //used for grid formats\n      gridBodyElement: 'div#container_indicatorGrid > div',\n      gridJSON: ((_this$ajaxIndicatorBy13 = this.ajaxIndicatorByID[this.currIndicatorID]) === null || _this$ajaxIndicatorBy13 === void 0 ? void 0 : _this$ajaxIndicatorBy13.format) === 'grid' ? JSON.parse((_this$ajaxIndicatorBy14 = this.ajaxIndicatorByID[this.currIndicatorID]) === null || _this$ajaxIndicatorBy14 === void 0 ? void 0 : _this$ajaxIndicatorBy14.options[0]) : [],\n      archived: false,\n      deleted: false\n    };\n  },\n  inject: ['APIroot', 'CSRFToken', 'isEditingModal', 'closeFormDialog', 'currCategoryID', 'currSubformID', 'currIndicatorID', 'ajaxIndicatorByID', 'ajaxFormByCategoryID', 'selectedNodeIndicatorID', 'selectNewCategory', 'updateCategoriesProperty', 'newIndicatorParentID', 'truncateText'],\n  provide: function provide() {\n    var _this = this;\n\n    return {\n      gridJSON: Vue.computed(function () {\n        return _this.gridJSON;\n      }),\n      updateGridJSON: this.updateGridJSON\n    };\n  },\n  components: {\n    GridCell: _GridCell__WEBPACK_IMPORTED_MODULE_0__[\"default\"]\n  },\n  mounted: function mounted() {\n    var _this2 = this;\n\n    if (this.isEditingModal === true) {\n      this.getFormParentIDs().then(function (res) {\n        _this2.listForParentIDs = res;\n        _this2.isLoadingParentIDs = false;\n      });\n    }\n\n    if (XSSHelpers.containsTags(this.name, ['<b>', '<i>', '<u>', '<ol>', '<li>', '<br>', '<p>', '<td>'])) {\n      $('#advNameEditor').click();\n      document.querySelector('.trumbowyg-editor').focus();\n    } else {\n      document.getElementById(this.initialFocusElID).focus();\n    }\n  },\n  computed: {\n    isMultiOptionQuestion: function isMultiOptionQuestion() {\n      return this.multianswerFormats.includes(this.format);\n    },\n    fullFormatForPost: function fullFormatForPost() {\n      var fullFormat = this.format;\n\n      switch (this.format) {\n        case 'grid':\n          this.updateGridJSON();\n          fullFormat = fullFormat + \"\\n\" + JSON.stringify(this.gridJSON);\n          break;\n\n        case 'radio':\n        case 'checkboxes':\n        case 'multiselect':\n        case 'dropdown':\n          fullFormat = fullFormat + \"\\n\" + this.formatIndicatorMultiAnswer();\n          break;\n\n        case 'checkbox':\n          fullFormat = fullFormat + \"\\n\" + this.singleOptionValue;\n          break;\n\n        default:\n          break;\n      }\n\n      return fullFormat;\n    }\n  },\n  methods: {\n    getFormParentIDs: function getFormParentIDs() {\n      var _this3 = this;\n\n      return new Promise(function (resolve, reject) {\n        $.ajax({\n          type: 'GET',\n          url: \"\".concat(_this3.APIroot, \"/form/_\").concat(_this3.currCategoryID, \"/flat\"),\n          success: function success(res) {\n            return resolve(res);\n          },\n          error: function error(err) {\n            return reject(err);\n          }\n        });\n      });\n    },\n    preventSelectionIfFormatNone: function preventSelectionIfFormatNone(event) {\n      if (event.target.id.toLowerCase() === \"indicatortype\") {\n        if (this.format === '' && (this.required === true || this.is_sensitive === true)) {\n          this.required = false;\n          this.is_sensitive = false;\n          alert(\"You can't mark a field as sensitive or required if the Input Format is \\\"None\\\".\");\n        }\n      } else {\n        if (this.format === '' && event.target.checked === true) {\n          event.target.checked = false;\n          var id = event.target.id;\n          var text = id === 'sensitive' ? 'sensitive' : 'required';\n          alert(\"You can't mark a field as \".concat(text, \" if the Input Format is \\\"None\\\".\"));\n        }\n      }\n    },\n    onSave: function onSave() {\n      var _this4 = this;\n\n      console.log('clicked indicator-editing save'); //check for advanced text formatting for name field\n\n      var elTrumbow = document.querySelector('.trumbowyg-editor');\n\n      if (elTrumbow !== undefined && elTrumbow !== null) {\n        this.name = elTrumbow.innerHTML;\n      }\n\n      var indicatorEditingUpdates = [];\n\n      if (this.isEditingModal) {\n        var _this$ajaxIndicatorBy15, _this$ajaxIndicatorBy16, _this$ajaxIndicatorBy17;\n\n        /*  CALLS FOR EDITTING AN EXISTING QUESTION */\n        console.log('updating an existing indicator: ID#', this.currIndicatorID);\n        var nameChanged = this.name !== this.ajaxIndicatorByID[this.currIndicatorID].name;\n        var descriptionChanged = this.description !== this.ajaxIndicatorByID[this.currIndicatorID].description;\n        var options = (_this$ajaxIndicatorBy15 = this.ajaxIndicatorByID[this.currIndicatorID]) !== null && _this$ajaxIndicatorBy15 !== void 0 && _this$ajaxIndicatorBy15.options ? '\\n' + ((_this$ajaxIndicatorBy16 = this.ajaxIndicatorByID[this.currIndicatorID]) === null || _this$ajaxIndicatorBy16 === void 0 ? void 0 : (_this$ajaxIndicatorBy17 = _this$ajaxIndicatorBy16.options) === null || _this$ajaxIndicatorBy17 === void 0 ? void 0 : _this$ajaxIndicatorBy17.join('\\n')) : '';\n        var fullFormatChanged = this.fullFormatForPost !== this.ajaxIndicatorByID[this.currIndicatorID].format + options;\n        var defaultChanged = this.defaultValue !== this.ajaxIndicatorByID[this.currIndicatorID][\"default\"];\n        var requiredChanged = +this.required !== parseInt(this.ajaxIndicatorByID[this.currIndicatorID].required);\n        var sensitiveChanged = +this.is_sensitive !== parseInt(this.ajaxIndicatorByID[this.currIndicatorID].is_sensitive);\n        var sortChanged = this.sort !== parseInt(this.ajaxIndicatorByID[this.currIndicatorID].sort);\n        var parentIDChanged = this.parentID !== this.ajaxIndicatorByID[this.currIndicatorID].parentID;\n        var shouldArchive = this.archived === true;\n        var shouldDelete = this.deleted === true;\n        console.log(nameChanged, descriptionChanged, fullFormatChanged, defaultChanged, requiredChanged, sensitiveChanged, sortChanged, parentIDChanged, shouldArchive, shouldDelete);\n\n        if (nameChanged) {\n          indicatorEditingUpdates.push($.ajax({\n            type: 'POST',\n            url: \"\".concat(this.APIroot, \"formEditor/\").concat(this.currIndicatorID, \"/name\"),\n            data: {\n              name: this.name,\n              CSRFToken: this.CSRFToken\n            },\n            success: function success() {\n              return console.log('name success');\n            },\n            error: function error(err) {\n              return console.log('ind name post err', err);\n            }\n          }));\n        }\n\n        if (descriptionChanged) {\n          indicatorEditingUpdates.push($.ajax({\n            type: 'POST',\n            url: \"\".concat(this.APIroot, \"formEditor/\").concat(this.currIndicatorID, \"/description\"),\n            data: {\n              description: this.description,\n              CSRFToken: this.CSRFToken\n            },\n            success: function success() {\n              return console.log('description success');\n            },\n            error: function error(err) {\n              return console.log('ind desciption post err', err);\n            }\n          }));\n        }\n\n        if (fullFormatChanged) {\n          indicatorEditingUpdates.push($.ajax({\n            type: 'POST',\n            url: \"\".concat(this.APIroot, \"formEditor/\").concat(this.currIndicatorID, \"/format\"),\n            data: {\n              format: this.fullFormatForPost,\n              CSRFToken: this.CSRFToken\n            },\n            success: function success() {},\n            error: function error(err) {\n              return console.log('ind format post err', err);\n            }\n          }));\n        }\n\n        if (defaultChanged) {\n          indicatorEditingUpdates.push($.ajax({\n            type: 'POST',\n            url: \"\".concat(this.APIroot, \"formEditor/\").concat(this.currIndicatorID, \"/default\"),\n            data: {\n              \"default\": this.defaultValue,\n              CSRFToken: this.CSRFToken\n            },\n            success: function success() {},\n            error: function error(err) {\n              return console.log('ind default value post err', err);\n            }\n          }));\n        }\n\n        if (requiredChanged) {\n          indicatorEditingUpdates.push($.ajax({\n            type: 'POST',\n            url: \"\".concat(this.APIroot, \"formEditor/\").concat(this.currIndicatorID, \"/required\"),\n            data: {\n              required: this.required ? 1 : 0,\n              CSRFToken: this.CSRFToken\n            },\n            success: function success() {},\n            error: function error(err) {\n              return console.log('ind required post err', err);\n            }\n          }));\n        }\n\n        if (sensitiveChanged) {\n          indicatorEditingUpdates.push($.ajax({\n            type: 'POST',\n            url: \"\".concat(this.APIroot, \"formEditor/\").concat(this.currIndicatorID, \"/sensitive\"),\n            data: {\n              is_sensitive: this.is_sensitive ? 1 : 0,\n              CSRFToken: this.CSRFToken\n            },\n            success: function success() {},\n            error: function error(err) {\n              return console.log('ind is_sensitive post err', err);\n            }\n          }));\n        }\n\n        if (sensitiveChanged && +this.is_sensitive === 1) {\n          indicatorEditingUpdates.push($.ajax({\n            type: 'POST',\n            url: \"\".concat(this.APIroot, \"formEditor/formNeedToKnow\"),\n            data: {\n              needToKnow: 1,\n              categoryID: this.formID,\n              CSRFToken: this.CSRFToken\n            },\n            success: function success() {\n              _this4.updateCategoriesProperty(_this4.formID, 'needToKnow', 1);\n            },\n            error: function error(err) {\n              return console.log('set form need to know post err', err);\n            }\n          }));\n        }\n\n        if (shouldArchive) {\n          indicatorEditingUpdates.push($.ajax({\n            type: 'POST',\n            url: \"\".concat(this.APIroot, \"formEditor/\").concat(this.currIndicatorID, \"/disabled\"),\n            data: {\n              disabled: 1,\n              //can't undelete from there so this should be fine\n              CSRFToken: this.CSRFToken\n            },\n            success: function success() {},\n            error: function error(err) {\n              return console.log('ind disabled (archive) post err', err);\n            }\n          }));\n        }\n\n        if (shouldDelete) {\n          indicatorEditingUpdates.push($.ajax({\n            type: 'POST',\n            url: \"\".concat(this.APIroot, \"formEditor/\").concat(this.currIndicatorID, \"/disabled\"),\n            data: {\n              disabled: 2,\n              CSRFToken: this.CSRFToken\n            },\n            success: function success() {},\n            error: function error(err) {\n              return console.log('ind disabled (deletion) post err', err);\n            }\n          }));\n        }\n\n        if (parentIDChanged && this.parentID !== this.currIndicatorID) {\n          indicatorEditingUpdates.push($.ajax({\n            type: 'POST',\n            url: \"\".concat(this.APIroot, \"formEditor/\").concat(this.currIndicatorID, \"/parentID\"),\n            data: {\n              parentID: this.parentID,\n              CSRFToken: this.CSRFToken\n            },\n            success: function success() {},\n            error: function error(err) {\n              return console.log('ind parentID post err', err);\n            }\n          }));\n        }\n\n        if (sortChanged) {\n          //NOTE: sort is also handled with drag drop in index, might rm here\n          indicatorEditingUpdates.push($.ajax({\n            type: 'POST',\n            url: \"\".concat(this.APIroot, \"formEditor/\").concat(this.currIndicatorID, \"/sort\"),\n            data: {\n              sort: this.sort,\n              CSRFToken: this.CSRFToken\n            },\n            success: function success() {},\n            error: function error(err) {\n              return console.log('ind sort post err', err);\n            }\n          }));\n        }\n      } else {\n        /* CALLS FOR CREATING A NEW QUESTION */\n        console.log('creating a new indicator on form ', this.formID);\n        var nonSectionSelector = \"#drop_area_parent_\".concat(this.parentID, \" > li\"); //set default sort to last question in current depth\n\n        var sortVal = this.parentID === null ? this.ajaxFormByCategoryID.length : //new sections/pages\n        Array.from(document.querySelectorAll(nonSectionSelector)).length; //new questions in existing sections\n\n        if (+this.is_sensitive === 1) {\n          indicatorEditingUpdates.push($.ajax({\n            type: 'POST',\n            url: \"\".concat(this.APIroot, \"formEditor/formNeedToKnow\"),\n            data: {\n              needToKnow: 1,\n              categoryID: this.formID,\n              CSRFToken: this.CSRFToken\n            },\n            success: function success() {\n              _this4.updateCategoriesProperty(_this4.formID, 'needToKnow', 1);\n            },\n            error: function error(err) {\n              return console.log('set form need to know post err', err);\n            }\n          }));\n        }\n\n        indicatorEditingUpdates.push($.ajax({\n          type: 'POST',\n          url: \"\".concat(this.APIroot, \"formEditor/newIndicator\"),\n          data: {\n            name: this.name,\n            format: this.fullFormatForPost,\n            description: this.description,\n            \"default\": this.defaultValue,\n            parentID: this.parentID,\n            categoryID: this.formID,\n            required: this.required ? 1 : 0,\n            is_sensitive: this.is_sensitive ? 1 : 0,\n            sort: sortVal,\n            CSRFToken: this.CSRFToken\n          },\n          success: function success() {},\n          error: function error(err) {\n            return console.log('error posting new question', err);\n          }\n        }));\n      }\n\n      Promise.all(indicatorEditingUpdates).then(function (res) {\n        console.log('promise all:', indicatorEditingUpdates, res);\n\n        _this4.closeFormDialog();\n\n        if (res.length > 0) {\n          vueData.updateIndicatorList = true; //NOTE: flags IFTHEN app for updates\n\n          var subnodeIndID = (_this4.archived === true || _this4.deleted === true) && _this4.currIndicatorID === _this4.selectedNodeIndicatorID ? null : _this4.selectedNodeIndicatorID;\n\n          _this4.selectNewCategory(_this4.formID, _this4.currSubformID !== null, subnodeIndID);\n        }\n      });\n    },\n    radioBehavior: function radioBehavior(event) {\n      var targetId = event.target.id;\n\n      if (targetId.toLowerCase() === 'archived' && this.deleted) {\n        document.getElementById('deleted').checked = false;\n        this.deleted = false;\n      }\n\n      if (targetId.toLowerCase() === 'deleted' && this.archived) {\n        document.getElementById('archived').checked = false;\n        this.archived = false;\n      }\n    },\n    appAddCell: function appAddCell() {\n      console.log('app added cell');\n      this.gridJSON.push({});\n    },\n    gridDropdown: function gridDropdown(dropDownOptions) {\n      //TODO: edit\n      if (dropDownOptions == null || dropDownOptions.length === 0) {\n        return dropDownOptions;\n      }\n\n      var uniqueNames = dropDownOptions.split(\"\\n\");\n      var returnArray = [];\n      uniqueNames = uniqueNames.filter(function (elem, index, self) {\n        return index == self.indexOf(elem);\n      });\n      $.each(uniqueNames, function (i, el) {\n        if (el === \"no\") {\n          uniqueNames[i] = \"No\";\n        }\n\n        returnArray.push(uniqueNames[i]);\n      });\n      return returnArray;\n    },\n    updateGridJSON: function updateGridJSON() {\n      //FIX: TODO: rework\n      var gridJSON = [];\n      var t = this; //gather column names and column types. if type is dropdown, adds property.options\n\n      $(this.gridBodyElement).find('div.cell').each(function () {\n        var properties = new Object();\n\n        if ($(this).children('input:eq(0)').val() === 'undefined') {\n          properties.name = 'No title';\n        } else {\n          properties.name = $(this).children('input:eq(0)').val();\n        }\n\n        properties.id = $(this).attr('id');\n        properties.type = $(this).find('select').val();\n\n        if (properties.type !== undefined && properties.type !== null) {\n          if (properties.type.toLowerCase() === 'dropdown') {\n            properties.options = t.gridDropdown($(this).find('textarea').val().replace(/,/g, \"\"));\n          }\n        } else {\n          properties.type = 'textarea';\n        }\n\n        gridJSON.push(properties);\n      });\n      this.gridJSON = gridJSON;\n    },\n    formatIndicatorMultiAnswer: function formatIndicatorMultiAnswer() {\n      var optionsToArray = this.multiOptionValue.split('\\n');\n      optionsToArray = optionsToArray.map(function (option) {\n        return option.trim();\n      });\n      optionsToArray = optionsToArray.map(function (option) {\n        return option === 'no' ? 'No' : option;\n      }); //this checks specifically for lower case values\n\n      var uniqueArray = Array.from(new Set(optionsToArray));\n      return uniqueArray.join('\\n');\n    },\n    //jQuery plugins for WYSWYG. from mod_form as is\n    advNameEditorClick: function advNameEditorClick() {\n      $('#advNameEditor').css('display', 'none');\n      $('#rawNameEditor').css('display', 'block');\n      $('#name').trumbowyg({\n        resetCss: true,\n        btns: ['formatting', 'bold', 'italic', 'underline', '|', 'unorderedList', 'orderedList', '|', 'link', '|', 'foreColor', '|', 'justifyLeft', 'justifyCenter', 'justifyRight']\n      });\n      $('.trumbowyg-box').css({\n        'min-height': '130px'\n      });\n      $('.trumbowyg-editor, .trumbowyg-texteditor').css({\n        'min-height': '100px',\n        'height': '100px'\n      });\n    },\n    rawNameEditorClick: function rawNameEditorClick() {\n      $('#advNameEditor').css('display', 'block');\n      $('#rawNameEditor').css('display', 'none');\n      $('#name').trumbowyg('destroy');\n    }\n  },\n  template: \"<div style=\\\"min-width: 500px;\\\">\\n        <fieldset>\\n            <legend>Field Name</legend>\\n            <textarea id=\\\"name\\\" v-model=\\\"name\\\" style=\\\"width: 99%; margin-bottom: 0.4em; height: 90px;\\\">{{name}}</textarea>\\n            <button class=\\\"buttonNorm\\\" id=\\\"rawNameEditor\\\" @click=\\\"rawNameEditorClick\\\" style=\\\"display: none;\\\">Show formatted code</button>\\n            <button class=\\\"buttonNorm\\\" id=\\\"advNameEditor\\\" @click=\\\"advNameEditorClick\\\">Advanced Formatting</button>\\n        </fieldset>\\n        <fieldset>\\n            <legend>Short Label (Describe this field in 1-2 words)</legend>\\n            <input type=\\\"text\\\" id=\\\"description\\\" v-model=\\\"description\\\" maxlength=\\\"50\\\" />\\n        </fieldset>\\n        <fieldset>\\n            <legend>Input Format</legend>\\n            <select id=\\\"indicatorType\\\" title=\\\"Select a Format\\\" v-model=\\\"format\\\" @change=\\\"preventSelectionIfFormatNone\\\">\\n                <option value=\\\"\\\">None</option>\\n                <option v-for=\\\"kv in Object.entries(formats)\\\" \\n                :value=\\\"kv[0]\\\" :selected=\\\"kv[0]===format\\\" :key=\\\"kv[0]\\\">{{ kv[1] }}</option>\\n            </select><br/>\\n            <div v-if=\\\"format==='checkbox'\\\" id=\\\"container_indicatorSingleAnswer\\\">\\n                Text for checkbox:<br /> \\n                <input type=\\\"text\\\" id=\\\"indicatorSingleAnswer\\\" v-model=\\\"singleOptionValue\\\"/>\\n            </div>\\n            <div v-if=\\\"isMultiOptionQuestion\\\" id=\\\"container_indicatorMultiAnswer\\\">\\n                One option per line:<br />\\n                <textarea id=\\\"indicatorMultiAnswer\\\" v-model=\\\"multiOptionValue\\\" style=\\\"width: 80%; height: 150px\\\">\\n                </textarea>\\n            </div>\\n            <div v-if=\\\"format==='grid'\\\" id=\\\"container_indicatorGrid\\\">\\n                <span style=\\\"position: absolute; color: transparent\\\" aria-atomic=\\\"true\\\" aria-live=\\\"polite\\\" id=\\\"tableStatus\\\" role=\\\"status\\\"></span>\\n                <br/>\\n                <button class=\\\"buttonNorm\\\" id=\\\"addColumnBtn\\\" title=\\\"Add column\\\" alt=\\\"Add column\\\" aria-label=\\\"grid input add column\\\" @click=\\\"appAddCell\\\">\\n                    <img src=\\\"../../libs/dynicons/?img=list-add.svg&w=16\\\" style=\\\"height: 25px;\\\"/>\\n                    Add column\\n                </button>\\n                <br/><br/>\\n                Columns:\\n                <div border=\\\"1\\\" style=\\\"overflow-x: scroll; max-width: 100%;\\\">\\n                <grid-cell v-if=\\\"gridJSON.length===0\\\" :column=\\\"1\\\" :cell=\\\"new Object()\\\" key=\\\"initial_cell\\\"></grid-cell>\\n                <grid-cell v-for=\\\"(c,i) in gridJSON\\\" :column=\\\"i+1\\\" :cell=\\\"c\\\" :key=\\\"c.id\\\"></grid-cell>\\n                </div>\\n            </div>               \\n            <fieldset>\\n                <legend>Default Answer</legend>\\n                <textarea id=\\\"defaultValue\\\" v-model=\\\"defaultValue\\\" style=\\\"width: 50%;\\\"></textarea>\\n            </fieldset>\\n        </fieldset>\\n        <fieldset><legend>Attributes</legend>\\n            <table>\\n                <tr>\\n                    <td>Required</td>\\n                    <td>\\n                        <input id=\\\"required\\\" v-model=\\\"required\\\" name=\\\"required\\\" type=\\\"checkbox\\\" \\n                        @click=\\\"preventSelectionIfFormatNone\\\" @keypress.enter=\\\"preventSelectionIfFormatNone\\\"/>\\n                    </td>\\n                </tr>\\n                <tr>\\n                    <td>Sensitive Data (PHI/PII)</td>\\n                    <td>\\n                        <input id=\\\"sensitive\\\" v-model=\\\"is_sensitive\\\" name=\\\"sensitive\\\" type=\\\"checkbox\\\" \\n                        @click=\\\"preventSelectionIfFormatNone\\\" @keypress.enter=\\\"preventSelectionIfFormatNone\\\"/>\\n                    </td>\\n                </tr>\\n                <tr>\\n                    <td>Sort Priority</td>\\n                    <td><input id=\\\"sort\\\" v-model.number=\\\"sort\\\" name=\\\"sort\\\" type=\\\"number\\\" style=\\\"width: 50px\\\" /></td>\\n                </tr>\\n                <template v-if=\\\"isEditingModal\\\">\\n                <tr>\\n                    <td>Parent Question ID</td>\\n                    <td colspan=\\\"2\\\">\\n                        <div id=\\\"container_parentID\\\">\\n                            <select v-model.number=\\\"parentID\\\">\\n                                <template v-if=\\\"isLoadingParentIDs===false\\\" v-for=\\\"kv in Object.entries(listForParentIDs)\\\">\\n                                    <option v-if=\\\"currIndicatorID !== parseInt(kv[0])\\\" :value=\\\"kv[0]\\\" :key=\\\"'parent'+kv[0]\\\">{{kv[0]}}: {{truncateText(kv[1]['1'].name)}}</option>\\n                                </template>\\n                            </select>\\n                        </div>\\n                    </td>\\n                </tr>\\n                <tr>\\n                    <td>Archive</td>\\n                    <td colspan=\\\"1\\\">\\n                        <input id=\\\"archived\\\" v-model=\\\"archived\\\" name=\\\"disable_or_delete\\\" type=\\\"checkbox\\\" @change=\\\"radioBehavior\\\"/>\\n                    </td>\\n                    <td style=\\\"width: 275px; position: relative;\\\">\\n                        <span v-show=\\\"archived\\\" id=\\\"archived-warning\\\" style=\\\"color: #d00; font-size: 80%; position: absolute; top:-6px; left: -18px;\\\">\\n                        This field will be archived.  It can be<br/>re-enabled by using Restore Fields.</span>\\n                    </td>\\n                </tr>\\n                <tr>\\n                    <td>Delete</td>\\n                    <td colspan=\\\"1\\\">\\n                        <input id=\\\"deleted\\\" v-model=\\\"deleted\\\" name=\\\"disable_or_delete\\\" type=\\\"checkbox\\\" @change=\\\"radioBehavior\\\" />\\n                    </td>\\n                    <td style=\\\"width: 275px; position: relative;\\\">\\n                        <span v-show=\\\"deleted\\\" id=\\\"deletion-warning\\\" style=\\\"color: #d00; font-size: 80%; position: absolute; top:-6px; left: -18px;\\\">\\n                        Deleted items can only be re-enabled<br/>within 30 days by using Restore Fields.</span>\\n                    </td>\\n                </tr>\\n                </template>\\n            </table>\\n        </fieldset>\\n    </div>\"\n});\n\n//# sourceURL=webpack://leaf/./libs/js/LEAF/form_editor_vue_src/components/dialog_content/IndicatorEditing.js?");

/***/ }),

/***/ "./libs/js/LEAF/form_editor_vue_src/components/dialog_content/NewFormDialog.js":
/*!*************************************************************************************!*\
  !*** ./libs/js/LEAF/form_editor_vue_src/components/dialog_content/NewFormDialog.js ***!
  \*************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({\n  data: function data() {\n    return {\n      categoryName: '',\n      categoryDescription: ''\n    };\n  },\n  inject: ['APIroot', 'CSRFToken', 'currCategoryID', //NOTE: currCatID is null on the card browser page (Create Form), but has the main form value if user clicks Add Internal Use\n  'addNewCategory', 'selectNewCategory', 'closeFormDialog'],\n  mounted: function mounted() {\n    document.getElementById('name').focus();\n  },\n  computed: {\n    isSubform: function isSubform() {\n      return this.currCategoryID !== null;\n    },\n    nameChars: function nameChars() {\n      return this.categoryName.length;\n    },\n    descrChars: function descrChars() {\n      return this.categoryDescription.length;\n    }\n  },\n  methods: {\n    onSave: function onSave() {\n      var _this = this;\n\n      console.log('clicked save for new form modal');\n      $.ajax({\n        type: 'POST',\n        url: \"\".concat(this.APIroot, \"formEditor/new\"),\n        data: {\n          name: this.categoryName,\n          description: this.categoryDescription,\n          parentID: this.currCategoryID || '',\n          CSRFToken: this.CSRFToken\n        },\n        success: function success(res) {\n          var newCatID = res;\n          var temp = {};\n          temp.categoryID = newCatID;\n          temp.categoryName = _this.categoryName;\n          temp.categoryDescription = _this.categoryDescription;\n          temp.workflowID = 0;\n          temp.needToKnow = 0;\n          temp.parentID = _this.currCategoryID || '';\n\n          _this.addNewCategory(newCatID, temp);\n\n          _this.selectNewCategory(newCatID, _this.isSubform);\n\n          _this.closeFormDialog();\n        },\n        error: function error(err) {\n          console.log('error posting new form', err);\n          reject(err);\n        }\n      });\n    }\n  },\n  template: \"<div>\\n            <div style=\\\"display: flex; justify-content: space-between; padding: 0.25em 0\\\">\\n                <div><b>Form Name</b><span style=\\\"font-size:80%\\\"> (up to 50 characters)</span></div>\\n                <div>{{nameChars}}</div>\\n            </div>\\n            <input id=\\\"name\\\" type=\\\"text\\\" maxlength=\\\"50\\\" v-model=\\\"categoryName\\\" style=\\\"width: 100%;\\\" />\\n\\n            <div style=\\\"display: flex; justify-content: space-between; padding: 0.25em 0; margin-top: 1em;\\\">\\n                <div><b>Form Description</b><span style=\\\"font-size:80%\\\"> (up to 255 characters)</span></div>\\n                <div>{{descrChars}}</div>\\n            </div>\\n            <textarea id=\\\"description\\\" maxlength=\\\"255\\\" v-model=\\\"categoryDescription\\\" \\n                style=\\\"width: 100%; height: 90px;\\\">\\n            </textarea>\\n        </div>\"\n});\n\n//# sourceURL=webpack://leaf/./libs/js/LEAF/form_editor_vue_src/components/dialog_content/NewFormDialog.js?");

/***/ }),

/***/ "./libs/js/LEAF/form_editor_vue_src/components/dialog_content/StapleFormDialog.js":
/*!****************************************************************************************!*\
  !*** ./libs/js/LEAF/form_editor_vue_src/components/dialog_content/StapleFormDialog.js ***!
  \****************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({\n  data: function data() {\n    return {\n      catIDtoStaple: '',\n      formID: this.currSubformID || this.currCategoryID //NOTE: subforms can have staples.  subformID will be null if the selected form is not a subform.  currCategoryID will always be a main form.\n\n    };\n  },\n  inject: ['APIroot', 'CSRFToken', 'truncateText', 'categories', 'currCategoryID', 'currSubformID', 'ajaxSelectedCategoryStapled', 'getStapledFormsByCurrentCategory', 'closeFormDialog'],\n  mounted: function mounted() {\n    document.getElementById('select-form-to-staple').focus();\n  },\n  computed: {\n    mergeableForms: function mergeableForms() {\n      var _this = this;\n\n      var mergeable = [];\n\n      var _loop = function _loop(c) {\n        var WF_ID = parseInt(_this.categories[c].workflowID);\n        var catID = _this.categories[c].categoryID;\n        var parID = _this.categories[c].parentID;\n\n        var isNotAlreadyMerged = _this.ajaxSelectedCategoryStapled.every(function (form) {\n          return form.stapledCategoryID !== catID;\n        });\n\n        if (WF_ID === 0 && catID !== _this.formID && parID === '' && isNotAlreadyMerged) {\n          mergeable.push(_objectSpread({}, _this.categories[c]));\n        }\n      };\n\n      for (var c in this.categories) {\n        _loop(c);\n      }\n\n      return mergeable;\n    }\n  },\n  methods: {\n    unmergeForm: function unmergeForm(stapledCatID) {\n      var _this2 = this;\n\n      $.ajax({\n        type: 'DELETE',\n        url: \"\".concat(this.APIroot, \"formEditor/_\").concat(this.formID, \"/stapled/_\").concat(stapledCatID, \"?\") + $.param({\n          CSRFToken: this.CSRFToken\n        }),\n        success: function success(res) {\n          _this2.getStapledFormsByCurrentCategory();\n        },\n        error: function error(err) {\n          return console.log(err);\n        }\n      });\n    },\n    onSave: function onSave() {\n      var _this3 = this;\n\n      if (this.catIDtoStaple !== '') {\n        $.ajax({\n          type: 'POST',\n          url: \"\".concat(this.APIroot, \"formEditor/_\").concat(this.formID, \"/stapled\"),\n          data: {\n            CSRFToken: this.CSRFToken,\n            stapledCategoryID: this.catIDtoStaple\n          },\n          success: function success(res) {\n            _this3.closeFormDialog();\n\n            _this3.getStapledFormsByCurrentCategory();\n\n            if (res !== 1) {\n              alert(res);\n            }\n          },\n          error: function error(err) {\n            return console.log(err);\n          },\n          cache: false\n        });\n      }\n    }\n  },\n  template: \"<div>\\n        <p>Stapled forms will show up on the same page as the primary form</p>\\n        <div id=\\\"mergedForms\\\">\\n            <ul style=\\\"list-style-type:none; padding: 0; min-height: 50px;\\\">\\n                <li v-for=\\\"s in ajaxSelectedCategoryStapled\\\">\\n                    {{truncateText(s.categoryName) || 'Untitled'}}\\n                    <button \\n                        style=\\\"margin-left: 0.25em; background-color: transparent; color:#a00; padding: 0.1em 0.2em; border: 0; border-radius:3px;\\\" \\n                        @click=\\\"unmergeForm(s.categoryID)\\\" :title=\\\"'remove ' + s.categoryName || 'Untitled'\\\">\\n                        <b>[ Remove ]</b>\\n                    </button>\\n                </li>\\n            </ul>\\n        </div><hr/>\\n        <div style=\\\"min-height: 50px; margin: 1em 0;\\\">\\n            <div style=\\\"margin-bottom: 0.2em;\\\">Select a form to merge</div>\\n            <template v-if=\\\"mergeableForms.length > 0\\\">\\n            <select v-model=\\\"catIDtoStaple\\\" title=\\\"select a form to merge\\\" id=\\\"select-form-to-staple\\\">\\n                <option value=\\\"\\\">Select a Form</option>\\n                <option v-for=\\\"f in mergeableForms\\\" :value=\\\"f.categoryID\\\" :key=\\\"'staple_'+f.categoryID\\\">{{truncateText(f.categoryName) || 'Untitled'}}</option>\\n            </select>\\n            </template>\\n            <div v-else>There are no available forms to merge</div>\\n        </div>\\n    </div>\"\n});\n\n//# sourceURL=webpack://leaf/./libs/js/LEAF/form_editor_vue_src/components/dialog_content/StapleFormDialog.js?");

/***/ }),

/***/ "./libs/js/LEAF/form_editor_vue_src/components/form_view/FormContentView.js":
/*!**********************************************************************************!*\
  !*** ./libs/js/LEAF/form_editor_vue_src/components/form_view/FormContentView.js ***!
  \**********************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _FormViewController_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./FormViewController.js */ \"./libs/js/LEAF/form_editor_vue_src/components/form_view/FormViewController.js\");\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({\n  data: function data() {\n    return {\n      gridInstances: {}\n    };\n  },\n  props: {\n    orgchartPath: {\n      type: String\n    }\n  },\n  provide: function provide() {\n    var _this = this;\n\n    return {\n      gridInstances: Vue.computed(function () {\n        return _this.gridInstances;\n      }),\n      updateGridInstances: this.updateGridInstances,\n      orgchartPath: this.orgchartPath\n    };\n  },\n  components: {\n    FormViewController: _FormViewController_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"]\n  },\n  inject: ['currCategoryID', 'currSubformID', 'currentCategorySelection', 'appIsLoadingCategoryInfo', 'editPropertiesClicked', 'editPermissionsClicked'],\n  computed: {\n    formName: function formName() {\n      return XSSHelpers.stripAllTags(this.currentCategorySelection.categoryName) || 'Untitled';\n    },\n    formCatID: function formCatID() {\n      return this.currentCategorySelection.categoryID;\n    },\n    categoryDescription: function categoryDescription() {\n      return XSSHelpers.stripAllTags(this.currentCategorySelection.categoryDescription);\n    },\n    workflow: function workflow() {\n      return parseInt(this.currentCategorySelection.workflowID) === 0 ? \"<span style=\\\"color: red\\\">No workflow. Users will not be able to select this form.</span>\" : \"\".concat(this.currentCategorySelection.description, \" (ID #\").concat(this.currentCategorySelection.workflowID, \")\");\n    },\n    isSubForm: function isSubForm() {\n      return !this.currentCategorySelection.parentID === '';\n    },\n    isNeedToKnow: function isNeedToKnow() {\n      return parseInt(this.currentCategorySelection.needToKnow) === 1;\n    }\n  },\n  methods: {\n    updateGridInstances: function updateGridInstances(options, indicatorID, series) {\n      this.gridInstances[indicatorID] = new gridInput(options, indicatorID, series, ''); //NOTE: global LEAF class for grid format\n    }\n  },\n  template: \"<div id=\\\"form_content_view\\\">\\n        <!-- NOTE: TOP INFO PANEL -->\\n        <div id=\\\"edit-properties-panel\\\">\\n            <div>\\n                <h3 :aria-label=\\\"currCategoryID\\\" :title=\\\"'CategoryID: ' + currCategoryID\\\">{{formName}}</h3>\\n                <div style=\\\"padding: 0.5em 0\\\">{{categoryDescription}}</div>\\n                <span v-if=\\\"!isSubForm\\\">Workflow: <b v-html=\\\"workflow\\\"></b></span><br />\\n                <span v-if=\\\"!isSubForm\\\">Need to Know mode: <b :style=\\\"{color: isNeedToKnow ? '#e00' : 'black'}\\\">{{ isNeedToKnow ? 'On' : 'Off' }}</b></span>\\n            </div>\\n\\n            <div style=\\\"flex: 0 0 140px;\\\">\\n                <div tabindex=\\\"0\\\" id=\\\"editFormData\\\" class=\\\"buttonNorm\\\"  \\n                    @click=\\\"editPropertiesClicked\\\" @keyup.enter=\\\"editPropertiesClicked\\\"\\n                    style=\\\"margin-bottom:0.5em;\\\">Edit Properties</div>\\n\\n                <div tabindex=\\\"0\\\" id=\\\"editFormPermissions\\\" class=\\\"buttonNorm\\\"\\n                    @click=\\\"editPermissionsClicked\\\" @keyup.enter=\\\"editPermissionsClicked\\\">Edit Collaborators</div>\\n            </div>\\n            <div class=\\\"form-id-label\\\">ID: {{currCategoryID}}\\n            <span v-if=\\\"currSubformID!==null\\\">(subform {{currSubformID}})</span>\\n            </div>\\n        </div>\\n\\n        <!-- NOTE: FORM AREA -->\\n        <div v-if=\\\"appIsLoadingCategoryInfo\\\" style=\\\"border: 2px solid black; text-align: center; \\n            font-size: 24px; font-weight: bold; padding: 16px;\\\">\\n            Loading... \\n            <img src=\\\"../images/largespinner.gif\\\" alt=\\\"loading...\\\" />\\n        </div>\\n        <template v-else>\\n        <form-view-controller></form-view-controller>\\n        </template>\\n    </div>\"\n});\n\n//# sourceURL=webpack://leaf/./libs/js/LEAF/form_editor_vue_src/components/form_view/FormContentView.js?");

/***/ }),

/***/ "./libs/js/LEAF/form_editor_vue_src/components/form_view/FormEditingDisplay.js":
/*!*************************************************************************************!*\
  !*** ./libs/js/LEAF/form_editor_vue_src/components/form_view/FormEditingDisplay.js ***!
  \*************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _FormatPreview__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./FormatPreview */ \"./libs/js/LEAF/form_editor_vue_src/components/form_view/FormatPreview.js\");\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({\n  name: 'FormEditingDisplay',\n  //NOTE: this will replace previous 'print-subindicators' component\n  props: {\n    depth: Number,\n    formNode: Object,\n    index: Number\n  },\n  components: {\n    FormatPreview: _FormatPreview__WEBPACK_IMPORTED_MODULE_0__[\"default\"]\n  },\n  inject: ['truncateText', 'newQuestion', 'editQuestion', 'openAdvancedOptionsDialog', 'editIndicatorPrivileges', 'gridInstances', 'updateGridInstances', 'listItems', 'allListItemsAreAdded', 'allowedConditionChildFormats', 'showToolbars'],\n  methods: {\n    ifthenUpdateIndicatorID: function ifthenUpdateIndicatorID(indicatorID) {\n      vueData.indicatorID = parseInt(indicatorID); //NOTE: TODO: possible better way\n\n      document.getElementById('btn-vue-update-trigger').dispatchEvent(new Event(\"click\"));\n    }\n  },\n  computed: {\n    hasChildNode: function hasChildNode() {\n      var child = this.formNode.child;\n      return child !== null && Object.keys(child).length > 0;\n    },\n    children: function children() {\n      var eles = [];\n\n      if (this.hasChildNode) {\n        for (var c in this.formNode.child) {\n          eles.push(this.formNode.child[c]);\n        }\n\n        eles = eles.sort(function (a, b) {\n          return a.sort - b.sort;\n        });\n      }\n\n      return eles;\n    },\n    isHeaderLocation: function isHeaderLocation() {\n      var ID = parseInt(this.formNode.indicatorID);\n      var item = this.listItems[ID];\n      return this.allListItemsAreAdded && (item.parentID === null || item.newParentID === null);\n    },\n    sensitiveImg: function sensitiveImg() {\n      return this.sensitive ? \"<img src=\\\"../../libs/dynicons/?img=eye_invisible.svg&amp;w=16\\\" alt=\\\"\\\"\\n                    title=\\\"This field is sensitive\\\" />\" : '';\n    },\n    conditionallyShown: function conditionallyShown() {\n      var isConditionalShow = false;\n      console.log('check 1');\n\n      if (!this.isHeaderLocation && this.formNode.conditions !== null && this.formNode.conditions !== '') {\n        console.log('check 2');\n        var conditions = JSON.parse(this.formNode.conditions) || [];\n\n        if (conditions.some(function (c) {\n          var _c$selectedOutcome;\n\n          return ((_c$selectedOutcome = c.selectedOutcome) === null || _c$selectedOutcome === void 0 ? void 0 : _c$selectedOutcome.toLowerCase()) === 'show';\n        })) {\n          isConditionalShow = true;\n        }\n      }\n\n      return isConditionalShow;\n    },\n    conditionsAllowed: function conditionsAllowed() {\n      var _this$formNode$format;\n\n      return !this.isHeaderLocation && this.allowedConditionChildFormats.includes((_this$formNode$format = this.formNode.format) === null || _this$formNode$format === void 0 ? void 0 : _this$formNode$format.toLowerCase());\n    },\n    indicatorName: function indicatorName() {\n      //TODO: and label??\n      var contentRequired = this.required ? \"<span class=\\\"input-required-sensitive\\\">*&nbsp;Required</span>\" : '';\n      var contentSensitive = this.sensitive ? \"<span class=\\\"input-required-sensitive\\\">*&nbsp;Sensitive</span>\" : '';\n      var name = this.formNode.name.trim() !== '' ? this.formNode.name.trim() : '[ blank ]';\n      name = \"\".concat(name).concat(contentRequired).concat(contentSensitive, \"  &nbsp;\").concat(this.sensitiveImg);\n      return name;\n    },\n    bgColor: function bgColor() {\n      return \"rgb(\".concat(255 - 2 * this.depth, \",\").concat(255 - 2 * this.depth, \",\").concat(255 - 2 * this.depth, \")\");\n    },\n    suffix: function suffix() {\n      return \"\".concat(this.formNode.indicatorID, \"_\").concat(this.formNode.series);\n    },\n    required: function required() {\n      return parseInt(this.formNode.required) === 1;\n    },\n    sensitive: function sensitive() {\n      return parseInt(this.formNode.is_sensitive) === 1;\n    }\n  },\n  template: \"<div class=\\\"printResponse\\\" :id=\\\"'xhrIndicator_' + suffix\\\" :style=\\\"{minHeight: depth===0 ? '50px': 0}\\\">\\n\\n            <!-- EDITING AREA FOR INDICATOR -->\\n            <div class=\\\"form_editing_area\\\" :class=\\\"{'conditional-show': conditionallyShown, 'form-header': isHeaderLocation}\\\">\\n\\n                <!-- TOOLBAR -->\\n                <div v-show=\\\"showToolbars\\\" :id=\\\"'form_editing_toolbar_' + formNode.indicatorID\\\">\\n                    <div style=\\\"display: flex; align-items: center;\\\">\\n                        <span tabindex=\\\"0\\\" style=\\\"cursor: pointer; display: flex; align-items:center;\\\"\\n                            @click=\\\"editQuestion(formNode.indicatorID, formNode.series)\\\"\\n                            @keypress.enter=\\\"editQuestion(formNode.indicatorID, formNode.series)\\\"\\n                            :title=\\\"'edit indicator ' + formNode.indicatorID\\\">\\uD83D\\uDCDD <span class=\\\"toolbar-edit\\\">EDIT</span>\\n                        </span>\\n                        <span style=\\\"margin-left: 0.75rem; white-space:nowrap\\\">{{formNode.format || 'no format'}}</span>\\n                        <span v-if=\\\"sensitive\\\" v-html=\\\"sensitiveImg\\\" style=\\\"display:flex; align-items: center; margin-left: 0.4rem;\\\"></span>\\n                    </div>\\n                    <div style=\\\"display: flex; align-items:center;\\\">\\n                        <button v-if=\\\"conditionsAllowed\\\" :id=\\\"'edit_conditions_' + formNode.indicatorID\\\" \\n                            @click=\\\"ifthenUpdateIndicatorID(formNode.indicatorID)\\\" :title=\\\"'Edit conditions for ' + formNode.indicatorID\\\" class=\\\"icon\\\">\\n                            <img src=\\\"../../libs/dynicons/?img=preferences-system.svg&amp;w=20\\\" alt=\\\"\\\" />\\n                        </button>\\n                        <button @click=\\\"editIndicatorPrivileges(formNode.indicatorID)\\\"\\n                            :title=\\\"'Edit indicator ' + formNode.indicatorID + ' privileges'\\\" class=\\\"icon\\\">\\n                            <img src=\\\"../../libs/dynicons/?img=emblem-readonly.svg&amp;w=20\\\" alt=\\\"\\\"/> \\n                        </button>\\n                        <button @click=\\\"openAdvancedOptionsDialog(formNode.indicatorID)\\\"\\n                            title=\\\"Open Advanced Options\\\" class=\\\"icon\\\">\\n                            <img src=\\\"../../libs/dynicons/?img=document-properties.svg&amp;w=20\\\" alt=\\\"\\\" />\\n                        </button>\\n                        <div style=\\\"padding-right: 0.5em; color: #007860; font-weight: bold; width:20px; display:flex; align-items:center;\\\">\\n                            <div v-if=\\\"formNode.has_code\\\" tabindex=\\\"0\\\" style=\\\"cursor:pointer\\\" title=\\\"advanced options are present\\\">\\u2713</div>\\n                        </div>\\n                        <button class=\\\"btn-general add-subquestion\\\" title=\\\"Add Sub-question\\\"\\n                            @click=\\\"newQuestion(formNode.indicatorID)\\\">\\n                            + Add Sub-question\\n                        </button>\\n                    </div>\\n                </div>\\n\\n                <!-- NAME -->\\n                <div v-html=\\\"indicatorName\\\" class=\\\"indicator-name-preview\\\"></div>\\n                \\n                <!-- FORMAT PREVIEW -->\\n                <div v-if=\\\"formNode.format!==''\\\" class=\\\"form_data_entry_preview\\\">\\n                    <format-preview :indicator=\\\"formNode\\\" :key=\\\"'FP' + formNode.indicatorID\\\"></format-preview>\\n                </div>\\n            </div>\\n\\n            <!-- NOTE: RECURSIVE SUBQUESTIONS -->\\n            <template v-if=\\\"hasChildNode\\\">\\n                <form-editing-display v-for=\\\"child in children\\\"\\n                    :depth=\\\"depth + 1\\\"\\n                    :formNode=\\\"child\\\"\\n                    :key=\\\"'FED' + child.indicatorID\\\">\\n                </form-editing-display>\\n            </template>\\n        </div>\"\n});\n\n//# sourceURL=webpack://leaf/./libs/js/LEAF/form_editor_vue_src/components/form_view/FormEditingDisplay.js?");

/***/ }),

/***/ "./libs/js/LEAF/form_editor_vue_src/components/form_view/FormIndexListing.js":
/*!***********************************************************************************!*\
  !*** ./libs/js/LEAF/form_editor_vue_src/components/form_view/FormIndexListing.js ***!
  \***********************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({\n  name: 'FormIndexListing',\n  data: function data() {\n    return {\n      subMenuOpen: true\n    };\n  },\n  props: {\n    depth: Number,\n    formNode: Object,\n    index: Number,\n    parentID: Number\n  },\n  inject: ['truncateText', 'addToListItemsObject', 'selectNewFormNode', 'selectedNodeIndicatorID', 'startDrag', 'onDragEnter', 'onDragLeave', 'onDrop', 'moveListing'],\n  mounted: function mounted() {\n    //each list item is added to the listItems array on parent component, to track indicatorID, parentID, sort and current index values\n    this.addToListItemsObject(this.formNode, this.parentID, this.index);\n\n    if (this.selectedNodeIndicatorID !== null) {\n      document.getElementById(\"index_listing_\".concat(this.selectedNodeIndicatorID)).classList.add('index-selected');\n    }\n  },\n  methods: {\n    indexHover: function indexHover(event) {\n      event.currentTarget.classList.add('index-selected');\n    },\n    indexHoverOff: function indexHoverOff(event) {\n      event.currentTarget.classList.remove('index-selected');\n    },\n    toggleSubMenu: function toggleSubMenu(event) {\n      if ((event === null || event === void 0 ? void 0 : event.keyCode) === 32) event.preventDefault();\n      this.subMenuOpen = !this.subMenuOpen;\n    }\n  },\n  computed: {\n    hasChildNode: function hasChildNode() {\n      var child = this.formNode.child;\n      return child !== null && Object.keys(child).length > 0;\n    },\n    children: function children() {\n      var eles = [];\n\n      if (this.hasChildNode) {\n        for (var c in this.formNode.child) {\n          eles.push(this.formNode.child[c]);\n        }\n\n        eles = eles.sort(function (a, b) {\n          return a.sort - b.sort;\n        });\n      }\n\n      return eles;\n    },\n    headingNumber: function headingNumber() {\n      return this.depth === 0 ? this.index + 1 + '.' : '';\n    },\n    conditionallyShown: function conditionallyShown() {\n      var isConditionalShow = false;\n\n      if (this.depth !== 0 && this.formNode.conditions !== null && this.formNode.conditions !== '') {\n        var conditions = JSON.parse(this.formNode.conditions) || [];\n\n        if (conditions.some(function (c) {\n          var _c$selectedOutcome;\n\n          return ((_c$selectedOutcome = c.selectedOutcome) === null || _c$selectedOutcome === void 0 ? void 0 : _c$selectedOutcome.toLowerCase()) === 'show';\n        })) {\n          isConditionalShow = true;\n        }\n      }\n\n      return isConditionalShow;\n    },\n    conditionallyHidden: function conditionallyHidden() {\n      var isConditionalHide = false;\n\n      if (this.depth !== 0 && this.formNode.conditions !== null && this.formNode.conditions !== '') {\n        var conditions = JSON.parse(this.formNode.conditions) || [];\n\n        if (conditions.some(function (c) {\n          var _c$selectedOutcome2;\n\n          return ((_c$selectedOutcome2 = c.selectedOutcome) === null || _c$selectedOutcome2 === void 0 ? void 0 : _c$selectedOutcome2.toLowerCase()) === 'hide';\n        })) {\n          isConditionalHide = true;\n        }\n      }\n\n      return isConditionalHide;\n    },\n    hasConditionalPrefill: function hasConditionalPrefill() {\n      var hasConditionalPrefill = false;\n\n      if (this.depth !== 0 && this.formNode.conditions !== null && this.formNode.conditions !== '') {\n        var conditions = JSON.parse(this.formNode.conditions) || [];\n\n        if (conditions.some(function (c) {\n          var _c$selectedOutcome3;\n\n          return ((_c$selectedOutcome3 = c.selectedOutcome) === null || _c$selectedOutcome3 === void 0 ? void 0 : _c$selectedOutcome3.toLowerCase()) === 'pre-fill';\n        })) {\n          hasConditionalPrefill = true;\n        }\n      }\n\n      return hasConditionalPrefill;\n    },\n    //NOTE: Uses globally available XSSHelpers.js (LEAF class)\n    shortLabel: function shortLabel() {\n      //FIX:TODO:  currently getting from name - too many items didn't have label - prompt during entry\n      return XSSHelpers.decodeHTMLEntities(this.truncateText(XSSHelpers.stripAllTags(this.formNode.name))) || '[ blank ]';\n    },\n    suffix: function suffix() {\n      return \"\".concat(this.formNode.indicatorID, \"_\").concat(this.formNode.series);\n    },\n    required: function required() {\n      return parseInt(this.formNode.required) === 1;\n    },\n    isEmpty: function isEmpty() {\n      return this.formNode.isEmpty === true;\n    }\n  },\n  template: \"\\n        <li tabindex=0 :title=\\\"'index item '+ formNode.indicatorID\\\"\\n            :class=\\\"depth===0 ? 'section_heading' : 'subindicator_heading'\\\"\\n            @mouseover.stop=\\\"indexHover\\\" @mouseout.stop=\\\"indexHoverOff\\\"\\n            @click.stop=\\\"selectNewFormNode($event, formNode)\\\"\\n            @keypress.enter.stop=\\\"selectNewFormNode($event, formNode)\\\">\\n            <div>\\n                <span v-if=\\\"conditionallyShown\\\" title=\\\"question is conditionally shown\\\">\\u2192</span>\\n                <span v-if=\\\"conditionallyHidden\\\" title=\\\"question is conditionally hidden\\\">\\u21CF</span>\\n                <span v-if=\\\"hasConditionalPrefill\\\" title=\\\"question has a conditional prefill value\\\">\\u270E</span>\\n                {{headingNumber}}&nbsp;{{shortLabel}}\\n                <div class=\\\"icon_move_container\\\">\\n                    <div v-show=\\\"formNode.indicatorID===selectedNodeIndicatorID\\\" \\n                        tabindex=\\\"0\\\" class=\\\"icon_move up\\\" title=\\\"move item up\\\"\\n                        @click.stop=\\\"moveListing($event, selectedNodeIndicatorID, true)\\\"\\n                        @keydown.stop.enter.space=\\\"moveListing($event, selectedNodeIndicatorID, true)\\\">\\n                    </div>\\n                    <div v-show=\\\"formNode.indicatorID===selectedNodeIndicatorID\\\"\\n                        tabindex=\\\"0\\\" class=\\\"icon_move down\\\" title=\\\"move item down\\\"\\n                        @click.stop=\\\"moveListing($event, selectedNodeIndicatorID, false)\\\"\\n                        @keydown.stop.enter.space=\\\"moveListing($event, selectedNodeIndicatorID, false)\\\">\\n                    </div>\\n                </div>\\n                <div v-if=\\\"hasChildNode\\\" tabindex=\\\"0\\\" class=\\\"sub-menu-chevron\\\"\\n                    @click.stop=\\\"toggleSubMenu($event)\\\"\\n                    @keydown.stop.enter.space=\\\"toggleSubMenu($event)\\\">\\n                    {{subMenuOpen ? '\\uFE3D' : '\\uFE3E'}}\\n                </div>\\n            </div>\\n            \\n            <!-- NOTE: RECURSIVE SUBQUESTIONS. ul for each for drop zones -->\\n            \\n            <ul v-show=\\\"subMenuOpen\\\" class=\\\"form-index-listing-ul\\\" :id=\\\"'drop_area_parent_'+ formNode.indicatorID\\\"\\n                data-effect-allowed=\\\"move\\\"\\n                @drop.stop=\\\"onDrop\\\"\\n                @dragover.prevent\\n                @dragenter.prevent=\\\"onDragEnter\\\"\\n                @dragleave=\\\"onDragLeave\\\">\\n\\n                <template v-if=\\\"hasChildNode\\\">\\n                    <form-index-listing v-for=\\\"(child, i) in children\\\"\\n                        :id=\\\"'index_listing_' + child.indicatorID\\\"\\n                        :depth=\\\"depth + 1\\\"\\n                        :parentID=\\\"formNode.indicatorID\\\"\\n                        :formNode=\\\"child\\\"\\n                        :index=\\\"i\\\"\\n                        :key=\\\"'index_list_item_' + child.indicatorID\\\"\\n                        draggable=\\\"true\\\"\\n                        @dragstart.stop=\\\"startDrag\\\"> \\n                    </form-index-listing>\\n                </template>\\n            </ul>\\n        </li>\"\n});\n\n//# sourceURL=webpack://leaf/./libs/js/LEAF/form_editor_vue_src/components/form_view/FormIndexListing.js?");

/***/ }),

/***/ "./libs/js/LEAF/form_editor_vue_src/components/form_view/FormViewController.js":
/*!*************************************************************************************!*\
  !*** ./libs/js/LEAF/form_editor_vue_src/components/form_view/FormViewController.js ***!
  \*************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _FormEditingDisplay_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./FormEditingDisplay.js */ \"./libs/js/LEAF/form_editor_vue_src/components/form_view/FormEditingDisplay.js\");\n/* harmony import */ var _FormIndexListing_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./FormIndexListing.js */ \"./libs/js/LEAF/form_editor_vue_src/components/form_view/FormIndexListing.js\");\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({\n  data: function data() {\n    return {\n      formID: this.currentCategorySelection.categoryID,\n      dragLI_Prefix: 'index_listing_',\n      dragUL_Prefix: 'drop_area_parent_',\n      listItems: {},\n      //object w key indID, vals parID, newParID, sort, listindex. for tracking parID and sort changes\n      allowedConditionChildFormats: ['dropdown', 'text'],\n      showToolbars: true\n    };\n  },\n  components: {\n    FormEditingDisplay: _FormEditingDisplay_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"],\n    FormIndexListing: _FormIndexListing_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"]\n  },\n  inject: ['APIroot', 'CSRFToken', 'ajaxFormByCategoryID', 'currSubformID', 'selectNewCategory', 'selectNewFormNode', 'selectedNodeIndicatorID', 'selectedFormNode', 'newQuestion', 'currentCategorySelection', 'currentCategoryIndicatorTotal'],\n  provide: function provide() {\n    var _this = this;\n\n    return {\n      listItems: Vue.computed(function () {\n        return _this.listItems;\n      }),\n      allListItemsAreAdded: Vue.computed(function () {\n        return _this.allListItemsAreAdded;\n      }),\n      showToolbars: Vue.computed(function () {\n        return _this.showToolbars;\n      }),\n      addToListItemsObject: this.addToListItemsObject,\n      allowedConditionChildFormats: this.allowedConditionChildFormats,\n      startDrag: this.startDrag,\n      onDragEnter: this.onDragEnter,\n      onDragLeave: this.onDragLeave,\n      onDrop: this.onDrop,\n      moveListing: this.moveListing\n    };\n  },\n  computed: {\n    formName: function formName() {\n      return this.currentCategorySelection.categoryName || 'Untitled';\n    },\n    currentSectionNumber: function currentSectionNumber() {\n      var _this$selectedFormNod;\n\n      var ID = parseInt((_this$selectedFormNod = this.selectedFormNode) === null || _this$selectedFormNod === void 0 ? void 0 : _this$selectedFormNod.indicatorID);\n      var item = this.listItems[ID];\n      return this.allListItemsAreAdded && item.parentID === null ? \"\".concat(item.sort + 1, \" \") : '';\n    },\n    allListItemsAreAdded: function allListItemsAreAdded() {\n      return this.currentCategoryIndicatorTotal > 0 && this.currentCategoryIndicatorTotal === Object.keys(this.listItems).length;\n    },\n    sortOrParentChanged: function sortOrParentChanged() {\n      return this.sortValuesToUpdate.length > 0 || this.parentIDsToUpdate.length > 0;\n    },\n    sortValuesToUpdate: function sortValuesToUpdate() {\n      var indsToUpdate = [];\n\n      for (var i in this.listItems) {\n        if (this.listItems[i].sort !== this.listItems[i].listIndex) {\n          indsToUpdate.push(_objectSpread({\n            indicatorID: parseInt(i)\n          }, this.listItems[i]));\n        }\n      }\n\n      return indsToUpdate;\n    },\n    parentIDsToUpdate: function parentIDsToUpdate() {\n      var indsToUpdate = []; //NOTE: headers have null as parentID, so listitems element newParentID is initialized with ''\n\n      for (var i in this.listItems) {\n        if (this.listItems[i].newParentID !== '' && this.listItems[i].parentID !== this.listItems[i].newParentID) {\n          indsToUpdate.push(_objectSpread({\n            indicatorID: parseInt(i)\n          }, this.listItems[i]));\n        }\n      }\n\n      return indsToUpdate;\n    }\n  },\n  methods: {\n    moveListing: function moveListing(event, indID, moveup) {\n      var _this2 = this;\n\n      if ((event === null || event === void 0 ? void 0 : event.keyCode) === 32) event.preventDefault();\n      var parentEl = event.currentTarget.closest('ul');\n      var elToMove = document.getElementById(\"index_listing_\".concat(indID));\n      var oldElsLI = Array.from(document.querySelectorAll(\"#\".concat(parentEl.id, \" > li\")));\n      var newElsLI = oldElsLI.filter(function (li) {\n        return li !== elToMove;\n      });\n      var listitem = this.listItems[indID];\n\n      if (moveup) {\n        if (listitem.listIndex > 0) {\n          newElsLI.splice(listitem.listIndex - 1, 0, elToMove);\n          oldElsLI.forEach(function (li) {\n            return parentEl.removeChild(li);\n          });\n          newElsLI.forEach(function (li, i) {\n            var liIndID = parseInt(li.id.replace('index_listing_', ''));\n            parentEl.appendChild(li);\n            _this2.listItems[liIndID].listIndex = i;\n          });\n          event.currentTarget.focus();\n        } else {\n          console.log('is first item');\n        }\n      } else {\n        if (listitem.listIndex < oldElsLI.length - 1) {\n          newElsLI.splice(listitem.listIndex + 1, 0, elToMove);\n          oldElsLI.forEach(function (li) {\n            return parentEl.removeChild(li);\n          });\n          newElsLI.forEach(function (li, i) {\n            var liIndID = parseInt(li.id.replace('index_listing_', ''));\n            parentEl.appendChild(li);\n            _this2.listItems[liIndID].listIndex = i;\n          });\n          event.currentTarget.focus();\n        } else {\n          console.log('is last item');\n        }\n      }\n    },\n    applySortAndParentID_Updates: function applySortAndParentID_Updates() {\n      var _this3 = this;\n\n      var updateSort = [];\n      this.sortValuesToUpdate.forEach(function (item) {\n        updateSort.push($.ajax({\n          type: 'POST',\n          url: \"\".concat(_this3.APIroot, \"formEditor/\").concat(item.indicatorID, \"/sort\"),\n          data: {\n            sort: item.listIndex,\n            CSRFToken: _this3.CSRFToken\n          },\n          success: function success() {},\n          error: function error(err) {\n            return console.log('ind sort post err', err);\n          }\n        }));\n      });\n      var updateParentID = [];\n      this.parentIDsToUpdate.forEach(function (item) {\n        updateParentID.push($.ajax({\n          type: 'POST',\n          url: \"\".concat(_this3.APIroot, \"formEditor/\").concat(item.indicatorID, \"/parentID\"),\n          data: {\n            parentID: item.newParentID,\n            CSRFToken: _this3.CSRFToken\n          },\n          success: function success() {},\n          error: function error(err) {\n            return console.log('ind parentID post err', err);\n          }\n        }));\n      });\n      var all = updateSort.concat(updateParentID);\n      Promise.all(all).then(function (res) {\n        console.log('promise all applied changes:', all, res);\n\n        if (res.length > 0) {\n          _this3.selectNewCategory(_this3.formID, _this3.currSubformID !== null, _this3.selectedNodeIndicatorID);\n        }\n      });\n    },\n    addToListItemsObject: function addToListItemsObject(formNode, parentID, listIndex) {\n      var indicatorID = formNode.indicatorID,\n          sort = formNode.sort;\n      var item = {\n        sort: sort,\n        parentID: parentID,\n        listIndex: listIndex,\n        newParentID: ''\n      };\n      this.listItems[indicatorID] = item;\n    },\n    //update the listIndex and parentID values for a specific indicator\n    updateListItems: function updateListItems(indID, formParIndID, listIndex) {\n      var item = _objectSpread({}, this.listItems[indID]);\n\n      item.listIndex = listIndex;\n      item.newParentID = formParIndID;\n      this.listItems[indID] = item;\n    },\n    startDrag: function startDrag(evt) {\n      evt.dataTransfer.dropEffect = 'move';\n      evt.dataTransfer.effectAllowed = 'move';\n      evt.dataTransfer.setData('text/plain', evt.target.id);\n    },\n    onDrop: function onDrop(evt) {\n      var _this4 = this;\n\n      evt.preventDefault();\n      var draggedElID = evt.dataTransfer.getData('text');\n      var parentEl = evt.currentTarget; //drop event is on the parent ul\n\n      var indID = parseInt(draggedElID.replace(this.dragLI_Prefix, ''));\n      var formParIndID = parentEl.id === \"base_drop_area\" ? null : parseInt(parentEl.id.replace(this.dragUL_Prefix, ''));\n      var elsLI = Array.from(document.querySelectorAll(\"#\".concat(parentEl.id, \" > li\")));\n\n      if (elsLI.length === 0) {\n        //if the drop ul has no lis, just append it\n        try {\n          parentEl.append(document.getElementById(draggedElID));\n          this.updateListItems(indID, formParIndID, 0);\n        } catch (error) {\n          console.log(error);\n        }\n      } else {\n        //otherwise, find the closest li to the droppoint to insert before\n        var dist = 9999;\n        var closestLI_id = null;\n        elsLI.forEach(function (el) {\n          var newDist = el.getBoundingClientRect().top - evt.clientY;\n\n          if (el.id !== draggedElID && newDist > 0 && newDist < dist) {\n            dist = newDist;\n            closestLI_id = el.id;\n          }\n        });\n\n        try {\n          if (closestLI_id !== null) {\n            parentEl.insertBefore(document.getElementById(draggedElID), document.getElementById(closestLI_id));\n          } else {\n            console.log('got a null id'); //it's at the end\n\n            parentEl.append(document.getElementById(draggedElID));\n          } //check the new indexes\n\n\n          var newElsLI = Array.from(document.querySelectorAll(\"#\".concat(parentEl.id, \" > li\")));\n          newElsLI.forEach(function (li, i) {\n            var indID = parseInt(li.id.replace(_this4.dragLI_Prefix, ''));\n\n            _this4.updateListItems(indID, formParIndID, i);\n          });\n        } catch (error) {\n          console.log(error);\n        }\n      }\n\n      if (parentEl.classList.contains('entered-drop-zone')) {\n        evt.target.classList.remove('entered-drop-zone');\n      }\n    },\n    onDragLeave: function onDragLeave(evt) {\n      //@dragleave=\"onDragLeave\"\n      if (evt.target.classList.contains('form-index-listing-ul')) {\n        //if target is ul, rm drop zone hilite\n        evt.target.classList.remove('entered-drop-zone');\n      }\n    },\n    onDragEnter: function onDragEnter(evt) {\n      if (evt.target.classList.contains('form-index-listing-ul')) {\n        //if target is ul, apply style to hilite drop zone\n        evt.target.classList.add('entered-drop-zone');\n      }\n    },\n    toggleToolbars: function toggleToolbars(event) {\n      event.stopPropagation();\n      if ((event === null || event === void 0 ? void 0 : event.keyCode) === 32) event.preventDefault();\n      this.showToolbars = !this.showToolbars;\n    }\n  },\n  watch: {\n    allListItemsAreAdded: function allListItemsAreAdded(newVal, oldVal) {\n      console.log('watch triggered, all items have been added');\n      /*\r\n      //this would update legacy sort to from prev sort val to new index based value.  NOTE: possibly just use manual 'apply changes' btn\r\n      if(newVal===true) {\r\n          if (this.sortValuesToUpdate.length > 0) {\r\n              let updateSort = [];\r\n              this.sortValuesToUpdate.forEach(item => {\r\n                  updateSort.push(\r\n                      $.ajax({\r\n                          type: 'POST',\r\n                          url: `${this.APIroot}formEditor/${item.indicatorID}/sort`,\r\n                          data: {\r\n                              sort: item.listIndex,\r\n                              CSRFToken: this.CSRFToken\r\n                          },\r\n                          success: () => {},\r\n                          error: err => console.log('ind sort post err', err)\r\n                      })\r\n                  );\r\n              });\r\n              Promise.all(updateSort).then((res)=> {\r\n                  console.log('promise all:', updateSort, res);\r\n                  if (res.length > 0) {\r\n                      this.selectNewCategory(this.formID, this.currSubformID !== null);\r\n                  }\r\n              });\r\n          }\r\n      } */\n    }\n  },\n  template: \"\\n    <div id=\\\"form_index_and_editing\\\">\\n        <!-- NOTE: FORM INDEX DISPLAY -->\\n        <div id=\\\"form_index_display\\\">\\n            \\n            <button v-if=\\\"sortOrParentChanged\\\" @click=\\\"applySortAndParentID_Updates\\\" \\n                id=\\\"can_update\\\"\\n                title=\\\"Apply form structure updates\\\">Apply changes</button>\\n            <div v-else id=\\\"can_update\\\" title=\\\"drag and drop sections and apply updates to change form structure\\\">\\u2139</div>\\n            \\n            <h3 style=\\\"margin: 0; margin-bottom: 0.75em; color: black;\\\">\\n            Form Index\\n            </h3>\\n\\n            <div style=\\\"margin: 1em 0\\\">\\n                <button v-if=\\\"selectedFormNode!==null\\\" class=\\\"btn-general\\\" style=\\\"width: 100%; margin-bottom: 0.5em;\\\" \\n                    @click=\\\"selectNewFormNode($event, null)\\\" \\n                    id=\\\"show_entire_form\\\" \\n                    title=\\\"Show entire form\\\">Show entire form\\n                </button>\\n                <button v-else class=\\\"btn-general disabled\\\" disabled=\\\"true\\\" style=\\\"width: 100%; margin-bottom: 0.5em;\\\">Viewing entire form</button>\\n                \\n                <button class=\\\"btn-general\\\" style=\\\"width: 100%\\\" \\n                    @click=\\\"newQuestion(null)\\\"\\n                    id=\\\"add_new_form_section\\\"\\n                    title=\\\"Add new form section\\\">\\n                    + Add Section\\n                </button>\\n            </div>\\n\\n            <!--<h3 style=\\\"margin: 0; margin-bottom: 0.5em; color: black;\\\" :title=\\\"formName\\\">\\n            {{ formName }}\\n            </h3>-->\\n            \\n            <ul v-if=\\\"ajaxFormByCategoryID.length > 0\\\"\\n                id=\\\"base_drop_area\\\"\\n                class=\\\"form-index-listing-ul\\\"\\n                data-effect-allowed=\\\"move\\\"\\n                @drop.stop=\\\"onDrop\\\"\\n                @dragover.prevent\\n                @dragenter.prevent=\\\"onDragEnter\\\"\\n                @dragleave=\\\"onDragLeave\\\">\\n\\n                <form-index-listing v-for=\\\"(formSection, i) in ajaxFormByCategoryID\\\"\\n                    :id=\\\"'index_listing_'+formSection.indicatorID\\\"\\n                    :depth=0\\n                    :formNode=\\\"formSection\\\"\\n                    :index=i\\n                    :parentID=null\\n                    :key=\\\"'index_list_item_' + formSection.indicatorID\\\"\\n                    draggable=\\\"true\\\"\\n                    @dragstart.stop=\\\"startDrag\\\">\\n                </form-index-listing>\\n            </ul>\\n        </div>\\n\\n        <!-- NOTE: FORM EDITING AND ENTRY PREVIEW -->\\n        <template v-if=\\\"ajaxFormByCategoryID.length > 0 && allListItemsAreAdded\\\">\\n\\n            <!-- ENTIRE FORM EDIT / PREVIEW -->\\n            <div v-if=\\\"selectedFormNode===null\\\" id=\\\"form_entry_and_preview\\\">\\n                <template v-for=\\\"(formSection, i) in ajaxFormByCategoryID\\\" :key=\\\"'editing_display_' + formSection.indicatorID\\\">\\n                    <div class=\\\"form-section-header\\\" style=\\\"display: flex;\\\">\\n                        <h3>Form Page {{i+1}}</h3>\\n                        <button v-if=\\\"i===0\\\" id=\\\"indicator_toolbar_toggle\\\" \\n                            @click.stop=\\\"toggleToolbars($event)\\\">\\n                            {{showToolbars ? 'Hide' : 'Show'}}&nbsp;toolbars\\n                        </button>\\n                    </div>\\n                    <div class=\\\"printformblock\\\">\\n                        <form-editing-display \\n                            :depth=\\\"0\\\"\\n                            :formNode=\\\"formSection\\\"\\n                            :index=\\\"i\\\"\\n                            :key=\\\"'FED' + formSection.indicatorID\\\">\\n                        </form-editing-display>\\n                    </div>\\n                </template>\\n            </div>\\n\\n            <!-- SUBSECTION EDIT / PREVIEW -->\\n            <div v-else id=\\\"form_entry_and_preview\\\">\\n                <div class=\\\"form-section-header\\\" style=\\\"display: flex;\\\">\\n                    <h3>Form {{currentSectionNumber !== '' ? 'Page ' + currentSectionNumber : 'Selection'}}</h3>\\n                    <button id=\\\"indicator_toolbar_toggle\\\"\\n                        @click.stop=\\\"toggleToolbars($event)\\\">\\n                        {{showToolbars ? 'Hide' : 'Show'}}&nbsp;toolbars\\n                    </button>\\n                </div>\\n                <div class=\\\"printformblock\\\">\\n                    <form-editing-display \\n                        :depth=\\\"0\\\"\\n                        :formNode=\\\"selectedFormNode\\\"\\n                        :index=\\\"-1\\\"\\n                        :key=\\\"'FED' + selectedFormNode.indicatorID\\\">\\n                    </form-editing-display>\\n                </div>\\n            </div>\\n        </template>\\n    </div>\"\n});\n\n//# sourceURL=webpack://leaf/./libs/js/LEAF/form_editor_vue_src/components/form_view/FormViewController.js?");

/***/ }),

/***/ "./libs/js/LEAF/form_editor_vue_src/components/form_view/FormatPreview.js":
/*!********************************************************************************!*\
  !*** ./libs/js/LEAF/form_editor_vue_src/components/form_view/FormatPreview.js ***!
  \********************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({\n  props: {\n    indicator: Object\n  },\n  inject: ['orgchartPath', 'addOrgSelector', 'orgSelectorClassesAdded', //JS classes for orgchart formats\n  'updateGridInstances', 'gridInstances'],\n  computed: {\n    truncatedOptions: function truncatedOptions() {\n      var _this$indicator$optio;\n\n      return ((_this$indicator$optio = this.indicator.options) === null || _this$indicator$optio === void 0 ? void 0 : _this$indicator$optio.slice(0, 5)) || [];\n    },\n    baseFormat: function baseFormat() {\n      var _this$indicator$forma, _this$indicator$forma2;\n\n      return ((_this$indicator$forma = this.indicator.format) === null || _this$indicator$forma === void 0 ? void 0 : (_this$indicator$forma2 = _this$indicator$forma.toLowerCase()) === null || _this$indicator$forma2 === void 0 ? void 0 : _this$indicator$forma2.trim()) || '';\n    },\n    inputElID: function inputElID() {\n      return \"input_preview_\".concat(this.indicator.indicatorID);\n    },\n    selectorInputPrefix: function selectorInputPrefix() {\n      return this.baseFormat === 'orgchart_group' ? 'group#' : '#';\n    },\n    selType: function selType() {\n      return this.baseFormat.slice(this.baseFormat.indexOf('_') + 1);\n    }\n  },\n  mounted: function mounted() {\n    var _this = this;\n\n    switch (this.baseFormat) {\n      case 'date':\n        $(\"#\".concat(this.inputElID)).datepicker({\n          autoHide: true,\n          showAnim: \"slideDown\",\n          onSelect: function onSelect() {\n            $('#' + _this.indicator.indicatorID + '_focusfix').focus();\n          }\n        });\n        break;\n\n      case 'dropdown':\n        $(\"#\".concat(this.inputElID)).chosen({\n          disable_search_threshold: 5,\n          allow_single_deselect: true,\n          width: '50%'\n        });\n        break;\n\n      case 'multiselect':\n        var elSelect = document.getElementById(this.inputElID);\n\n        if (elSelect !== null && elSelect.multiple === true && elSelect.getAttribute('data-choice') !== 'active') {\n          var _options = this.indicator.options || [];\n\n          _options = _options.map(function (o) {\n            return {\n              value: o,\n              label: o,\n              selected: false\n            };\n          });\n          var choices = new Choices(elSelect, {\n            allowHTML: false,\n            removeItemButton: true,\n            editItems: true,\n            choices: _options.filter(function (o) {\n              return o.value !== \"\";\n            })\n          });\n          elSelect.choicesjs = choices;\n          elSelect.addEventListener('change', function () {\n            var elEmptyOption = document.getElementById(\"\".concat(_this.indicator.indicatorID, \"_empty_value\"));\n\n            if (elEmptyOption === null) {\n              var opt = document.createElement('option');\n              opt.id = \"\".concat(_this.indicator.indicatorID, \"_empty_value\");\n              opt.value = \"\";\n              elSelect.appendChild(opt);\n              elEmptyOption = document.getElementById(\"\".concat(_this.indicator.indicatorID, \"_empty_value\"));\n            }\n\n            elEmptyOption.selected = elSelect.value === '';\n          });\n        }\n\n        break;\n\n      case 'orgchart_group':\n      case 'orgchart_position':\n      case 'orgchart_employee':\n        if (this.orgSelectorClassesAdded[this.selType] === false) {\n          console.log(\"get and track addition of \".concat(this.selType, \" class and styles\"));\n          $('head').append(\"<link type=\\\"text/css\\\" rel=\\\"stylesheet\\\" href=\\\"\".concat(this.orgchartPath, \"/css/\").concat(this.selType, \"Selector.css\\\" />\"));\n          $.ajax({\n            type: 'GET',\n            url: \"\".concat(this.orgchartPath, \"/js/\").concat(this.selType, \"Selector.js\"),\n            dataType: 'script',\n            success: function success() {\n              _this.addOrgSelector(_this.selType, true);\n\n              _this.createOrgSelector();\n            }\n          });\n        } else {\n          console.log(\"already fetched\");\n          this.createOrgSelector();\n        }\n\n        break;\n\n      case 'grid':\n        var options = JSON.parse(this.indicator.options);\n        this.updateGridInstances(options, this.indicator.indicatorID, this.indicator.series);\n        this.gridInstances[this.indicator.indicatorID].input();\n        break;\n\n      default:\n        break;\n    }\n  },\n  methods: {\n    useAdvancedEditor: function useAdvancedEditor() {\n      $('#' + this.inputElID).trumbowyg({\n        btns: ['bold', 'italic', 'underline', '|', 'unorderedList', 'orderedList', '|', 'justifyLeft', 'justifyCenter', 'justifyRight', 'fullscreen']\n      });\n      $(\"#textarea_format_button_\".concat(this.indicator.indicatorID)).css('display', 'none');\n    },\n    createOrgSelector: function createOrgSelector() {\n      var _this2 = this;\n\n      var orgSelector = {};\n\n      if (this.selType === 'group') {\n        orgSelector = new groupSelector(\"orgSel_\".concat(this.indicator.indicatorID));\n      } else if (this.selType === 'position') {\n        orgSelector = new positionSelector(\"orgSel_\".concat(this.indicator.indicatorID));\n      } else {\n        orgSelector = new employeeSelector(\"orgSel_\".concat(this.indicator.indicatorID));\n      }\n\n      orgSelector.apiPath = \"\".concat(this.orgchartPath, \"/api/\");\n      orgSelector.rootPath = \"\".concat(this.orgchartPath, \"/\");\n      orgSelector.basePath = \"\".concat(this.orgchartPath, \"/\");\n      orgSelector.setSelectHandler(function () {\n        $(\"#sel_prev_\".concat(_this2.indicator.indicatorID)).val(orgSelector.selection);\n        $(\"#orgSel_\".concat(_this2.indicator.indicatorID, \" input.\").concat(_this2.selType, \"SelectorInput\")).val(\"\".concat(_this2.selectorInputPrefix) + orgSelector.selection);\n      });\n      if (orgSelector.enableEmployeeSearch !== undefined) orgSelector.enableEmployeeSearch();\n      orgSelector.initialize();\n    },\n    addGridRow: function addGridRow() {\n      var _arrowImgs$, _arrowImgs$2, _arrowImgs$3, _arrowImgs$4;\n\n      this.gridInstances[this.indicator.indicatorID].addRow(); //update hardcoded img paths, and listeners to use methods from the gridinstances object\n\n      var elSelector = \"#grid_\".concat(this.indicator.indicatorID, \"_\").concat(this.indicator.series, \"_input tbody > tr > td\");\n      var elTDs = document.querySelectorAll(elSelector);\n      var arrowIndex = elTDs.length - 1;\n      var rmRowIndex = elTDs.length - 2;\n      var arrowImgs = elTDs[arrowIndex].querySelectorAll('img'); //[up, down ]\n\n      var rmRowImg = elTDs[rmRowIndex].querySelector('img');\n      var deleteRow = this.gridInstances[this.indicator.indicatorID].deleteRow;\n      var moveUp = this.gridInstances[this.indicator.indicatorID].moveUp;\n      var moveDown = this.gridInstances[this.indicator.indicatorID].moveDown;\n      var triggerClick = this.gridInstances[this.indicator.indicatorID].triggerClick;\n      (_arrowImgs$ = arrowImgs[0]) === null || _arrowImgs$ === void 0 ? void 0 : _arrowImgs$.setAttribute('src', '../' + ((_arrowImgs$2 = arrowImgs[0]) === null || _arrowImgs$2 === void 0 ? void 0 : _arrowImgs$2.getAttribute('src')));\n\n      arrowImgs[0].onclick = function () {\n        return moveUp(event);\n      };\n\n      arrowImgs[0].onkeydown = function () {\n        return triggerClick(event);\n      };\n\n      (_arrowImgs$3 = arrowImgs[1]) === null || _arrowImgs$3 === void 0 ? void 0 : _arrowImgs$3.setAttribute('src', '../' + ((_arrowImgs$4 = arrowImgs[1]) === null || _arrowImgs$4 === void 0 ? void 0 : _arrowImgs$4.getAttribute('src')));\n\n      arrowImgs[1].onclick = function () {\n        return moveDown(event);\n      };\n\n      arrowImgs[1].onkeydown = function () {\n        return triggerClick(event);\n      };\n\n      rmRowImg === null || rmRowImg === void 0 ? void 0 : rmRowImg.setAttribute('src', '../' + rmRowImg.getAttribute('src'));\n\n      rmRowImg.onclick = function () {\n        return deleteRow(event);\n      };\n\n      rmRowImg.onkeydown = function () {\n        return triggerClick(event);\n      };\n    }\n  },\n  template: \"<div class=\\\"format-preview\\\">\\n\\n        <input v-if=\\\"baseFormat==='text'\\\" :id=\\\"inputElID\\\" type=\\\"text\\\" class=\\\"text_input_preview\\\"/>\\n        <input v-if=\\\"baseFormat==='number'\\\" :id=\\\"inputElID\\\" type=\\\"number\\\" class=\\\"text_input_preview\\\"/>\\n\\n        <template v-if=\\\"baseFormat==='currency'\\\">\\n            $&nbsp;<input :id=\\\"inputElID\\\" type=\\\"number\\\" min=\\\"0.00\\\" step=\\\"0.01\\\" class=\\\"text_input_preview\\\"/>\\n        </template>\\n\\n        <template v-if=\\\"baseFormat==='textarea'\\\">\\n            <textarea :id=\\\"inputElID\\\" rows=\\\"6\\\" class=\\\"textarea_input_preview\\\"></textarea>\\n            <div :id=\\\"'textarea_format_button_' + indicator.indicatorID\\\" \\n                @click=\\\"useAdvancedEditor\\\" \\n                style=\\\"text-align: right; font-size: 12px\\\"><span class=\\\"link\\\">formatting options</span>\\n            </div>\\n        </template>\\n\\n        <template v-if=\\\"baseFormat==='radio'\\\">\\n            <template v-for=\\\"o, i in truncatedOptions\\\" :key=\\\"'radio_prev_' + indicator.indicatorID + '_' + i\\\">\\n                <label class=\\\"checkable leaf_check\\\" :for=\\\"inputElID + '_radio' + i\\\">\\n                    <input type=\\\"radio\\\" :id=\\\"inputElID + '_radio' + i\\\" :name=\\\"indicator.indicatorID\\\" class=\\\"icheck leaf_check\\\"  />\\n                    <span class=\\\"leaf_check\\\"></span>{{ o }}\\n                </label>\\n            </template>\\n            <div v-if=\\\"indicator?.options?.length > 5\\\" style=\\\"padding-left: 0.4em\\\"><b> ...</b></div>\\n        </template>\\n\\n        <template v-if=\\\"baseFormat==='checkboxes' || baseFormat==='checkbox'\\\">\\n            <template v-for=\\\"o, i in truncatedOptions\\\" :key=\\\"'check_prev_' + indicator.indicatorID + '_' + i\\\">\\n                <label class=\\\"checkable leaf_check\\\" :for=\\\"inputElID + '_check' + i\\\">\\n                    <input type=\\\"checkbox\\\" :id=\\\"inputElID + '_check' + i\\\" :name=\\\"indicator.indicatorID\\\" class=\\\"icheck leaf_check\\\"  />\\n                    <span class=\\\"leaf_check\\\"></span>{{ o }}\\n                </label>\\n            </template>\\n            <div v-if=\\\"indicator?.options?.length > 5\\\" style=\\\"padding-left: 0.4em\\\"><b> ...</b></div>\\n        </template>\\n        \\n        <fieldset v-if=\\\"baseFormat==='fileupload' || baseFormat==='image'\\\" \\n            style=\\\"padding: 0.5em;\\\"><legend>File Attachment(s)</legend>\\n            <p style=\\\"margin-bottom: 0.5em;\\\">Select File to attach:</p>\\n            <input :id=\\\"inputElID\\\" name=\\\"formPacket\\\" type=\\\"file\\\" />\\n        </fieldset>\\n\\n        <template v-if=\\\"baseFormat==='date'\\\">\\n            <input type=\\\"text\\\" :id=\\\"inputElID\\\" \\n            style=\\\"background: url(../../libs/dynicons/?img=office-calendar.svg&w=16); background-repeat: no-repeat; background-position: 4px center; padding-left: 24px; font-size: 1.3em; font-family: monospace\\\" value=\\\"\\\" />\\n            <input class=\\\"ui-helper-hidden-accessible\\\" :id=\\\"indicator.indicatorID + '_focusfix'\\\" type=\\\"text\\\" />\\n        </template>\\n\\n        \\n        <select v-if=\\\"baseFormat==='dropdown'\\\" :id=\\\"inputElID\\\" style=\\\"width: 50%\\\">\\n            <option v-for=\\\"o, i in truncatedOptions\\\" :key=\\\"'drop_prev_' + indicator.indicatorID + '_' + i\\\">\\n            {{o}}\\n            </option>\\n            <option v-if=\\\"indicator?.options?.length > 5\\\" style=\\\"padding-left: 0.4em\\\" disabled>(preview showing first 5)</option>\\n        </select>\\n        \\n        <select v-if=\\\"baseFormat==='multiselect'\\\" multiple \\n            :id=\\\"inputElID\\\">\\n            :name=\\\"'multi_prev_' + indicator.indicatorID + '_multiselect[]'\\\"\\n            style=\\\"display:none\\\">\\n        </select>\\n        \\n        <template v-if=\\\"baseFormat==='orgchart_group' || baseFormat==='orgchart_position' || baseFormat==='orgchart_employee'\\\">\\n            <div :id=\\\"'orgSel_' + indicator.indicatorID\\\" style=\\\"min-height:30px\\\"></div>\\n            <input :id=\\\"'sel_prev_' + indicator.indicatorID\\\" style=\\\"display: none;\\\">\\n        </template>\\n\\n        <template v-if=\\\"baseFormat==='grid'\\\">\\n            <span style=\\\"position: absolute; color: transparent\\\" aria-atomic=\\\"true\\\" aria-live=\\\"polite\\\" :id=\\\"'tableStatus_' + indicator.indicatorID\\\" role=\\\"status\\\"></span>\\n            <div class=\\\"tableinput\\\">\\n                <table class=\\\"table\\\" \\n                :id=\\\"'grid_' + indicator.indicatorID + '_' + indicator.series + '_input'\\\" \\n                style=\\\"word-wrap: break-word; table-layout: fixed; height: 100%; display: table\\\">\\n                    <thead>\\n                    </thead>\\n                    <tbody>\\n                    </tbody>\\n                </table>\\n            </div>\\n            <button type=\\\"button\\\" class=\\\"buttonNorm\\\" :id=\\\"'addRowBtn_' + indicator.indicatorID\\\" \\n                title=\\\"Grid input add row\\\" aria-label=\\\"Grid input add row\\\" \\n                @click=\\\"addGridRow\\\">\\n                + Add row\\n            </button>\\n        </template>\\n\\n    </div>\"\n});\n\n//# sourceURL=webpack://leaf/./libs/js/LEAF/form_editor_vue_src/components/form_view/FormatPreview.js?");

/***/ }),

/***/ "./node_modules/css-loader/dist/runtime/api.js":
/*!*****************************************************!*\
  !*** ./node_modules/css-loader/dist/runtime/api.js ***!
  \*****************************************************/
/***/ ((module) => {

eval("\n/*\n  MIT License http://www.opensource.org/licenses/mit-license.php\n  Author Tobias Koppers @sokra\n*/\n\nmodule.exports = function (cssWithMappingToString) {\n  var list = []; // return the list of modules as css string\n\n  list.toString = function toString() {\n    return this.map(function (item) {\n      var content = \"\";\n      var needLayer = typeof item[5] !== \"undefined\";\n\n      if (item[4]) {\n        content += \"@supports (\".concat(item[4], \") {\");\n      }\n\n      if (item[2]) {\n        content += \"@media \".concat(item[2], \" {\");\n      }\n\n      if (needLayer) {\n        content += \"@layer\".concat(item[5].length > 0 ? \" \".concat(item[5]) : \"\", \" {\");\n      }\n\n      content += cssWithMappingToString(item);\n\n      if (needLayer) {\n        content += \"}\";\n      }\n\n      if (item[2]) {\n        content += \"}\";\n      }\n\n      if (item[4]) {\n        content += \"}\";\n      }\n\n      return content;\n    }).join(\"\");\n  }; // import a list of modules into the list\n\n\n  list.i = function i(modules, media, dedupe, supports, layer) {\n    if (typeof modules === \"string\") {\n      modules = [[null, modules, undefined]];\n    }\n\n    var alreadyImportedModules = {};\n\n    if (dedupe) {\n      for (var k = 0; k < this.length; k++) {\n        var id = this[k][0];\n\n        if (id != null) {\n          alreadyImportedModules[id] = true;\n        }\n      }\n    }\n\n    for (var _k = 0; _k < modules.length; _k++) {\n      var item = [].concat(modules[_k]);\n\n      if (dedupe && alreadyImportedModules[item[0]]) {\n        continue;\n      }\n\n      if (typeof layer !== \"undefined\") {\n        if (typeof item[5] === \"undefined\") {\n          item[5] = layer;\n        } else {\n          item[1] = \"@layer\".concat(item[5].length > 0 ? \" \".concat(item[5]) : \"\", \" {\").concat(item[1], \"}\");\n          item[5] = layer;\n        }\n      }\n\n      if (media) {\n        if (!item[2]) {\n          item[2] = media;\n        } else {\n          item[1] = \"@media \".concat(item[2], \" {\").concat(item[1], \"}\");\n          item[2] = media;\n        }\n      }\n\n      if (supports) {\n        if (!item[4]) {\n          item[4] = \"\".concat(supports);\n        } else {\n          item[1] = \"@supports (\".concat(item[4], \") {\").concat(item[1], \"}\");\n          item[4] = supports;\n        }\n      }\n\n      list.push(item);\n    }\n  };\n\n  return list;\n};\n\n//# sourceURL=webpack://leaf/./node_modules/css-loader/dist/runtime/api.js?");

/***/ }),

/***/ "./node_modules/css-loader/dist/runtime/noSourceMaps.js":
/*!**************************************************************!*\
  !*** ./node_modules/css-loader/dist/runtime/noSourceMaps.js ***!
  \**************************************************************/
/***/ ((module) => {

eval("\n\nmodule.exports = function (i) {\n  return i[1];\n};\n\n//# sourceURL=webpack://leaf/./node_modules/css-loader/dist/runtime/noSourceMaps.js?");

/***/ }),

/***/ "./node_modules/css-loader/dist/cjs.js!./node_modules/sass-loader/dist/cjs.js!./libs/js/LEAF/form_editor_vue_src/LEAF_FormEditor.scss":
/*!********************************************************************************************************************************************!*\
  !*** ./node_modules/css-loader/dist/cjs.js!./node_modules/sass-loader/dist/cjs.js!./libs/js/LEAF/form_editor_vue_src/LEAF_FormEditor.scss ***!
  \********************************************************************************************************************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _node_modules_css_loader_dist_runtime_noSourceMaps_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../../node_modules/css-loader/dist/runtime/noSourceMaps.js */ \"./node_modules/css-loader/dist/runtime/noSourceMaps.js\");\n/* harmony import */ var _node_modules_css_loader_dist_runtime_noSourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_noSourceMaps_js__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../../node_modules/css-loader/dist/runtime/api.js */ \"./node_modules/css-loader/dist/runtime/api.js\");\n/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__);\n// Imports\n\n\nvar ___CSS_LOADER_EXPORT___ = _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default()((_node_modules_css_loader_dist_runtime_noSourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default()));\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"/* NOTE: TODO: consolidate variables */\\n/*changed from Figma #f56600 to meet accessibility contrast*/\\nbody { /* fixes header not extending entire width */\\n  min-width: -moz-fit-content; /*firefox prior to nov 2021*/\\n  min-width: fit-content;\\n}\\n\\n#vue-formeditor-app {\\n  padding: 0.5em 1em;\\n  min-height: 100vh;\\n}\\n#vue-formeditor-app * {\\n  box-sizing: border-box;\\n}\\n\\nbutton.btn-general, button.btn-confirm {\\n  display: flex;\\n  justify-content: center;\\n  align-items: center;\\n  background-color: white;\\n  color: #005EA2;\\n  font-weight: bolder;\\n  padding: 0.4em;\\n  border: 2px solid #005EA2;\\n  border-radius: 4px;\\n  width: 95px;\\n  white-space: nowrap;\\n}\\nbutton.btn-general.disabled, button.btn-confirm.disabled {\\n  cursor: auto;\\n}\\nbutton.btn-general:not(.disabled):hover, button.btn-general:not(.disabled):focus, button.btn-general:not(.disabled):active, button.btn-confirm:not(.disabled):hover, button.btn-confirm:not(.disabled):focus, button.btn-confirm:not(.disabled):active {\\n  border: 2px solid black !important;\\n  box-shadow: 0 0 4px rgba(0, 0, 30, 0.4);\\n}\\n\\nbutton.btn-confirm {\\n  color: white;\\n  background-color: #005EA2;\\n}\\n\\n/* left menu / nav */\\n.mod-form-menu-nav {\\n  width: 180px;\\n  flex: 0 0 180px;\\n  margin-right: 1em;\\n}\\n.mod-form-menu-nav ul {\\n  width: 100%;\\n  list-style-type: none;\\n  margin: 0;\\n  padding: 0;\\n}\\n.mod-form-menu-nav li {\\n  height: auto;\\n  margin-bottom: 1em;\\n}\\n.mod-form-menu-nav a {\\n  display: flex;\\n  justify-content: center;\\n  align-items: center;\\n  justify-content: space-between;\\n  height: 100%;\\n  min-height: 40px;\\n  border: 1px solid #000;\\n  border-radius: 2px;\\n  text-decoration: none;\\n  background-color: #e8f2ff;\\n  color: #1b1b1b;\\n  padding: 0 0.4em;\\n  overflow: hidden;\\n}\\n.mod-form-menu-nav a.selected, .mod-form-menu-nav a:hover, .mod-form-menu-nav a:focus, .mod-form-menu-nav a:active {\\n  border: 1px solid #000 !important;\\n  background-color: #005EA2;\\n  outline: 3px solid #20a0f0 !important;\\n  color: white;\\n}\\n.mod-form-menu-nav #stapledArea ul {\\n  list-style-type: disc;\\n  padding-inline-start: 35px;\\n  margin-bottom: 2em;\\n}\\n\\n/* base dialog modal styling */\\n#leaf-vue-dialog-background {\\n  display: flex;\\n  justify-content: center;\\n  align-items: center;\\n  width: 100vw;\\n  height: 100%;\\n  z-index: 999;\\n  background-color: rgba(0, 0, 20, 0.5);\\n  position: absolute;\\n  left: 0;\\n  top: 0;\\n}\\n\\n.leaf-vue-dialog {\\n  position: absolute;\\n  margin: auto;\\n  width: auto;\\n  resize: horizontal;\\n  z-index: 9999;\\n  min-width: 400px;\\n  max-width: 900px;\\n  height: auto;\\n  min-height: 0;\\n  border-radius: 4px;\\n  background-color: white;\\n  box-shadow: 0 0 5px 1px rgba(0, 0, 25, 0.25);\\n  overflow: hidden;\\n}\\n.leaf-vue-dialog > div {\\n  padding: 0.75em;\\n}\\n.leaf-vue-dialog table {\\n  border-collapse: separate;\\n  border-spacing: 0 0.5em;\\n}\\n.leaf-vue-dialog table td {\\n  white-space: nowrap;\\n}\\n.leaf-vue-dialog table td:not(:last-child) {\\n  padding-right: 0.4em;\\n}\\n.leaf-vue-dialog .leaf-vue-dialog-title {\\n  color: #252f3e;\\n  border-top: 3px solid white;\\n  border-left: 3px solid white;\\n  border-right: 3px solid #cadff0;\\n  border-bottom: 3px solid #cadff0;\\n  border-radius: 3px;\\n  background-color: #E0F4FA;\\n  cursor: move;\\n}\\n.leaf-vue-dialog .leaf-vue-dialog-title h2 {\\n  color: inherit;\\n  margin: 0;\\n}\\n.leaf-vue-dialog #leaf-vue-dialog-close {\\n  display: flex;\\n  justify-content: center;\\n  align-items: center;\\n  position: absolute;\\n  top: 8px;\\n  right: 8px;\\n  width: 25px;\\n  height: 25px;\\n  cursor: pointer;\\n  font-weight: bold;\\n}\\n.leaf-vue-dialog #leaf-vue-dialog-cancel-save {\\n  display: flex;\\n  justify-content: space-between;\\n  margin-top: 1em;\\n}\\n.leaf-vue-dialog select, .leaf-vue-dialog input:not([type=checkbox]) {\\n  width: 50%;\\n}\\n.leaf-vue-dialog input[type=file] {\\n  width: 100%;\\n}\\n.leaf-vue-dialog div.cell {\\n  min-width: 150px;\\n  text-align: center;\\n  border: 1px grey solid;\\n  padding: 10px;\\n  vertical-align: top;\\n  display: table-cell;\\n}\\n.leaf-vue-dialog div.cell input, .leaf-vue-dialog div.cell select {\\n  width: 100%;\\n  margin-bottom: 0.5rem;\\n}\\n\\n/* panel where edit properties modal is accessed from */\\n#edit-properties-panel {\\n  position: relative;\\n  display: flex;\\n  min-height: 100px;\\n  justify-content: space-between;\\n  margin-bottom: 1em;\\n  background-color: white;\\n  padding: 0.5rem 0.75rem;\\n  border: 1px solid black;\\n}\\n#edit-properties-panel .form-id-label {\\n  position: absolute;\\n  right: 0.75rem;\\n  bottom: 0.5rem;\\n  font-size: 12px;\\n}\\n\\n/*  edit-properties modal itself */\\ntable#edit-properties-modal td:first-child {\\n  position: relative;\\n  padding-left: 20px;\\n}\\ntable#edit-properties-modal img {\\n  position: absolute;\\n  left: 0;\\n  top: 50%;\\n  transform: translate(0, -40%);\\n}\\ntable#edit-properties-modal textarea {\\n  width: 100%;\\n  height: 50px;\\n}\\n\\n/* Form History modal */\\n#history-slice td {\\n  font-size: 14px !important;\\n}\\n\\n#history-page-buttons button#next, #history-slice button#prev {\\n  width: 135px;\\n}\\n\\n/* form browser cards */\\n.browser-category-card {\\n  position: relative;\\n  margin: 0 1em 1em 0;\\n  width: 300px;\\n  height: 150px;\\n  background-color: white;\\n  cursor: pointer;\\n  transition: box-shadow 0.3s ease;\\n  border-radius: 4px;\\n  color: black;\\n  overflow: hidden;\\n  box-shadow: 1px 1px 2px 1px rgba(0, 0, 20, 0.4);\\n}\\n.browser-category-card:hover, .browser-category-card:focus, .browser-category-card:active {\\n  box-shadow: 0 4px 6px 3px rgba(0, 0, 20, 0.25);\\n}\\n.browser-category-card > div {\\n  overflow: hidden;\\n  white-space: normal;\\n  text-overflow: ellipsis;\\n  padding: 0.2em 0.4em;\\n}\\n.browser-category-card .formPreviewTitle {\\n  font-weight: bold;\\n}\\n.browser-category-card .formPreviewDescription {\\n  justify-self: end;\\n  height: 80px;\\n  font-size: 14px;\\n  line-height: 1.2;\\n}\\n.browser-category-card .formPreviewStatus {\\n  font-size: 80%;\\n  color: rgb(200, 0, 0);\\n}\\n.browser-category-card .formPreviewWorkflow {\\n  justify-self: end;\\n  height: 26px;\\n  width: 100%;\\n  color: white;\\n  background-color: #162e51;\\n}\\n\\ndiv#form_content_view {\\n  margin: 0 auto;\\n  display: flex;\\n  flex-direction: column;\\n  max-width: 2000px;\\n  width: 100%;\\n}\\n\\n#form_index_and_editing {\\n  display: flex;\\n}\\n\\n/* form index */\\n#form_index_display {\\n  position: relative;\\n  margin: 0;\\n  padding: 0.75rem 0.75rem 0.25rem 0.75rem;\\n  width: 375px;\\n  flex: 0 0 375px;\\n  align-self: flex-start;\\n  margin-right: 1em;\\n  background-color: white;\\n  border-radius: 4px;\\n  box-shadow: 1px 1px 2px 1px rgba(0, 0, 20, 0.4);\\n}\\n#form_index_display #can_update {\\n  position: absolute;\\n  right: 0.75rem;\\n  cursor: pointer;\\n  font-size: 90%;\\n  margin: 0;\\n  padding: 0.2em 0.4em;\\n  border: 2px solid #005EA2;\\n  border-radius: 3px;\\n  color: #005EA2;\\n  font-weight: bolder;\\n  background-color: white;\\n}\\n#form_index_display #can_update:hover, #form_index_display #can_update:focus, #form_index_display #can_update:active {\\n  background-color: #005EA2;\\n  color: white;\\n  border: 2px solid #005EA2 !important;\\n}\\n#form_index_display .section_heading {\\n  font-weight: bolder;\\n  color: #005EA2;\\n}\\n#form_index_display .subindicator_heading {\\n  font-weight: normal;\\n  color: black;\\n}\\n#form_index_display ul {\\n  margin: 0;\\n  padding: 0 0 4px 0; /* btm padding needed for drop zones */\\n  padding-left: 1em;\\n  display: flex;\\n  flex-direction: column;\\n  list-style-type: none;\\n  min-height: 6px; /*NOTE: min height needed for drop zones*/\\n}\\n#form_index_display ul#base_drop_area {\\n  padding: 0 0 6px 0;\\n}\\n#form_index_display ul.entered-drop-zone {\\n  background-color: #e8ebf0;\\n}\\n#form_index_display li {\\n  position: relative;\\n  cursor: grab;\\n  margin: 0.2em 0; /* there needs to be a margin to hilite the current drop zone */\\n  border-radius: 2px;\\n  outline: none !important;\\n}\\n#form_index_display li > div {\\n  display: flex;\\n  align-items: center;\\n  width: 100%;\\n  height: 40px;\\n  border-bottom: 1px solid #d0d0d4;\\n  padding-bottom: 0.9em;\\n}\\n#form_index_display li > div .icon_move_container {\\n  display: flex;\\n  justify-content: center;\\n  align-items: center;\\n  flex-direction: column;\\n  margin-left: auto;\\n  margin-right: 0.2em;\\n}\\n#form_index_display li > div .icon_move_container .icon_move {\\n  display: flex;\\n  justify-content: center;\\n  align-items: center;\\n  cursor: pointer;\\n  width: 0;\\n  height: 0;\\n  background-color: transparent;\\n  border-radius: 2px;\\n  border: 8px solid transparent;\\n  margin-left: auto;\\n}\\n#form_index_display li > div .icon_move_container .icon_move.up {\\n  margin-bottom: 0.4em;\\n  border-bottom: 14px solid #162e51;\\n}\\n#form_index_display li > div .icon_move_container .icon_move.up:hover, #form_index_display li > div .icon_move_container .icon_move.up:focus, #form_index_display li > div .icon_move_container .icon_move.up:active {\\n  outline: none !important;\\n  border-bottom: 14px solid #00bde3;\\n}\\n#form_index_display li > div .icon_move_container .icon_move.down {\\n  border-top: 14px solid #162e51;\\n}\\n#form_index_display li > div .icon_move_container .icon_move.down:hover, #form_index_display li > div .icon_move_container .icon_move.down:focus, #form_index_display li > div .icon_move_container .icon_move.down:active {\\n  outline: none !important;\\n  border-top: 14px solid #00bde3;\\n}\\n#form_index_display li > div .sub-menu-chevron {\\n  height: 100%;\\n  align-self: center;\\n  font-size: 1.4em;\\n  font-weight: bold;\\n  border-radius: 3px;\\n  cursor: pointer;\\n  transform: scaleX(0.6);\\n}\\n#form_index_display li:first-child {\\n  margin-top: 0.8em;\\n}\\n#form_index_display li:last-child {\\n  margin-bottom: 0;\\n}\\n#form_index_display li.index-selected::before, #form_index_display li:focus::before {\\n  position: absolute;\\n  top: -0.2em;\\n  left: -0.5em;\\n  content: \\\"\\\";\\n  width: 3px;\\n  height: calc(100% - 0.6em);\\n  border-radius: 60%/3px;\\n  background-color: #005EA2;\\n}\\n\\n/* form editing and entry preview */\\n#form_entry_and_preview {\\n  display: flex;\\n  flex-direction: column;\\n  align-self: flex-start;\\n  width: 100%;\\n  background-color: white;\\n  border: 1px solid black;\\n}\\n#form_entry_and_preview .form-section-header {\\n  display: flex;\\n  align-items: center;\\n  padding: 0.4rem 0.75rem;\\n  background-color: #005EA2;\\n  border-top: 2px solid black;\\n}\\n#form_entry_and_preview .form-section-header h3 {\\n  margin: 0;\\n  width: 100%;\\n  height: 100%;\\n  color: white;\\n}\\n#form_entry_and_preview .form-section-header #indicator_toolbar_toggle {\\n  cursor: pointer;\\n  width: 100px;\\n  flex: 0 0 100px;\\n  background-color: #162e51;\\n  color: #f0f2fd;\\n  padding: 0.15em 0.4em;\\n  border: 1px solid black;\\n  border-radius: 2px;\\n  font-size: 90%;\\n}\\n#form_entry_and_preview .form-section-header #indicator_toolbar_toggle:hover, #form_entry_and_preview .form-section-header #indicator_toolbar_toggle:focus, #form_entry_and_preview .form-section-header #indicator_toolbar_toggle:active {\\n  background-color: black;\\n  color: white;\\n  border: 1px solid white !important;\\n}\\n#form_entry_and_preview div.printformblock {\\n  page-break-inside: avoid;\\n}\\n#form_entry_and_preview div.printResponse {\\n  width: 100%;\\n  padding: 0;\\n  float: none; /* style.css style collision */\\n}\\n#form_entry_and_preview button.icon {\\n  margin-right: 0.3em;\\n  padding: 0;\\n  background-color: transparent;\\n  border-radius: 2px;\\n  border: 0;\\n}\\n#form_entry_and_preview button.icon:hover, #form_entry_and_preview button.icon:focus, #form_entry_and_preview button.icon:active {\\n  outline: 3px solid #1476bd !important;\\n}\\n#form_entry_and_preview button.icon img {\\n  display: block;\\n}\\n#form_entry_and_preview button.add-subquestion {\\n  padding: 0.2em 0.4em 0.1em 0.4em;\\n  font-size: 90%;\\n  width: -moz-fit-content; /*firefox prior to nov 2021*/\\n  width: fit-content;\\n}\\n#form_entry_and_preview .form_editing_area {\\n  padding-bottom: 1rem;\\n}\\n#form_entry_and_preview .form_editing_area.conditional-show {\\n  color: white;\\n  background-color: #162e51;\\n}\\n#form_entry_and_preview .form_editing_area > div {\\n  padding: 0.5rem 0.75rem;\\n}\\n#form_entry_and_preview .form_editing_area .indicator-name-preview {\\n  padding: 0.75rem 0.75rem 0 0.75rem;\\n  /* text editor can insert p tags when used.  this keeps them from disrupting icons in the indicator name display */\\n}\\n#form_entry_and_preview .form_editing_area .indicator-name-preview > p {\\n  display: inline;\\n}\\n#form_entry_and_preview .form_editing_area .indicator-name-preview .input-required-sensitive {\\n  color: Red;\\n  margin-left: 0.4em;\\n}\\n#form_entry_and_preview .form_editing_area div[id^=form_editing_toolbar_] {\\n  padding: 0.2rem 0.75rem;\\n  display: flex;\\n  justify-content: space-between;\\n  align-items: center;\\n  background-color: #f0f2fd;\\n  border-top: 1px solid black;\\n  font-size: 90%;\\n  color: black;\\n}\\n#form_entry_and_preview .form_editing_area div[id^=form_editing_toolbar_] .toolbar-edit {\\n  background-color: #005EA2;\\n  color: white;\\n  margin: 0 0.4em;\\n  padding: 0.2em 0.6em;\\n  font-size: 70%;\\n  height: 100%;\\n  border-radius: 4px;\\n  letter-spacing: 1px;\\n}\\n#form_entry_and_preview .form_editing_area.form-header .indicator-name-preview, #form_entry_and_preview .form_editing_area.form-header div[id^=form_editing_toolbar_] {\\n  font-size: 116%;\\n}\\n#form_entry_and_preview .form_editing_area .form_data_entry_preview {\\n  padding: 0 0.75rem;\\n}\\n#form_entry_and_preview .form_editing_area .form_data_entry_preview .format-preview {\\n  position: relative;\\n  margin-top: 0.2em;\\n  /* format specific styling */\\n  /* checkboxes and radio */\\n  /** modifications to choicesjs styles **/\\n}\\n#form_entry_and_preview .form_editing_area .form_data_entry_preview .format-preview .text_input_preview {\\n  display: inline-block;\\n  width: 50%;\\n  font-size: 1.3em;\\n  font-family: monospace;\\n  background-color: white;\\n  border: 1px solid gray;\\n  padding: 0.25em;\\n}\\n#form_entry_and_preview .form_editing_area .form_data_entry_preview .format-preview .textarea_input_preview {\\n  width: 100%;\\n  padding: 0.5em;\\n  font-size: 1.3em;\\n  font-family: monospace;\\n}\\n#form_entry_and_preview .form_editing_area .form_data_entry_preview .format-preview div.tableinput { /* fixes for grid tables */\\n  overflow: scroll;\\n  max-width: 900px;\\n}\\n#form_entry_and_preview .form_editing_area .form_data_entry_preview .format-preview div.tableinput table {\\n  margin: 0;\\n}\\n#form_entry_and_preview .form_editing_area .form_data_entry_preview .format-preview div.tableinput table input {\\n  width: 100%;\\n}\\n#form_entry_and_preview .form_editing_area .form_data_entry_preview .format-preview div.tableinput table img {\\n  max-width: none;\\n}\\n#form_entry_and_preview .form_editing_area .form_data_entry_preview .format-preview .employeeSelectorInput, #form_entry_and_preview .form_editing_area .form_data_entry_preview .format-preview .groupSelectorInput, #form_entry_and_preview .form_editing_area .form_data_entry_preview .format-preview .positionSelectorInput {\\n  margin-bottom: 0.5em;\\n}\\n#form_entry_and_preview .form_editing_area .form_data_entry_preview .format-preview .checkable.leaf_check {\\n  font-family: Source Sans Pro Web, sans-serif;\\n  cursor: pointer;\\n  position: relative;\\n  display: flex;\\n  align-items: center;\\n  width: -moz-fit-content;\\n  width: fit-content;\\n  max-width: 600px;\\n  margin-bottom: 0.2em;\\n}\\n#form_entry_and_preview .form_editing_area .form_data_entry_preview .format-preview input[class*=icheck][class*=leaf_check],\\n#form_entry_and_preview .form_editing_area .form_data_entry_preview .format-preview input[class*=ischecked][class*=leaf_check] {\\n  opacity: 0;\\n  margin-right: 0.2em;\\n  cursor: pointer;\\n  width: 20px;\\n  flex: 0 0 20px;\\n  height: 20px;\\n  margin: 4px 10px 4px 0;\\n}\\n#form_entry_and_preview .form_editing_area .form_data_entry_preview .format-preview span.leaf_check {\\n  position: absolute;\\n  top: 50%;\\n  transform: translate(0, -50%);\\n  left: 4px;\\n  width: 20px;\\n  height: 20px;\\n  background-color: transparent;\\n  border: 1px solid rgb(151, 150, 149);\\n}\\n#form_entry_and_preview .form_editing_area .form_data_entry_preview .format-preview span.leaf_check:hover, #form_entry_and_preview .form_editing_area .form_data_entry_preview .format-preview span.leaf_check:focus, #form_entry_and_preview .form_editing_area .form_data_entry_preview .format-preview span.leaf_check:active,\\n#form_entry_and_preview .form_editing_area .form_data_entry_preview .format-preview input[class*=ischecked][class*=leaf_check]:focus ~ span.leaf_check,\\n#form_entry_and_preview .form_editing_area .form_data_entry_preview .format-preview input[class*=icheck][class*=leaf_check]:focus ~ span.leaf_check {\\n  border: 2px solid #47e;\\n}\\n#form_entry_and_preview .form_editing_area .form_data_entry_preview .format-preview input[type=radio][class*=icheck][class*=leaf_check] ~ span.leaf_check {\\n  border-radius: 50%;\\n}\\n#form_entry_and_preview .form_editing_area .form_data_entry_preview .format-preview span.leaf_check::after {\\n  content: \\\"\\\";\\n  box-sizing: content-box; /* needed to fix leaf.css collision */\\n  position: absolute;\\n  top: 10%;\\n  left: 30%;\\n  width: 25%;\\n  height: 50%;\\n  background-color: transparent;\\n  border: 1px solid #FFF;\\n  border-width: 0px 3px 3px 0px;\\n  border-radius: 2px;\\n  transform: rotate(40deg);\\n  display: none;\\n}\\n#form_entry_and_preview .form_editing_area .form_data_entry_preview .format-preview input[class*=icheck][class*=leaf_check]:checked ~ span.leaf_check,\\n#form_entry_and_preview .form_editing_area .form_data_entry_preview .format-preview input[class*=ischecked][class*=leaf_check]:checked ~ span.leaf_check {\\n  background-color: #47e;\\n  border: 1px solid #47e;\\n  opacity: 1;\\n}\\n#form_entry_and_preview .form_editing_area .form_data_entry_preview .format-preview input[class*=icheck][class*=leaf_check]:checked ~ span.leaf_check::after,\\n#form_entry_and_preview .form_editing_area .form_data_entry_preview .format-preview input[class*=ischecked][class*=leaf_check]:checked ~ span.leaf_check::after {\\n  display: block;\\n}\\n#form_entry_and_preview .form_editing_area .form_data_entry_preview .format-preview .choices__inner div.choices__item.choices__item--selectable,\\n#form_entry_and_preview .form_editing_area .form_data_entry_preview .format-preview .choices__inner div.choices__item.is-highlighted {\\n  background-color: #f6faff;\\n  background-image: linear-gradient(0, #eee 50%, #fff 53%);\\n  border: 1px solid #aaa;\\n  border-radius: 4px;\\n  color: black;\\n}\\n#form_entry_and_preview .form_editing_area .form_data_entry_preview .format-preview button.choices__button {\\n  filter: brightness(25%);\\n}\\n#form_entry_and_preview .form_editing_area .form_data_entry_preview .format-preview button.choices__button:hover, #form_entry_and_preview .form_editing_area .form_data_entry_preview .format-preview button.choices__button:focus, #form_entry_and_preview .form_editing_area .form_data_entry_preview .format-preview button.choices__button:active {\\n  filter: brightness(0);\\n  transform: scale(1.05);\\n}\\n#form_entry_and_preview .form_editing_area .form_data_entry_preview .format-preview .choices__list.choices__list--dropdown.is-active .is-highlighted {\\n  background-color: #E8F2FF;\\n  box-shadow: 0px 0px 1px 1px rgba(0, 165, 187, 0.3764705882) inset;\\n}\\n#form_entry_and_preview .form_editing_area .form_data_entry_preview .format-preview .choices__list[aria-expanded] .choices__item--selectable.is-highlighted::after {\\n  opacity: 0.75;\\n}\\n#form_entry_and_preview .form_editing_area .form_data_entry_preview .format-preview .choices input { /* prevent leaf.css corruption */\\n  float: none;\\n}\\n#form_entry_and_preview .form_editing_area .form_data_entry_preview .format-preview .choices input:hover, #form_entry_and_preview .form_editing_area .form_data_entry_preview .format-preview .choices input:focus, #form_entry_and_preview .form_editing_area .form_data_entry_preview .format-preview .choices input:active {\\n  outline: none;\\n}\\n\\n@media only screen and (max-width: 550px) {\\n  #vue-formeditor-app {\\n    padding: 1rem 0;\\n    min-width: 350px;\\n  }\\n  #vue-formeditor-app > div {\\n    flex-direction: column;\\n  }\\n  #vue-formeditor-app > div .mod-form-menu-nav {\\n    width: 100%;\\n    margin: 0;\\n  }\\n  #vue-formeditor-app > div .mod-form-menu-nav a {\\n    border-radius: 0;\\n  }\\n  #vue-formeditor-app div#form_content_view {\\n    margin: 0;\\n  }\\n  #vue-formeditor-app #form_entry_and_preview {\\n    min-width: 400px;\\n  }\\n  #vue-formeditor-app #form_index_and_editing {\\n    flex-direction: column;\\n  }\\n  #vue-formeditor-app #form_index_and_editing #form_index_display {\\n    width: 100%;\\n    margin: 0;\\n    margin-bottom: 1rem;\\n    flex: 0 0 100%;\\n  }\\n  #vue-formeditor-app #form_index_and_editing .form_editing_area.form-header .indicator-name-preview, #vue-formeditor-app #form_index_and_editing .form_editing_area.form-header div[id^=form_editing_toolbar_] {\\n    font-size: 100%;\\n  }\\n}\", \"\"]);\n// Exports\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (___CSS_LOADER_EXPORT___);\n\n\n//# sourceURL=webpack://leaf/./libs/js/LEAF/form_editor_vue_src/LEAF_FormEditor.scss?./node_modules/css-loader/dist/cjs.js!./node_modules/sass-loader/dist/cjs.js");

/***/ }),

/***/ "./libs/js/LEAF/form_editor_vue_src/LEAF_FormEditor.scss":
/*!***************************************************************!*\
  !*** ./libs/js/LEAF/form_editor_vue_src/LEAF_FormEditor.scss ***!
  \***************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! !../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js */ \"./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n/* harmony import */ var _node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _node_modules_style_loader_dist_runtime_styleDomAPI_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! !../../../../node_modules/style-loader/dist/runtime/styleDomAPI.js */ \"./node_modules/style-loader/dist/runtime/styleDomAPI.js\");\n/* harmony import */ var _node_modules_style_loader_dist_runtime_styleDomAPI_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_node_modules_style_loader_dist_runtime_styleDomAPI_js__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _node_modules_style_loader_dist_runtime_insertBySelector_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! !../../../../node_modules/style-loader/dist/runtime/insertBySelector.js */ \"./node_modules/style-loader/dist/runtime/insertBySelector.js\");\n/* harmony import */ var _node_modules_style_loader_dist_runtime_insertBySelector_js__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_node_modules_style_loader_dist_runtime_insertBySelector_js__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _node_modules_style_loader_dist_runtime_setAttributesWithoutAttributes_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! !../../../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js */ \"./node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\");\n/* harmony import */ var _node_modules_style_loader_dist_runtime_setAttributesWithoutAttributes_js__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_node_modules_style_loader_dist_runtime_setAttributesWithoutAttributes_js__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var _node_modules_style_loader_dist_runtime_insertStyleElement_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! !../../../../node_modules/style-loader/dist/runtime/insertStyleElement.js */ \"./node_modules/style-loader/dist/runtime/insertStyleElement.js\");\n/* harmony import */ var _node_modules_style_loader_dist_runtime_insertStyleElement_js__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(_node_modules_style_loader_dist_runtime_insertStyleElement_js__WEBPACK_IMPORTED_MODULE_4__);\n/* harmony import */ var _node_modules_style_loader_dist_runtime_styleTagTransform_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! !../../../../node_modules/style-loader/dist/runtime/styleTagTransform.js */ \"./node_modules/style-loader/dist/runtime/styleTagTransform.js\");\n/* harmony import */ var _node_modules_style_loader_dist_runtime_styleTagTransform_js__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(_node_modules_style_loader_dist_runtime_styleTagTransform_js__WEBPACK_IMPORTED_MODULE_5__);\n/* harmony import */ var _node_modules_css_loader_dist_cjs_js_node_modules_sass_loader_dist_cjs_js_LEAF_FormEditor_scss__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! !!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/sass-loader/dist/cjs.js!./LEAF_FormEditor.scss */ \"./node_modules/css-loader/dist/cjs.js!./node_modules/sass-loader/dist/cjs.js!./libs/js/LEAF/form_editor_vue_src/LEAF_FormEditor.scss\");\n\n      \n      \n      \n      \n      \n      \n      \n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = (_node_modules_style_loader_dist_runtime_styleTagTransform_js__WEBPACK_IMPORTED_MODULE_5___default());\noptions.setAttributes = (_node_modules_style_loader_dist_runtime_setAttributesWithoutAttributes_js__WEBPACK_IMPORTED_MODULE_3___default());\n\n      options.insert = _node_modules_style_loader_dist_runtime_insertBySelector_js__WEBPACK_IMPORTED_MODULE_2___default().bind(null, \"head\");\n    \noptions.domAPI = (_node_modules_style_loader_dist_runtime_styleDomAPI_js__WEBPACK_IMPORTED_MODULE_1___default());\noptions.insertStyleElement = (_node_modules_style_loader_dist_runtime_insertStyleElement_js__WEBPACK_IMPORTED_MODULE_4___default());\n\nvar update = _node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0___default()(_node_modules_css_loader_dist_cjs_js_node_modules_sass_loader_dist_cjs_js_LEAF_FormEditor_scss__WEBPACK_IMPORTED_MODULE_6__[\"default\"], options);\n\n\n\n\n       /* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (_node_modules_css_loader_dist_cjs_js_node_modules_sass_loader_dist_cjs_js_LEAF_FormEditor_scss__WEBPACK_IMPORTED_MODULE_6__[\"default\"] && _node_modules_css_loader_dist_cjs_js_node_modules_sass_loader_dist_cjs_js_LEAF_FormEditor_scss__WEBPACK_IMPORTED_MODULE_6__[\"default\"].locals ? _node_modules_css_loader_dist_cjs_js_node_modules_sass_loader_dist_cjs_js_LEAF_FormEditor_scss__WEBPACK_IMPORTED_MODULE_6__[\"default\"].locals : undefined);\n\n\n//# sourceURL=webpack://leaf/./libs/js/LEAF/form_editor_vue_src/LEAF_FormEditor.scss?");

/***/ }),

/***/ "./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js":
/*!****************************************************************************!*\
  !*** ./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js ***!
  \****************************************************************************/
/***/ ((module) => {

eval("\n\nvar stylesInDOM = [];\n\nfunction getIndexByIdentifier(identifier) {\n  var result = -1;\n\n  for (var i = 0; i < stylesInDOM.length; i++) {\n    if (stylesInDOM[i].identifier === identifier) {\n      result = i;\n      break;\n    }\n  }\n\n  return result;\n}\n\nfunction modulesToDom(list, options) {\n  var idCountMap = {};\n  var identifiers = [];\n\n  for (var i = 0; i < list.length; i++) {\n    var item = list[i];\n    var id = options.base ? item[0] + options.base : item[0];\n    var count = idCountMap[id] || 0;\n    var identifier = \"\".concat(id, \" \").concat(count);\n    idCountMap[id] = count + 1;\n    var indexByIdentifier = getIndexByIdentifier(identifier);\n    var obj = {\n      css: item[1],\n      media: item[2],\n      sourceMap: item[3],\n      supports: item[4],\n      layer: item[5]\n    };\n\n    if (indexByIdentifier !== -1) {\n      stylesInDOM[indexByIdentifier].references++;\n      stylesInDOM[indexByIdentifier].updater(obj);\n    } else {\n      var updater = addElementStyle(obj, options);\n      options.byIndex = i;\n      stylesInDOM.splice(i, 0, {\n        identifier: identifier,\n        updater: updater,\n        references: 1\n      });\n    }\n\n    identifiers.push(identifier);\n  }\n\n  return identifiers;\n}\n\nfunction addElementStyle(obj, options) {\n  var api = options.domAPI(options);\n  api.update(obj);\n\n  var updater = function updater(newObj) {\n    if (newObj) {\n      if (newObj.css === obj.css && newObj.media === obj.media && newObj.sourceMap === obj.sourceMap && newObj.supports === obj.supports && newObj.layer === obj.layer) {\n        return;\n      }\n\n      api.update(obj = newObj);\n    } else {\n      api.remove();\n    }\n  };\n\n  return updater;\n}\n\nmodule.exports = function (list, options) {\n  options = options || {};\n  list = list || [];\n  var lastIdentifiers = modulesToDom(list, options);\n  return function update(newList) {\n    newList = newList || [];\n\n    for (var i = 0; i < lastIdentifiers.length; i++) {\n      var identifier = lastIdentifiers[i];\n      var index = getIndexByIdentifier(identifier);\n      stylesInDOM[index].references--;\n    }\n\n    var newLastIdentifiers = modulesToDom(newList, options);\n\n    for (var _i = 0; _i < lastIdentifiers.length; _i++) {\n      var _identifier = lastIdentifiers[_i];\n\n      var _index = getIndexByIdentifier(_identifier);\n\n      if (stylesInDOM[_index].references === 0) {\n        stylesInDOM[_index].updater();\n\n        stylesInDOM.splice(_index, 1);\n      }\n    }\n\n    lastIdentifiers = newLastIdentifiers;\n  };\n};\n\n//# sourceURL=webpack://leaf/./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js?");

/***/ }),

/***/ "./node_modules/style-loader/dist/runtime/insertBySelector.js":
/*!********************************************************************!*\
  !*** ./node_modules/style-loader/dist/runtime/insertBySelector.js ***!
  \********************************************************************/
/***/ ((module) => {

eval("\n\nvar memo = {};\n/* istanbul ignore next  */\n\nfunction getTarget(target) {\n  if (typeof memo[target] === \"undefined\") {\n    var styleTarget = document.querySelector(target); // Special case to return head of iframe instead of iframe itself\n\n    if (window.HTMLIFrameElement && styleTarget instanceof window.HTMLIFrameElement) {\n      try {\n        // This will throw an exception if access to iframe is blocked\n        // due to cross-origin restrictions\n        styleTarget = styleTarget.contentDocument.head;\n      } catch (e) {\n        // istanbul ignore next\n        styleTarget = null;\n      }\n    }\n\n    memo[target] = styleTarget;\n  }\n\n  return memo[target];\n}\n/* istanbul ignore next  */\n\n\nfunction insertBySelector(insert, style) {\n  var target = getTarget(insert);\n\n  if (!target) {\n    throw new Error(\"Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.\");\n  }\n\n  target.appendChild(style);\n}\n\nmodule.exports = insertBySelector;\n\n//# sourceURL=webpack://leaf/./node_modules/style-loader/dist/runtime/insertBySelector.js?");

/***/ }),

/***/ "./node_modules/style-loader/dist/runtime/insertStyleElement.js":
/*!**********************************************************************!*\
  !*** ./node_modules/style-loader/dist/runtime/insertStyleElement.js ***!
  \**********************************************************************/
/***/ ((module) => {

eval("\n\n/* istanbul ignore next  */\nfunction insertStyleElement(options) {\n  var element = document.createElement(\"style\");\n  options.setAttributes(element, options.attributes);\n  options.insert(element, options.options);\n  return element;\n}\n\nmodule.exports = insertStyleElement;\n\n//# sourceURL=webpack://leaf/./node_modules/style-loader/dist/runtime/insertStyleElement.js?");

/***/ }),

/***/ "./node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js ***!
  \**********************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\n\n/* istanbul ignore next  */\nfunction setAttributesWithoutAttributes(styleElement) {\n  var nonce =  true ? __webpack_require__.nc : 0;\n\n  if (nonce) {\n    styleElement.setAttribute(\"nonce\", nonce);\n  }\n}\n\nmodule.exports = setAttributesWithoutAttributes;\n\n//# sourceURL=webpack://leaf/./node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js?");

/***/ }),

/***/ "./node_modules/style-loader/dist/runtime/styleDomAPI.js":
/*!***************************************************************!*\
  !*** ./node_modules/style-loader/dist/runtime/styleDomAPI.js ***!
  \***************************************************************/
/***/ ((module) => {

eval("\n\n/* istanbul ignore next  */\nfunction apply(styleElement, options, obj) {\n  var css = \"\";\n\n  if (obj.supports) {\n    css += \"@supports (\".concat(obj.supports, \") {\");\n  }\n\n  if (obj.media) {\n    css += \"@media \".concat(obj.media, \" {\");\n  }\n\n  var needLayer = typeof obj.layer !== \"undefined\";\n\n  if (needLayer) {\n    css += \"@layer\".concat(obj.layer.length > 0 ? \" \".concat(obj.layer) : \"\", \" {\");\n  }\n\n  css += obj.css;\n\n  if (needLayer) {\n    css += \"}\";\n  }\n\n  if (obj.media) {\n    css += \"}\";\n  }\n\n  if (obj.supports) {\n    css += \"}\";\n  }\n\n  var sourceMap = obj.sourceMap;\n\n  if (sourceMap && typeof btoa !== \"undefined\") {\n    css += \"\\n/*# sourceMappingURL=data:application/json;base64,\".concat(btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))), \" */\");\n  } // For old IE\n\n  /* istanbul ignore if  */\n\n\n  options.styleTagTransform(css, styleElement, options.options);\n}\n\nfunction removeStyleElement(styleElement) {\n  // istanbul ignore if\n  if (styleElement.parentNode === null) {\n    return false;\n  }\n\n  styleElement.parentNode.removeChild(styleElement);\n}\n/* istanbul ignore next  */\n\n\nfunction domAPI(options) {\n  var styleElement = options.insertStyleElement(options);\n  return {\n    update: function update(obj) {\n      apply(styleElement, options, obj);\n    },\n    remove: function remove() {\n      removeStyleElement(styleElement);\n    }\n  };\n}\n\nmodule.exports = domAPI;\n\n//# sourceURL=webpack://leaf/./node_modules/style-loader/dist/runtime/styleDomAPI.js?");

/***/ }),

/***/ "./node_modules/style-loader/dist/runtime/styleTagTransform.js":
/*!*********************************************************************!*\
  !*** ./node_modules/style-loader/dist/runtime/styleTagTransform.js ***!
  \*********************************************************************/
/***/ ((module) => {

eval("\n\n/* istanbul ignore next  */\nfunction styleTagTransform(css, styleElement) {\n  if (styleElement.styleSheet) {\n    styleElement.styleSheet.cssText = css;\n  } else {\n    while (styleElement.firstChild) {\n      styleElement.removeChild(styleElement.firstChild);\n    }\n\n    styleElement.appendChild(document.createTextNode(css));\n  }\n}\n\nmodule.exports = styleTagTransform;\n\n//# sourceURL=webpack://leaf/./node_modules/style-loader/dist/runtime/styleTagTransform.js?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			id: moduleId,
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/compat get default export */
/******/ 	(() => {
/******/ 		// getDefaultExport function for compatibility with non-harmony modules
/******/ 		__webpack_require__.n = (module) => {
/******/ 			var getter = module && module.__esModule ?
/******/ 				() => (module['default']) :
/******/ 				() => (module);
/******/ 			__webpack_require__.d(getter, { a: getter });
/******/ 			return getter;
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/nonce */
/******/ 	(() => {
/******/ 		__webpack_require__.nc = undefined;
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = __webpack_require__("./libs/js/LEAF/form_editor_vue_src/LEAF_FormEditor_main.js");
/******/ 	
/******/ })()
;